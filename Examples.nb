(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    901383,      18645]
NotebookOptionsPosition[    886447,      18191]
NotebookOutlinePosition[    887562,      18226]
CellTagsIndexPosition[    887519,      18223]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Run the following line to add the package to the path (unless this has \
already been done)\
\>", "Text",
 CellChangeTimes->{{3.48750386720586*^9, 3.4875039129540567`*^9}, {
  3.4875084630849857`*^9, 3.487508465329418*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.483534084037822*^9, 3.4835340864152193`*^9}, {
  3.487503854616407*^9, 3.487503884862125*^9}}],

Cell["Now we can load the package", "Text",
 CellChangeTimes->{{3.487503892019294*^9, 3.48750389627507*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "RiemannHilbert`"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[" Cauchy and Hilbert Transforms", "Section",
 CellChangeTimes->{{3.4839390030910463`*^9, 3.4839390081301403`*^9}, {
  3.483939612251837*^9, 3.4839396149292383`*^9}}],

Cell[CellGroupData[{

Cell["Over the unit interval", "Subsection",
 CellChangeTimes->{{3.483939620701985*^9, 3.483939627338355*^9}}],

Cell["We can define a function over an interval as", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Fun", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "#"}], "]"}], "&"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.484215021304253*^9, 3.484215030113003*^9}, 3.4874852448805943`*^9}],

Cell["We can evaluate at point:", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939064452609*^9}, {
  3.483939585161681*^9, 3.483939589616446*^9}, {3.483943258119294*^9, 
  3.4839432640311537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", ".5", "]"}]], "Input",
 CellChangeTimes->{{3.483943264459803*^9, 3.483943266825713*^9}}],

Cell[BoxData[
 RowBox[{"0.8775825618903728`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.479425538604203`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483943267200242*^9, 3.483943274592771*^9}, 
   3.484206134204393*^9, 3.484214229913796*^9, {3.484214995132251*^9, 
   3.484215028169289*^9}, 3.4842151504994497`*^9, 3.484215515053854*^9, 
   3.484215621911017*^9, 3.4842259647359333`*^9, 3.4843130722075987`*^9, 
   3.4843131229553423`*^9, 3.484314357962236*^9, 3.487485182521193*^9, 
   3.4874852461848097`*^9, 3.48750289294211*^9, 3.48750292479748*^9, 
   3.4875031694150877`*^9, 3.487504423420368*^9, 3.4942242471940937`*^9, 
   3.4942268488587217`*^9, 3.4948471370567293`*^9, 3.494850543472827*^9, 
   3.505465959967161*^9, 3.5054675184828463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"I", " ", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.483943269218576*^9, 3.483943271545959*^9}}],

Cell[BoxData[
 RowBox[{"0.8775825618903728`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.479425538604203`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.483943271922353*^9, 3.484206134856089*^9, 3.484214230482024*^9, {
   3.484214995716528*^9, 3.48421500045795*^9}, 3.4842151532041616`*^9, 
   3.484215515639127*^9, 3.4842259653008738`*^9, 3.484313072725293*^9, 
   3.484313122991475*^9, 3.4843143580038443`*^9, 3.487485182970407*^9, 
   3.487485246751083*^9, 3.487502893004964*^9, 3.487502925279158*^9, 
   3.4875031694554243`*^9, 3.4875044234694767`*^9, 3.494224247241386*^9, 
   3.494226848910514*^9, 3.494847137570369*^9, 3.49485054351889*^9, 
   3.5054659600316973`*^9, 3.505467518525592*^9}]
}, Open  ]],

Cell["\<\
The output format is its real (in blue) and imaginary (in red) parts\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939064452609*^9}, {
   3.483939585161681*^9, 3.483939589616446*^9}, {3.484028006950367*^9, 
   3.484028007251794*^9}, 3.487502907388776*^9}],

Cell[CellGroupData[{

Cell[BoxData["f"], "Input",
 CellChangeTimes->{3.483939069717352*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{-1., 0.5403023058681398}, {-0.9659258262890682, 
     0.5686555578844955}, {-0.8660254037844386, 
     0.647859344852457}, {-0.7071067811865475, 0.7602445970756302}, {-0.5, 
     0.8775825618903728}, {-0.2588190451025207, 0.9666929047107743}, {0., 
     1.}, {0.2588190451025207, 0.9666929047107743}, {0.5, 
     0.8775825618903728}, {0.7071067811865475, 0.7602445970756302}, {
     0.8660254037844386, 0.647859344852457}, {0.9659258262890682, 
     0.5686555578844955}, {1., 0.5403023058681398}}]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], 
    LineBox[{{-1., -0.8414709848078965}, {-0.9659258262890682, \
-0.8225757451366247}, {-0.8660254037844386, -0.7617599814162892}, \
{-0.7071067811865475, -0.6496369390800624}, {-0.5, -0.479425538604203}, \
{-0.2588190451025207, -0.25593910991063057`}, {0., 0.}, {0.2588190451025207, 
     0.25593910991063057`}, {0.5, 0.479425538604203}, {0.7071067811865475, 
     0.6496369390800624}, {0.8660254037844386, 0.7617599814162892}, {
     0.9659258262890682, 0.8225757451366247}, {1., 0.8414709848078965}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-1., 1.}, {-0.8414709848078965, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.483939069798711*^9, 3.484206136107997*^9, 
  3.484214231668292*^9, 3.484215154073723*^9, 3.484215516826083*^9, 
  3.484225966521563*^9, 3.484313073843339*^9, 3.484313123046185*^9, 
  3.484314358038013*^9, 3.48748518437031*^9, 3.487485247938772*^9, 
  3.4875028930554237`*^9, 3.487503169518085*^9, 3.4875044239319687`*^9, 
  3.494224247291358*^9, 3.494226848948861*^9, 3.494847138996903*^9, 
  3.4948505435578327`*^9, 3.505465960151647*^9, 3.5054675186216516`*^9}]
}, Open  ]],

Cell["\<\
The Cauchy transform at a point in the complex plane can be evaluated via\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.4839391057185907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cauchy", "[", 
  RowBox[{"f", ",", 
   RowBox[{
    RowBox[{"1.", " ", "\[ImaginaryI]"}], "+", "2."}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483939107398087*^9, 3.483939116192678*^9}, {
  3.484225978866556*^9, 3.484225985195855*^9}, {3.4875029185173597`*^9, 
  3.4875029191417303`*^9}}],

Cell[BoxData[
 RowBox[{"0.050263873102630176`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.12531250008104752`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.48393911215656*^9, 3.483939116429137*^9}, 
   3.484206137976532*^9, 3.484214233224929*^9, 3.484214295131448*^9, 
   3.484215155929678*^9, 3.4842152050704203`*^9, 3.484215238031602*^9, 
   3.484215517491726*^9, 3.4842156259504538`*^9, {3.484225967587305*^9, 
   3.4842259854349422`*^9}, 3.4843130748448563`*^9, 3.484313123089918*^9, 
   3.484314358067478*^9, 3.487485249837955*^9, {3.487502893102744*^9, 
   3.4875029263820744`*^9}, 3.487503169551312*^9, 3.487504423956646*^9, 
   3.494224247333256*^9, 3.494226848999703*^9, 3.4948471407251368`*^9, 
   3.494850543592243*^9, 3.505465960178315*^9, 3.5054675186561832`*^9}]
}, Open  ]],

Cell["Using NIntegrate we obtain the same result", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939140064568*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], 
     RowBox[{"x", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.", "\[ImaginaryI]"}], "+", "2."}], ")"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4839391410890207`*^9, 3.483939175245801*^9}, {
  3.484225975220736*^9, 3.4842259881084414`*^9}, {3.4875029299098063`*^9, 
  3.487502934916387*^9}}],

Cell[BoxData[
 RowBox[{"0.05026387310263023`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.1253125000810475`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483939171022257*^9, 3.483939175485423*^9}, 
   3.48420613963494*^9, 3.484215520800668*^9, {3.48422596992747*^9, 
   3.484225988320496*^9}, 3.4843130764866343`*^9, 3.484313123145664*^9, 
   3.484314358358488*^9, 3.487485251332049*^9, 3.4875028932378902`*^9, {
   3.4875029329324083`*^9, 3.487502935396768*^9}, 3.487503169590053*^9, 
   3.487504424059154*^9, 3.494224247664229*^9, 3.494226849098558*^9, 
   3.494847142714096*^9, 3.494850543641328*^9, 3.5054659605149193`*^9, 
   3.5054675188117113`*^9}]
}, Open  ]],

Cell["Near the domain of f, the Cauchy transform has a jump", "Text",
 CellChangeTimes->{{3.483939372032448*^9, 3.4839393883495398`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{"f", ",", 
     RowBox[{"0.1", "+", 
      RowBox[{"0.0000001", " ", "\[ImaginaryI]"}]}]}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{"f", ",", 
     RowBox[{"0.1", "-", 
      RowBox[{"0.0000001", " ", "\[ImaginaryI]"}]}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.48393939212958*^9, 3.483939401624743*^9}, {
  3.4875029377409973`*^9, 3.487502939333192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7949395907077212`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0971638880383322`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20006448033863491`"}], "-", 
    RowBox[{"0.0026695137479049525`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.483939396974379*^9, 3.483939401982272*^9}, 
   3.4842061407312517`*^9, 3.484215522115271*^9, 3.4842156276859703`*^9, {
   3.484225972111549*^9, 3.484225993946713*^9}, 3.4843130783330717`*^9, 
   3.4843131232110863`*^9, 3.484314358386607*^9, 3.4874852526930532`*^9, 
   3.487502893279882*^9, 3.487502939677994*^9, 3.4875031696222963`*^9, 
   3.4875044241137667`*^9, 3.494224247739086*^9, 3.494226849153133*^9, 
   3.49484714386825*^9, 3.494850543685267*^9, 3.505465960551619*^9, 
   3.505467518843438*^9}]
}, Open  ]],

Cell["We can reliably evaluate the left and right limits via", "Text",
 CellChangeTimes->{{3.4839394040368977`*^9, 3.483939419151181*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"+", "1"}], ",", "f", ",", "0.1"}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "f", ",", "0.1"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483939427154706*^9, 3.4839394342187433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7949396875737608`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.09716390046026263`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20006447770426566`"}], "-", 
    RowBox[{"0.002669516186493989`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.483939434471574*^9, 3.4842061429215727`*^9, 
  3.484215523635086*^9, 3.484225995516182*^9, 3.484313080120767*^9, 
  3.484313123271707*^9, 3.484314358420776*^9, 3.487485254380088*^9, 
  3.487502893328183*^9, 3.487502941468704*^9, 3.487503169672826*^9, 
  3.487504424165362*^9, 3.494224247823326*^9, 3.494226849199627*^9, 
  3.494847145399838*^9, 3.494850543751833*^9, 3.505465960600548*^9, 
  3.5054675188757257`*^9}]
}, Open  ]],

Cell[TextData[{
 "From Plemelj\[CloseCurlyQuote]s lemma, taking the difference we get back ",
 StyleBox["f",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394620975924`*^9}, {
  3.5054659951046124`*^9, 3.5054659981279383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{
    RowBox[{"+", "1"}], ",", "f", ",", "0.1"}], "]"}], "-", 
  RowBox[{"Cauchy", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "f", ",", "0.1"}], "]"}], "-", 
  RowBox[{"f", "[", "0.1", "]"}]}]], "Input",
 CellChangeTimes->{{3.4839394605338697`*^9, 3.483939466781172*^9}}],

Cell[BoxData[
 RowBox[{"1.1102230246251565`*^-16", "+", 
  RowBox[{"6.938893903907228`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483939464772664*^9, 3.483939467176708*^9}, 
   3.4842061444703074`*^9, 3.484215524820518*^9, 3.484225997785961*^9, 
   3.484313081922394*^9, 3.484313123343815*^9, 3.484314358457695*^9, 
   3.4874852554471416`*^9, 3.487502893388863*^9, 3.487502943682571*^9, 
   3.487503169726409*^9, 3.48750442420999*^9, 3.494224247906591*^9, 
   3.4942268492530727`*^9, 3.494847146601457*^9, 3.494850543791669*^9, 
   3.505465960637149*^9, 3.505467518914616*^9}]
}, Open  ]],

Cell["Taking the sum we get the Hilbert transform", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394848904333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cauchy", "[", 
     RowBox[{
      RowBox[{"+", "1"}], ",", "f", ",", "0.1"}], "]"}], "+", 
    RowBox[{"Cauchy", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "f", ",", "0.1"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.483939489751442*^9, 3.483939493183208*^9}, 
   3.4875029474449053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.09449438427376865`"}], "+", 
  RowBox[{"0.5948752098694952`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.4839394935716333`*^9, 3.484206146490868*^9, 3.484215526573022*^9, 
   3.484225999438743*^9, 3.484313084259005*^9, 3.484313123405047*^9, 
   3.4843143585041027`*^9, 3.4874852581985483`*^9, 3.487502893440734*^9, {
   3.487502945124848*^9, 3.487502948006618*^9}, 3.4875031697841063`*^9, 
   3.487504424263494*^9, 3.494224247989279*^9, 3.4942268493000603`*^9, 
   3.4948471482573023`*^9, 3.494850543835741*^9, 3.505465960665242*^9, 
   3.5054675189589357`*^9}]
}, Open  ]],

Cell["This is the definition of", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394848904333`*^9}, {
  3.4839395514784403`*^9, 3.48393956799076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hilbert", "[", 
  RowBox[{"f", ",", "0.1"}], "]"}]], "Input",
 CellChangeTimes->{{3.483939569217999*^9, 3.4839395716731863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.09449438427376865`"}], "+", 
  RowBox[{"0.5948752098694952`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.483939572071788*^9, 3.48420614770894*^9, 
  3.4842155299122887`*^9, 3.484226000825066*^9, 3.4843130876662407`*^9, 
  3.484313123472563*^9, 3.484314358541707*^9, 3.487485259287918*^9, 
  3.487502893494632*^9, 3.487502952129448*^9, 3.4875031698162823`*^9, 
  3.4875044243149557`*^9, 3.494224248072691*^9, 3.494226849354498*^9, 
  3.494847149171969*^9, 3.494850543884715*^9, 3.505465960706586*^9, 
  3.505467518996203*^9}]
}, Open  ]],

Cell["This is equal to the NIntegrate computed version:", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394848904333`*^9}, {
  3.483939535733748*^9, 3.4839395470700493`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"\[Pi]", " "}]], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], 
     RowBox[{"x", "-", "0.1"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.483939511387453*^9, 3.483939528050809*^9}, {
  3.4875044390717916`*^9, 3.487504439695641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.09449438427382711`"}], "+", 
  RowBox[{"0.5948752098695177`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4839395230923767`*^9, 3.48393952824746*^9}, 
   3.484215531086285*^9, 3.484215632178396*^9, 3.484226002726465*^9, 
   3.484313089333988*^9, 3.484313123538452*^9, 3.4843143585919724`*^9, 
   3.487485260256393*^9, 3.487502893545765*^9, 3.4875029530483093`*^9, 
   3.487503169856773*^9, 3.4875044243557568`*^9, 3.4942242482760677`*^9, 
   3.494226849399233*^9, 3.4948471501144743`*^9, 3.494850543941463*^9, 
   3.505465960787819*^9, 3.505467519042622*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Over the real line of a function with the same asymptotic series at \
\[PlusMinus]\[Infinity]\
\>", "Subsection",
 CellChangeTimes->{{3.483942350266241*^9, 3.483942352792292*^9}, {
  3.4839455399435863`*^9, 3.483945566271522*^9}}],

Cell["\<\
We can define a function over the real line (a mapped Laurent series) as\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"LFun", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"InfinityQ", "[", "#", "]"}], ",", "0", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], " ", 
        RowBox[{"Sech", "[", "#", "]"}]}]}], "]"}], "&"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.484215561208981*^9, 
   3.484215569117217*^9}, {3.4874852690102177`*^9, 3.487485288165881*^9}, {
   3.487485322304699*^9, 3.487485322580554*^9}, {3.4874854277388983`*^9, 
   3.4874854278882933`*^9}, {3.487502984082541*^9, 3.4875029843786497`*^9}, {
   3.494224316344284*^9, 3.49422433414622*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFm3lYTX/U9iuiJKUBv2QsIiFEplqbkJB5SmQq81gyF6GMKaKkKBJlSokm
tTZSiaJRoXk+DScpKuTxXs9az/uX61zldM7e373Wuu/7swZt2L3YTk5GRmZg
JxmZ//fv2d2dLxYX7hZzBrx7oO/6N2TipVc7xMK1YucZMrPOu62L7L2nDrrC
MnGhdt+5QXFLo2e6TqqCwgXilM0rrznZG01W+r5ryzxnC7Fvj0wlpcXrpnyV
rto/y3Sm+H7fGB9Fc+mUQI1Xm3qOny6elUsftv/btanOar9TTL6CqCfRvbnd
r5/Jf6e0R6xeNFVcsCK8uuuTvfF647rFvT0ySZx1b+a7HmHhJi/1q1LU9Y3F
Y8M9vludyYzv5JVgZDZlvGj2++JyizblhP5NUlfXa+PEGKsSmeRD40yDRn0+
5z5mrNg1Wn/RfOtlppNef6nd1G4oHux9vsStelXCrQS7dKPs0eLxHZh5RMsz
QZKnfdX3+0gxctmT40GzAxI+6p4pWDTbQDT56FZfs2hSgpffxqFNb/XF+xKP
QWEWL03LIowVEvYOFwPu6HhpxOWZhn6P9Zw2eZhord1a++txuannAnf/LgP0
xKLzPrMvbK0wjexqcn+N9lAxP/fU6bynaGpsde6g0eghYuU8o/05D5oTRs7W
9/qxVFe8VqYxbR8qY3TeyUGO53XEDkPlJfb/aWOB3DPN7I+DxTm3HhVNPDkE
U/embTyiM1gMieuiOWueAXb16T1b6cQgMaV29n0HI0M86xZTsbh2oNhzivRa
8I3RqC3p93y2zUBRPXlzvFKUHg6/2JSkEDlAnJ0s7x9pqIQXhr074RDXX1Ts
u77O+KwuqFpaL9qa0U+Mk1Y49jhhAmN/Pun5oFlbVPPZ0Mdcby5o+U/u009X
W1xo1yX7guoycGrVsn1l01c8rzV5yuLgNVAww8A7OkhL7DlslP5i143wcJLU
zajpP/FNl58LnjlsAfdJ3muPWfwnblLNjDu6bSf00k8d0BzSR3T2d/Mo6bMX
Pit0c/6j0kd87Tp0dJC5A3y2qlDXcO4trgnf/2WyriPIq8mkvmjqJRpfrL+p
c3k/9Pn8/dDpnb3E9upcc9v9B8Bl9td45QZN8XFshsfY6AMwuUCs/OagKQYf
OPplz7QD0CthjEZhh4bo6yQ1UfjrCAW9rbacvKghOqvbRQ4qcYDoOa5LfQf/
e/06afn0L3vARO5j+9dYddHI2HXijZStIBPU7bbqCnUx5HqfW2X5a8Fortuk
Xz/URKU+KR6/DgqwaFioZPN1NdE4clX8uZlL0G+3x/Mh09RE28D8tC8LtmL+
qQn9u9b2FKuz0pu+7nLEy82VWSU+PUX9Jzbu5v2PoeQ67rto3lN0OSVu1Mk9
hVFK2y2q21RFh2HX7/m7nUMNk+HKaY9VxVctNy7KWnriSVeHWO1NqqJlqNpC
n1NeuPvPtdUxA1TFiytNyqdWemNk0vl3ylEq4nab9lHSnddxyY3mnrljVcT5
t8dlnO59E5V3dB19PaKHeLl5n7etNBAjJONej5jQQyx7k3Qrsug2nhF9xq2N
Vxah4Ei0++c76HGz1FFptrJYucTC9X3BXaxd/qpYMbe7GN6seWBpVQjaN22Q
mbC5uzh03tqu6i33US7Xb9fOX0riAYdnp+XkH2HHoV2PPS4riQGNv50NNMPQ
ZqprN2cDJTGq9PmHnEtP0DB46/6+b7uJ0U3Dwpb7hGOE0Rj7eVu6iWlvDf0m
XY9A33ubGn8odhP3eNxPD/V9ilr3fpnIPVYUj63cu6rgSiQmjdaoW75UUdyk
t3+t5vlnaP3cJa7wt4I4pKvaqJtHnuNAs5Szp+4piLY9mi0/2EWh7MHzYLRU
QZwYnrJXySIadVNmiJ/lFMRLr/dZiboxOKSf3he7p13FvL5OwZtaY1D2fS+T
RLuuYml08w2X17HYs0/Axor/uopnFqlIb7rGYXjgR8+YD13EmXdM1iw3fYFj
frfgmNNdRPuOk/YW9S8wYL+yHwhdxMfrzg3VuRyPn+xb9+S0y4uqW6JP+Bgk
YIDlYoPK5/Ji2G1Xs40vEjCjqGSO3T550XOg7MG50xDHfvXNmTVOXmyN2DOw
XxziD/N+Vse+dxb1A2035WqImGicUNjpWWexMj2z3/ZZIl5Lr694e6CzGDBc
94+JvYh3p2raJE/pLOYMVTlpdk3EhfofA5tkOos9FqhNdIgWMcbXZcf05E6i
U7Hgkpwp4vX8qUWPLnYShz602GdSJWLI3d97DVZ0EmveZjzMbhExWFWn+dnA
TuKc1xN0PDpEPKtrcnp6rZyYfD2p817Zl/hGlPdLfS4n7nc/4H78388XLQmq
mXVSTrx7YkjZm3//v85Le9+ThXJiNq5omvPv/bV8ZY7JDJATda9fnNc3S8TP
taYehg2y4ordvRRmxIh41Mlg8+QEWfHpEOtbWb4idtyI6NTHQ1Z8m/CsIH+f
iIdmBfu+XicrbtN5GLZ5johpU029jMfJig0jrmt7aIlY8CrWfVcXWXFQp33m
SamIQY/+W7Hxs4z456ScpXQZ4sPKn7WqYTKiiofHnVe5CfjT6ayj/SkZ0XuM
Va/tlgmo5fXI/OQqGTHtzKonGrHxuOJw3yLTMTLiT+/kwDrteHx4815RoIKM
2Hlrgtqg/S9w836TIXNe/sWFnzSVS97EoefUHakX7f+ime3YJau7x2Gi04D0
rkP+4jX1VPPXFrH4Sfb2pUd5HZjlcjxjlnMMNhl6Pzvo3oGnusyc1ud+NK7T
2tJ7g1kHvpm6ZvLWtCisKyxM39D+B3UkXfy3Vz/HO+K7Efsi/qBKuf+ORb+e
ocP4nKce2/9gnTAiaV6XZ3h83+qBYUP+4JnMtYkeipF4t8fR1e+Lf2NmQKLD
PPmnuGJi/5Ml/r/RLnHsq8i2cLR1GV5QbfUbqz/t2NNe+QQj374q+tr7Nzqv
uaV483oY9loWpB+d+wuPtQxyTrZ6hFGNLm6O3r/Qr+PDf1lKD9Bz5MUylRW/
sNVh299B4SE47OXvFSf6/ELL7t9cNebcxUsGd/qnfG5H69Qpet0+BeGQ3JCr
X2+0o/6mvnvWr7yFch+MTeLWt+PegNwyqf8NnHtmwfO1Q9sxfX3HtqUO13BS
8tWXb2rbcEfVI5t7Rl74xHCyaU14G846ppk9+fV5fJRePizpYBtCWH56Rstx
tGsPu75SaMMTJ8cfTVfcguv7j0zxV2hDm1FJD9SW28Kedw4yHhmtONw/p01c
eByO3p78cIRfK8p/arZofHQeHP3b5u22a8VW7wU2ZVe9YB9oHl1u2IoeS42z
nW19YctyNUnBr59ovn5D1vDpAeCTlLFGLuUndl4dqqfjcxtyB2c/Fa/8xJcO
5g7aV4Jh/O1TBZobfqLmtjz7SJ8QKNY5X9wx+idGjYjQDbz1ABIbdHMPdvxA
qXNk0dXwx+BfdFJyPO0HjjK7H3q37An0eDFutcaNHygbe+M17I0AWTvXI4Y7
f2B3QdjpIBsJA+/+Dc00+YHHvkx3GXDlGXhuzLFq7fEDTTfiqcHDo8BAsk45
oLgFJ09betdajIZ9w+8sT4xoQbXYvvH3rWJB41Zarp1rC2ZGupg3NsdBdvpL
E5eVLWj0vn2r8uV4SKkNsdAwaMHAeQH1ZYYIHqnHk7RlWjDWYvmAB1tEaAqN
cL+W3Ywtlw48C5r0EmQyH7q6hjZjepqSp6XSK7DKOnarxLkZz87uyL5e8Apg
+rHi+0ubMTvIrtXpyWvo+7bCski/GZ2OX4mrOZkIzruPyjjJNmOUpY5Bxoo3
cKJ5htaJvO/o3LX5tp5BEiRq66XUhX1HpVuGr4tlkqEiJ3Ba3OnvODB1xqHG
nGQ4rnYopXbtd9zzLKttzoMUmGzmGHJ04nccdfC+WH78LTgv7mm8o+d3XOQV
5hGxPBXeKU7OipY04ZsRH3eGGrwD9xTFinWJTZiwqzY4Qe49XHI8XbDhZhNm
XX3xpirvPahf3Twh/mATHv352l8rLA2O7fqwd9eSJlQ7M3qKpWs6RI7U0nIc
1YS/h71udLT+AOF1AS8/KDbhuIvFwW/6fISxXs5yThXfULq/RunVyY8QedjW
+cjLbzjK/dDjBw0f4c+b1YVvb3zDtoIRo52tMqDb6huZmw5/Q/epYfPGJ2ZA
w/7laotWfMPU1qml70dlQnbUSevTRt/QfrdqleCbCZLwBHsFtW/YfqFop3un
LHhQqKaTJW3E6VZL7zzemQX7GjJNKtMaceKt05mBn7IgY8vu68LDRjTLOLpq
3bRseOI5v1fJuUY07BkQVXM/G14cD76StLURa8PBeZJGDqg5Lu6Qzm7Eqe2a
1vOccuCwcfS01cMaUWWdqDagMgcM7lxf3E2hEdMmmrs8np8LBw63Lmn6IMUV
tYG+P5/nwgW3tvMLPKV44qGx3c/+n6D1yt4l+ouk+DBtT6cHbp/Azm1p7HE1
Kd67Mz5UpeETRH5R/7wwuwHN1ZwDBy/Lg9m2G3OueTfg1EdfzUvi8uBl0N9P
y60aMORKdzWLwfnQWOTY66x2A7o3HHddcSYfBrytTxtZXI9/1H9M6daQD/GP
m83M7tQj7uxcarPkMxwdNycpeUs96so9m7Ak+jN03/f4fszIehSe9Vaq0P4C
c66Ez+/9vQ59pnyZpubyBebdO9W7KLoO0xMq0/PKv8CDynd7VY7Voa5Ry/MJ
s7+C9yj7jLsz6zBxw1gV/QdfIeWpU3hQ938/983//US5AHxqKrw6Z9dicY/c
yLe7C2D8xW2yKX61aPjN9oh9RgEUZm0/W7exFpV7xwSFji2Etzdev9xjUIvH
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
fR3/k80veNguhUdWNvbPe3vjhoXdVAx/S6HM1KR9uPplbFFe/9T+jxTMls2q
P9nvAo7quTltX4cU/EY2X6vTOIV3bHXXTvgrhTPvp7v96nMQtw8fsC3q3+tN
yiml/qrr8ISLtfTn/38N/Jp+H/j36f2A34/+HvDfo88D/Hno8wJ/Xvo+wN+H
vi/w96XrAXw96HoBXy+6nsDXk6438PWm+wF8P+h+Ad8vup/A95PuN/D9pvMA
fB7ovACfFzpP8H/n6X/PG/B5o/MIfB7pvAKfVzrPwOeZzjvweafnAfh5oOcF
+Hmh5wn4eaLnDfh5o+cR+Hmk5xX4eaXnGfh5pucd+HmnegBcD6heANcLqifA
9YTqDXC9oXoEXI+oXgHXK6pnwPWM6h1wvaN6CFwPqV4C10uqp8D1lOotcL2l
egxcj6leA9drqufA9ZzqPXC9p34A3A+oXwD3C+onwP2E+g1wv6F+BNyPqF8B
9yvqZ8D9jPodcL+jfgjcD6lfAvdL6qfA/ZT6LXC/pX4M3I+pXwP3a+rnwP2c
+j1wv6d5AHgeoHkBeF6geQJ4nqB5A3jeoHkEeB6heQV4XqF5BnieoXkHeN6h
eQh4HqJ5CXheonkKeJ6ieQt43qJ5DHgeo3kNeF6jeQ54nqN5D3jeo3kQeB6k
eRF4XqR5EniepHkTeN6keRR4HqV5FXhepXkWeJ6leRd43qV5GHgepnkZeF6m
eRp4nqZ5G3jepnkceB6neR14Xqd5Hniep3kfeN4nPQCsB0gvAOsF0hPAeoL0
BrDeID0CrEdIrwDrFdIzwHqG9A6w3iE9BKyHSC8B6yXSU8B6ivQWsN4iPQas
x0ivAes10nPAeo70HrDeIz0IrAdJLwLrRdKTwHqS9Caw3iQ9CqxHSa8C61XS
s8B6lvQusN4lPQysh0kvA+tl0tPAepr0NrDeJj0OrMdJrwPrddLzwHqe9D6w
3ic/ANgPIL8A2C8gPwHYTyC/AdhvID8C2I8gvwLYryA/A9jPIL8D2O8gPwTY
DyG/BNgvIT8F2E8hvwXYbyE/BtiPIb8G2K8hPwfYzyG/B9jvIT8I2A8ivwjY
LyI/CdhPIr8J2G8iPwrYjyK/CtivIj8L2M8ivwvY7yI/DNgPI78M2C8jPw3Y
TyO/DdhvIz8O2I8jvw7YryM/D9jPI78P2O8jPxDYDyS/ENgvJD8R2E8kvxHY
byQ/EtiPJL8S2K8kPxPYzyS/E9jvJD8U2A8lvxTYLyU/FdhPJb8V2G8lPxbY
jyW/FtivJT8X2M8lvxfY7yU/GNgPJr8Y2C8mPxnYTya/GdhvJj8a2I8mvxrY
ryY/G9jPJr8b2O8mPxzYDye/HNgvJz8d2E8nvx3Ybyc/HtiPJ78e2K8nPx/Y
zye/H9jvpzwAOA+gvAA4L6A8AThPoLwBOG+gPAI4j6C8AjivoDwDOM+gvAM4
76A8BDgPobwEOC+hPAU4T6G8BThvoTwGOI+hvAY4r6E8BzjPobwHOO+hPAg4
D6K8CDgvojwJOE+ivAk4b6I8CjiPorwKOK+iPAs4z6K8CzjvojwMOA+jvAw4
L6M8DThPo7wNOG+jPA44j6O8DjivozwPOM+jvA8476M8EDgPpLwQOC+kPBE4
T6S8EThvpDwSOI+kvBI4r6Q8EzjPpLwTOO+kPBQ4D6W8FDgvpTwVOE+lvBU4
b6U8FjiPpbwWOK+lPBc4z6W8FzjvpTwYOA+mvBg4L6Y8GThPprwZOG+mPBo4
j6a8GjivpjwbOM+mvBs476Y8HDgPp7wcOC+nPB04T6e8HThvpzweOI+nvB44
r6c8HzjPp7wfOO8nHgCYByBeAJgXIJ4AmCcg3gCYNyAeAZhHIF4BmFcgngGY
ZyDeAZh3IB4CmIcgXgKYlyCeApinIN4CmLcgHgOYxyBeA5jXIJ4DmOcg3gOY
9yAeBJgHIV4EmBchngSYJyHeBJg3IR4FmEchXgWYVyGeBZhnId4FmHchHgaY
hyFeBpiXIZ5GYJ6GeBuBeRvicQTmcYjXEZjXIZ5HYJ6HeB+BeR/igQTmgYgX
EpgXIp5IYJ6IeCOBeSPikQTmkYhXEphXIp5JYJ6JeCeBeSfioQTmoYiXEpiX
Ip5KYJ6KeCuBeSvisQTmsYjXEpjXIp5LYJ6LeC+BeS/iwQTmwYgXE5gXI55M
YJ6MeDOBeTPi0QTm0YhXE5hXI55NYJ6NeDfh/3i3/+XhBObhiJcTmJcjnk5g
no54O4F5O+LxBObxiNcTmNcjnk9gno94P4F5P+IBBeYBiRcUmBcknlBgnpB4
Q4F5Q+IRBeYRiVcUmFcknlFgnpF4R4F5R+IhBeYhiZcUmJcknlJgnpJ4S4F5
S+IxBeYxidcUmNcknlNgnpN4T4F5T+JBBeZBiRcVmBclnlRgnpR4U4F5U+JR
BeZRiVcVmFclnlVgnpV4V4F5V+JhBeZhiZcVmJclnlZgnpZ4W4F5W+JxBeZx
idcVmNclnldgnpd4X4F5X+KBBeaBiRcWmBcmnlhgnph4Y4F5Y+KRBeaRiVcW
mFcmnllgnpl4Z4F5Z+KhBeahiZcWmJcmnlpgnpp4a4F5a+KxBeaxidcWmNcm
nltgnpt4b4F5b+LBBebBiRcXmBcnnlxgnpx4c4F5c+LRBebRiVcXmFcnnl1g
np14d4F5d+LhBebhiZcXmJcnnl5gnp54e4F5e+LxBebxidcXmNcnnl9gnp94
f4F5f9oHEHgfgPYFBN4XoH0CgfcJaN9A4H0D2kcQeB+B9hUE3legfQaB9xlo
30HgfQfahxB4H4L2JQTel6B9CoH3KWjfQuB9C9rHEHgfg/Y1BN7XoH0Ogfc5
aN9D4H2P/wHXrALV
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3dYzu37x1tEGWmIpIyISCgjqvNjhezo8UWerGxCZSZCy8iIkhmJerJK
k+r8lKShvbTvu5QkJIWyfv2O4+2vjvs4Ouq+P/d1ndd7vK7B6xys7eVkZGQG
ycvI/P9PbwcFH0mVg/hy/Ey/LT0/j5h8Pnm7WGUn7h8xr2mD09FIzV1NpEg2
ot7990WH1EZNnuVu+paqFok6X8Z5TpSd8lT5y87N813nijozTS+3R9g+q/i0
cq+lxSzx/MthiYWyBmaB6skb+0yYLl71MJ+pZRRl5qr6M828gsS0msX328f1
SOh/QnuU7RIzURLlfPzdzRHm+sZKz9IPmYqaydY9ztYEJCQZvE1TM5gkzrt2
RpKuUm8u75toMmPqBNFrzxF9pf09EnVaPrm7XzYWC7dOckmWHZ8YNKbs5Jlx
48V11aucxuxabGH6vPz9xo6x4oFzEcplEc4WtxLts00KjcSUcnOV+p9bLRpf
a18K+GIoluvH11zRuZaYq+dVuWTOaHFjcIJjgWlsou/V9cNb0g1Ej/CGscsK
kxNrIyZ1S9w9Uhx0Zvur66qPEkO/PD03bcoI8dt4/Xv2Awstzi06c62rrr5Y
XGj3eHxts0Wkovl/q7WHiwdHurwdcFKGJq04ud/EaJj4fMq0+LhJ3chwjoHv
12V64oKpJetrTZUp9vXxwc6nhoo/tbdqedkqUKVclEZh7hBxzO3Y0NA5LxMz
dmetPzR0iLj5pJ3eazkNVvTXnKN8bLDo9me3c3XMSPb2iKuzfj9IDPt55uPs
woms3Tgwes6/g8QZz05pP54/jUf6tKR2i9QVez08lF13fTafHpF5zPGZjvjt
ltWr9YkLWGXBqiVb8gaK98OmJUw/sITHf3vcJ6xVWwxudBayJi1lrWtT+g3U
0xYNtHZohUcu5cPftTYk/ztAjN82r23OWWuunDnaLzZIS/Tu/cPhTO1Cvm/6
ycOkpb+45/7n6kKDmXzG1M/uyNz+osPoLUpvRg3hvgYZuq0h/cRed9XOVZgL
VNZNyfVX737iz985i+bp2VDZijo1dVdN8Z/kl7d3r11HXVRlMuJb+opa505k
fXLYRv3Kvhzw3NFXnB+VY/WsYA+5zalI6PlRQyxqWVvax3k/TakU6z87aoiG
OrP+iN6u1DdxnHrVb3VxwRKrGw6ux6hSc8Xm4z7qomzGncCYcneKtXJfFjBE
XdxqHNr30GJvMpfL7ah4qiaKbTZ7FHJPk0yQ0m2V5Wqigt/ALU+GnyOTeR6m
P76qionzQhUqKs/TkhGhjZuuqIr3bp6NGezpS1cdzkYPm6Yqvphm8mCl9iUq
PTFRR/F9H3H146Kom/5+dKG1vkDq30eMXx34e+UXf2q8wk4+s/uI8w4cv7zU
IIBilLfNbWhXEacrblKPnnSF1M1H9sx6qCJGuY1y09K8SsfdHZ9qb1QRtbZm
9/dKuUoOvy7bxumqiFaFup/3ml2jyNRTmT1jeouSKzvrcg5do6XXW/sUj+8t
Vk7TGvL+yDXquV3R6EpEL7FR/7LDGctrFNFo/HzUxF6imbHf6TdZV8lL9De2
S+gpZsflpBxTv0pnb9Q4K8/pKS64PrB1Rf8r9P6fZEn34h5inbGjTnT5ZdrT
sk5m4qYe4m3tVp60yp/kiq/u3PFDWZwxYcyXLP9L9PvAzodnLyiLzhPzPB6f
96V/zdyVXEcri5v++aO5cu55Ghu8Ze+AdCXxgmZvd4UjZyjCZNye+ZuVxMlT
f78zavSkgHsbm792VxL/5Lq+3VfsRlr3fpjLPewuKrb9mP/x9F5KNVJv+mdZ
d3FEzNKjq1vX0Kpot2dVP7uJyl0bHZPUVvKgGWneJ+51Ew+82Xzaf8telt1/
ikyWdRO3ufW4NsPvOOulzRTL5LqJrqn2SWrrT/Owgfrl9k8UxSMpimJw5gWW
fdXXPMVeUWyaPLnvTn9/7tPv5vq6/orijszI2JwL1zg8MPdcXE5XUTH2mmVJ
ZSCP+9nG4zy7itetLPu1egbxzb09r5LQVVTVkYwNs7zLJXu+7yrq6CJqX9h3
paFfKN9cYD26PrqLWDN4ptflX2GcVy21snfqIv64NcQs5MtDHl8RUGRp3EUM
+m66Vf7XY/46e+CKI18UREvNVtkCzwhOmZRYJR+lIE47tmplQv9Ivpz9oS59
n4LYa9zqVxYRUXzXTOPfl1MVxHdp7wqKFsfwYoPcwBYZBbFG0m4p3xbLcQFu
26e/lBdrTnVzt7rxlK+UmlU/8JEXP2wIvDlufjyH3P25e/RyebGy2sdl2u8E
DlYZ2ho1SF6s6zu3pUsks7eeuef093Liwh3HPnlEi/xC7HI1I1pOPGd29Lrz
xSResjToneVxObEuc4JvgGMyN/lqOz1eLCfWFj5oT1z6nLUCZI7I6MqJW900
/Z6YpHDZe4uzYz/Kis8NVmda9n3BLodHb5qSKCvqpVtdmfv9Bf++HiHf76ys
+HH+tkCfslQ+YBkc8HyNrCijnKTRGP+Ss8wsfCcZy4ozjh5MH3czjSuTn57Z
2VVWnN6RNNDcLZ2DHvRfvr5MRtTRT5GrW5fB9+u/vVd5JCPONFL8LD8zk78d
9nbec0JGjEoZWeus94q1fB/MPr5SRvQ/pruon0IWLz84oNpinIy4VeW3TkZN
Ft+/ca86sFvn64jtodvEbN6013yYVdIfjlyUGlp1LYfPmW3P8Nnzh9sn/R4g
b5bLKYd1sxWH/eHJw/XW1Ibkcons7fMPXv/mw7Urf8lp5HHLWL+o/Wd+c6Dj
3N02R/N4jdZmzXUzfnNFZH1xdmMeN1VVZa/r+MU9nIfWrF+Wz3fEzFFOEb84
I8i3vHtCPjtOKHpydtsvLu+idS1ar4CPOtkOejTsFw/ZFuC15lQB3+3lYvtK
8pM7D4Qzv5sLePlknePSaz85dd/uAV42hbzBbWRlw4rO12+sBrfFFnJkenJ1
heZPtlDK7m4xoIj72gQZxBb/4JL7odGrXIo4ptnNw9nvB8dtuecyu6KIzxn6
1PZe/oNrMhJ0f0wp5hFJP5cf6/eD5wRMyNl1uZjPj76jk1bWwVeNawcHtRbz
sOKQSxXXO3jIaSfVM4tKWC5nkvmztR0cu6Dwx8jQEp7ntSjabngHO528fclZ
9jWbvryU9OJ9O7tNed687X+v+fHYKRbvwtvZ7qmcU/eHr/lB9psRqfvbud/a
3NdWcqVs3/Hoyv+Edj5s0nuEoU0pr9UxTLvWrZ3bHv2MfnC3lHdlOsqczfvO
KscN9TK+lrLL7Sn3R139zm6DApcdnVXGztfa5zvYf2f9d292ZV8oYyfScPln
7HdOj1pVE1FVxpv/UW2s/PGNr+/3WDx6ZDn7p+atlkv7xqn3dt0w3VPOxUMK
n4gXv/Ei7VENpXHlPOH2iUqNdd94mZLt0R4yFSwZekry2+gbez+p+ZA7s4JT
PuoV7//9ld13+bwb7lXB16qPNx7N+sph/zWs6pVRwb3ijW3Vr3/lk6v7rPJU
qmRZe/dDY3d8ZdOoByMuzK3kQXf/hOabf2Xr1Q1GRp6VfG590Yrvvb7yPrXj
8nbPK3l045qeNyVtXNK7fdWQ35XsNPLOPykRbdxaFK5xcFIVq9/KKrZ3b+Ml
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
+dc2oaOcs24laOedkHBH900HtmeV842vA1Un2Eq4q7JefdzNcp55zzYo2VjC
rwQF9Xu7y7kp1I8OKHeuo5l9dk2YUc7ZZzY+epxazbNvd6zbqF7OV8ui4xP3
VnNft8FLptaVscGWmrMD9Kt52sI7V6KiyjhDrbdGakkV6+7berXYvYyXqURO
TfCq4mr9sWE3bcr44hfvr39Mq/iEyoWBqsPKOnXhoaln3ley3Jj+041aS7m4
3ld+w/VK3upnueF7cimfcW21Or6oko9Z3szceb6Uc02TVBplKzniU8wzX7tS
Vjmnvtw/soI1XghOmw1L+V1u85CTmyp4p2WfcR87XvPtSeNdkrQqWL6bicHw
tNdcOt1th1l2OdvsbfHtc+k1Jy+cpdDhVs4xFyU3wte+5n93+S9un1DOlVEN
+xTHvGa5cxPsTRvL+Izh8jnqHSUcl+S8PO5GGR/pqJtQ+qKEG0tNaf/SMi7Y
lLZu+fkS/mlWO9G5WxnbBEd/OGtbwnMbLFc9SijlaJv2z8f1S1h4citzmGMp
r1d19jRpKWaDl6dDS0aUcs83Ucm344t5w/yWfilVr/nco47IHI9iDp8nJzRe
fM3n/YTt8YuLeV+y/uy5817zmnkLv2zRKubTDb/+J+nUoReX85LS2iK+c3fW
7YexJaxv0/u08oMibpxavuSJQwmv6x8cJLu3iMv63L/8YXgJH82r9Iu3KGKj
hPuhtlXFfESl31pzxSKuMsiJ+3OpmOWzEztO5BTyx2/f/xQtKGbRZtmKi/6F
bPelPbKqSzFv1z/ssN2ukD+kHVPrn1jEualKhr30C7mwYMD/TnT+n+JDXY8c
/FjA1/ppJ+kaFfFmufhFEVEF3Loh0KfxbSFLR6Z4RLsU8KuLx+TeBBayyobe
3b1mFPDNH4vXKK8s5N0zmmP1lQrY+vOsD3ZqhVzcMGyvX24+n3ajZsmrAtZY
Uz+wyC+fa81iws94FPC79w0n39jm83eDp4fshc6/K+y69GJIPidWSAI2deTz
+4fL1A405LHpjdkrfCPzWXlqr9d/HuTxy1SPbg0783n33cTIlY557KAf9m3D
yHzOsp+6/+TkPF7oN2Z/9zd5nR5a89PZX7kc4NdcUXgjjzU8H9RuS87ludpG
B1NX5PFO9ZE6up653H/bkeBK9Tzun3Juw3/zcjm/98uo/rm5/O+TnIO9VHLZ
7YuJ/MFTuZxh7DrrckgOSz2nvP1lmcsD/ewmp43N4YU93OPvyHX6sgVv5z6M
zebDRR8Syl1yeGZb1ud5QjYb/m/68vDWbLa8/SXo9sss9ul6UDZ9ezZrb9yT
+2RhFh+utDo0uC6L/R8+rj1a9IoLqm65x63OYjlPR0tl21dcGupXe7b4Ffd4
2rx6WU0mF5vZrQxa9IrDCiWnVm/O5MKqGeEtaZl8VOn8mBEfM/jUWN9wl+mZ
LP+zNTDKMYMXrvcbLsRncOy/sVMU29N57CX3yqkTM1jea/FiHdd0XrDEJXjn
43RuKetp/FMuna2Ndy4qMUjnRf0Nx932TGOTBwMeOgWn8b7LDZf69Ehjm49d
/WYNSuPVK71D5517yf3eb66cc/UlGyvvD1+i/pJ7nBhue7jvS9Z9s6BZ73Iq
P8t88V56PpUdHeuCUwek8s6t6zc590zlD1bbek+++YLzdULCJnq/4BUXd246
OOQF169M9NPr8oLHnflc5xOcwpN+zu5m4ZbCQe8OiHtHpHCCzjKp26/nfFJ3
sIFx2HN26G6j8OnAc04MuLP0heFzfmvc1+bE12S2LXTeNuZxMs/aEBErOCbz
4XUZ1x3GJ/PZN94aQ5uTuLYyTP1kZBJnZ09earAjiRWTFL+7Tkxicjiz0qZR
ZMvRvGNRrMgZz1w1gjaJvN8vOuCnqcgTxFlVehnMSwsypvbex2z2bN69mS8S
uahfpkntgUTed/jomiAxgV0ed1m1zyWBh8etqreIj2fPHxffZrnGM+2Yq6kR
+4yNHpqovDv6jNVj/AuGRj7lXtZrFDOPPeWeLzb82vw4jsfe2/3T+UQcz3t3
en/N/VhWr0sc0OQeyxEZlw18QmPYpyLWx8gzhmc+CevYcjeak350c5nuFc3H
OnbnOQZFsf2ER4r63lHse7J3QGhgJG99pbu02juSG1x7mXe/8YT7dVl7eMfJ
JzynfMF/565G8If4EUEFJyO4YUVztnlAOJs2tlepnQrno4vmXenl/5hfKUyf
O/bUY54+J6xd1uARXwpvarbp+4jV2DB32PAHfMh7nVyPvg+4+ezo6yeGhLFD
2o0mD40w3qJ3cbaWbigPXtw/P0M9lLfO6BlbM+Aeyz+bnl+udo93PCp/Xdov
mLdYJXZPVA3mFZL4Sz80glgl5uoF5z5BnFCcWj5D7RZvrT93oqvKLd7Xw2f8
6sE3OL3npsZ32jf4duj0Qw7aV3jlKPtm7/5X+MGKf/dEa/qxR6AutWn4ca2F
ecdItQu8b0TEN2PVCzzDxvLD8YGneWyix+5r2qf5qmHr5Sb1E9zh89H8cudP
r1fTPX70289dWz00Sjp/buyZVnNNZQ2XXEs1utL5E68Jrwm/T/h9wt8j/D3C
/yP8P8L7IbwfwvslvF/C5yF8HsLnJXxewvMgPA/C8yI8L8LzJDxPwvMmPG/C
90H4PgjfF+H7InyfhO+T8H0Tvm/CeiCsB8J6IawXwnoirCfCeiOsN8J6JKxH
wnolrFfCeiasZ8J6J6x3wn4g7AfCfiHsF8J+Iuwnwn4j7DfCfiTsR8J+JexX
wn4m7GfCfifsd8I8IMwDwrwgzAvCPCHME8K8IcwbwjwizCPCvCLMK8I8I8wz
wrwjzDvCPCTMQ8K8JMxLwjwlzFPCvCXMW8I8JsxjwrwmzGvCPCfMc8K8J8x7
wnlAOA8I5wXhvCCcJ4TzhHDeEM4bwnlEOI8I5xXhvCKcZ4TzjHDeEc47wnlI
OA8J5yXhvCScp4TzlHDeEs5bwnlMOI8J5zXhvCac54TznHDeE857gh4g6AGC
XiDoBYKeIOgJgt4g6A2CHiHoEYJeIegVgp4h6BmC3iHoHYIeIughgl4i6CWC
niLoKYLeIugtgh4j6DGCXiPoNYKeI+g5gt4j6D2CHiToQYJeJOhFgp4k6EmC
3iToTYIeJehRgl4l6FWCniXoWYLeJehdgh4m6GGCXiboZYKeJuhpgt4m6G2C
HifocYJeJ+h1gp4n6HmC3ifofYIfIPgBgl8g+AWCnyD4CYLfIPgNgh8h+BGC
XyH4FYKfIfgZgt8h+B2CHyL4IYJfIvglgp8i+CmC3yL4LYIfI/gxgl8j+DWC
nyP4OYLfI/g9gh8k+EGCXyT4RYKfJPhJgt8k+E2CHyX4UYJfJfhVgp8l+FmC
3yX4XYIfJvhhgl8m+GWCnyb4aYLfJvhtgh8n+HGCXyf4dYKfJ/h5gt8n+H1C
HkDIAwh5ASEvIOQJhDyBkDcQ8gZCHkHIIwh5BSGvIOQZhDyDkHcQ8g5CHkLI
Qwh5CSEvIeQphDyFkLcQ8hZCHkPIYwh5DSGvIeQ5hDyHkPcQ8h5CHkTIgwh5
ESEvIuRJhDyJkDcR8iZCHkXIowh5FSGvIuRZhDyLkHcR8i5CHkbIwwh5GSEv
I+RphDyNkLcR8jZCHkfI4wh5HSGvI+R5hDyPkPcR8j5CHkjIAwl5ISEvJOSJ
hDyRkDcS8kZCHknIIwl5JSGvJOSZhDyTkHcS8k5CHkrIQwl5KSEvJeSphDyV
kLcS8lZCHkvIYwl5LSGvJeS5hDyXkPcS8l5CHkzIgwl5MSEvJuTJhDyZkDcT
8mZCHk3Iowl5NSGvJuTZhDybkHcT8m5CHk7Iwwl5OSEvJ+TphDydkLcT8nZC
Hk/I4wl5PSGvJ+T5hDyfkPcT8n5CH0DoAwh9AaEvIPQJhD6B0DcQ+gZCH0Ho
Iwh9BaGvIPQZhD6D0HcQ+g5CH0LoQwh9CaEvIfQphD6F0LcQ+hZCH0PoYwh9
DaGvIfQ5hD6H0PcQ+h5CH0Togwh9EaEvIvRJhD6J0DcR+iZCH0Xoowh9FaGv
IvRZhD6L0HcR+i5CH0bowwh9GaEvI/RphD6N0LcR+jZCH0fo4wh9HaGvI/R5
hD6P0PcR+j5CH0joAwl9IaEvJPSJhD6R0DcS+kZCH0noIwl9JaGvJPSZhD6T
0HcS+k5CH0roQwl9KaEvJfSphD6V0LcS+lZCH0voYwl9LaGvJfS5hD6X0PcS
+l5CH0zogwl9MaEvJvTJhD6Z0DcT+mZCH03oowl9NaGvJvTZhD6b0HcT+m5C
H07owwl9OaEvJ/TphD6d0LcT+nZCH0/o4wl9PaGvJ/T5hD6f0PcT+n4CD0Dg
AQi8AIEXIPAEBJ6AwBsQeAMCj0DgEQi8AoFXIPAMBJ6BwDsQeAcCD0HgIQi8
BIGXIPAUBJ6CwFsQeAsCj0HgMQi8BoHXIPAcBJ6DwHsQeA8CD0LgQQi8CIEX
IfAkBJ6EwJsQeBMCj0LgUQi8CoFXIfAsBJ6FwLsQeBcCD0PgYQi8DIGXIfA0
AngaAm8jgLch8DgCeBwCryOA1yHwPAJ4HgLvI4D3IfBAAnggAi8kgBci8EQC
eCICbySANyLwSAJ4JAKvJIBXIvBMAngmAu8kgHci8FACeCgCLyWAlyLwVAJ4
KgJvJYC3IvBYAngsAq8lgNci8FwCeC4C7yWA9yLwYAJ4MAIvJoAXI/BkAngy
Am8mgDcj8GgCeDQCryaAVyPwbAJ4NgLvJoB3I/BwAng4Ai8ngJcj8HQCeDoC
byeAtyPweAJ4PAKvJ4DXI/B8Ang+Au8ngPcj8IACeMC/vKAAXvAvTyiAJ2Tw
hgJ4QwaPKIBHZPCKAnhFBs8ogGdk8I4CeEcGDymAh2TwkgJ4SQZPKYCnZPCW
AnhLBo8pgMdk8JoCeE0GzymA52TwngJ4TwYPKoAHZfCiAnhRBk8qgCdl8KYC
eFMGjyqAR2XwqgJ4VQbPKoBnZfCuAnhXBg8rgIdl8LICeFkGTyuAp2XwtgJ4
WwaPK4DHZfC6AnhdBs8rgOdl8L4CeF8GDyyAB2bwwgJ4YQZPLIAnZvDGAnhj
Bo8sgEdm8MoCeGUGzyyAZ/7LOwvgnf/y0AJ4aAIvLYCXJvDUAnhqAm8tgLcm
8NgCeGwCry2A1ybw3AJ4bgLvLYD3JvDgAnhwAi8ugBcn8OQCeHICby6ANyfw
6AJ49L+8ugBe3QI8uwCencG7C+DdGTy8AB6ewcsL4OUZPL0Anv4vby+At//L
4wvg8S3A6wvg9S3A8wvg+f/y/gJ4/7/3AQTcB0jEfQEB9wX+3icQcJ/g730D
AfcNLHAfQcB9BAvcVxBwXyEB9xkE3Gcwx30HAfcdEnAfQsB9CHPclxBwXyIe
9ykE3KeIx30LAfctpuI+hoD7GFNwX0PAfY1Y3OcQcJ/DBPc9BNz3CPk/oFgG
vw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.5473808101222827, 
   0.9999961543035598}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483943284903302*^9, {3.484215535890292*^9, 3.4842155695421457`*^9}, 
   3.4842156344392567`*^9, 3.484309292550302*^9, 3.484309626113652*^9, 
   3.484309678640545*^9, 3.484313091646225*^9, 3.4843143589752274`*^9, {
   3.4874852696384363`*^9, 3.4874853227917833`*^9}, {3.4874854258096657`*^9, 
   3.4874854283962927`*^9}, 3.4875028939875526`*^9, {3.4875029635430117`*^9, 
   3.487502985058034*^9}, 3.487503170305254*^9, 3.487504424789427*^9, 
   3.494224248721817*^9, {3.494224318207287*^9, 3.494224335911517*^9}, 
   3.494224369717019*^9, 3.494226849805245*^9, 3.494847173718584*^9, 
   3.494847267477282*^9, 3.494847352966016*^9, 3.494850550712755*^9, 
   3.494850592581167*^9, {3.49485097709093*^9, 3.494850987547051*^9}, 
   3.4948512410503263`*^9, 3.5054659614733677`*^9, 3.505467519561426*^9}]
}, Open  ]],

Cell["\<\
Like an interval, we can evaluate the Cauchy transform in the complex plane \
(note that NIntegrate needs high precision arithmetic to compute the same \
value)\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943867662326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"f", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "t"}], "]"}], " ", 
       RowBox[{"Sech", "[", "t", "]"}]}], 
      RowBox[{"t", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.48394329305892*^9, 3.4839433207561693`*^9}, {
  3.483943369247134*^9, 3.483943369334272*^9}, {3.483943752798101*^9, 
  3.48394385506581*^9}, {3.484215556470985*^9, 3.4842155580223017`*^9}, {
  3.487502965463476*^9, 3.487502972915853*^9}}],

Cell[BoxData[
 RowBox[{"7.779887845060784`*^-14", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4839432977574778`*^9, 3.4839433210960817`*^9}, 
   3.4839433695202513`*^9, {3.483943750665978*^9, 3.483943753659663*^9}, {
   3.483943802607685*^9, 3.4839438554225607`*^9}, {3.484215536979582*^9, 
   3.484215572402323*^9}, 3.484215635743203*^9, 3.484313093355335*^9, 
   3.4843143592042513`*^9, 3.487485433096916*^9, 3.487502894233472*^9, {
   3.487502970856703*^9, 3.487502987654356*^9}, 3.487503170461014*^9, 
   3.487504425069079*^9, 3.4942242489254913`*^9, 3.494224369986208*^9, 
   3.494226850040409*^9, 3.4948471746503067`*^9, 3.494850550960579*^9, 
   3.494850592756364*^9, {3.4948509772661057`*^9, 3.494850987832984*^9}, 
   3.494851241225669*^9, 3.5054659618269777`*^9, 3.505467519911304*^9}]
}, Open  ]],

Cell["\<\
We can also do the \[PlusMinus]1 values, and in fact we can compute it \
globally\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.4839439215530243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"+", "1"}], ",", "f"}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "f"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483943899242447*^9, 3.483943911546715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9m3lYTf/39k8JiZJmDSRzQhQlZW0yZMiHDCkhEqGSEqVBKikqmcpQREII
DVJRazeq0KRJ8zycE1KJEn6e71nn+ct1Ll21z97vvda97vu1puw7amItzOFw
VEdwOP/v34CjIsGN9UdZDlNqnH62NF33UqYtW7+H5TickKg725su79ANo2Eb
y+FYlZRUiOCqs0s6oP4/lhOoNnO7nxSO7bO32eC5luVYOD0/1quMtV/NT6xe
torlzNOS+105DSNlMg9MWLSC5fjyJoTv0UBPqeE8g1pgOTqmPyb5L8SJvspz
LDbrs5wG0eBRzjo4U0vsdb7bEpYTJ3bo5oA+Zqh35Emr67Bep2OlXPyW44gr
6dqGSxexnL4x0uNrV+Kk3q9nz17XYr0W7agZ626EUfOqzwctWMh6FXqq2R3Y
gEuyangHhjRZZrrRyA7jTXg33bpQu2w+y/rq3Q8KNkFulfK1G31zWXaOea1n
/1YsnuZft9lIg2Xjt8sVuJvilVtWM3rz1Vkv1Xn3gqaaY0u8jmj6sdkss82w
QqrTAmP6UkOW681ivdb1+WqU7MGQ/4LCR02eyVrmRikantyLiaMNHu9SnsE2
JkZ7RKhboY7ZeRft+dNZjrlp3ppx1jjXSP3KwNZprKrIs/I41YOYXOUzxfnC
VJbjH6AWbnUI64RfypYVq7GRRiMkbHKPYMGxD1ZuU9VYpn9VfoimPY4Okzca
6z2F3ZR4+YLocgcM8EtpM+GpspEiK0oC1x9DZa5KktFuVban4ZGLxgxHnB3c
myuaOJntgfyOSxmOGDjrnbfT60mspN3a125STihpvHPzoRIV1oE1eykk7YQL
f7yY8KRfmS0WkTthnOWIiuF6CirTlFmO2qWagtmO6PFTcX/mbiW2+IzquSaT
Y1i3UiM0OUqRjbxzPXLTJgd8uuSrn3bvRJZNXjDnkoM9Bi0J3XN67URW9R13
42sjW5RTL5jc/0iBjVS3Ky63PIzVomKev8crsIxq3KdvvTZYbdYmLeMpz0bq
xvjbLbHBkVKcgje9cmxjxYDvJDsbVKjucz1nJ8dacubsz8g6hGeMatPEv8iy
7O+Wown2tqhXx7Z/c5JlOZGXIn5tcEC59AUy9X9k2E2iy3awi5ywTt7MxidY
hu1RjzHdK3QSk9ed3XpDTYZlhXP2LH3jhgbCxUO1qdLsJhmVh9GvvJATJXZP
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
B8NhPv5v3+P/AMtd0Ww=
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3dcj9/7xxtGw4ioJIRoKDsJuW4jhGwSmSm7jPIpKjKyK6I0USEjKRSt
645KQ3vv96iklFSirF/fzvX7y+P9eKRx3+dc5zWeZ+xu23VWUhISEurSEhL/
+/eybR93QbUtn5kVs/iHvwnOvvHuEF+9gx+dYRPk7m+Oyke+QH/YyPO3Lftq
zbRE4wuGn6B6NW89Q3Vuk+9+lG+32bfSxYRXez+ksOKvLVZ+3XJiyXxj/qRQ
S3n3tON4b9g76yH6C/nhao+kYnafQJehv9OMKoEfFpCktdbLEUecV5tksXYe
n7g7zmfYeyfUnCEXl37KkL/5d4io9ttpTNL5lKaoY8BHR9qcy/dwRWmvxJmL
5urzL1OSm0dOPIej275euHBnBj87VjsD485jyOTyK9enTeeT4po2Pl3jhobv
K5qsu6fyua/OvM+svYj3E62yZxZO4S2WTB+r4XAZG0vVbvu26/FLje0V8+Wu
Yq7Gpaq1y3T5lw+2hRQGXEMvf8uJbek6/OQXtzSj9NxRHGUgk3hUm9ddLd9n
a7wHPm6P9VwwR4uvlZztmRLiiZ6rrwf0G6PJW+sYlC/bewNf9Td6sk1tIn/Z
tY+cgvZNNDC/4jBzygQ+0f9TvEXjTdRbpuPVuUGD33QsRXpJuBe+KT031v7q
eN7sRUaghd0trJJ6PbwwdxzvNNJ75diFtzHjaJblqfHjeOcYv8ojKt7Y30d5
mfzZsXzTSPtp/X5642W3t3XrmtR5ruWZrJbAB9UaR0Uv267OG4mcL17NvoPa
7m2pMq/G8JHakv770RevaWWePR43ml+qcawxIdwPFUy3rt2fN4r/+z1nSLCX
P07/8WLI0w413v6Qp2XMgQBUDZijMkpDjTfr7PpwUzcQnX+q7nm3fSSvuXZI
u3pBIFYt1vV+E6LKTzDpp/t7cxA+M/zqNrNtBL92cHJixNsgvG7oveO0yQh+
osXQ4E/fglBJJ2NMR5gKb7J6Uty1f0FYLiPn8mewCq/18NOJHGHPZ/M6xWEu
yryc9YA5432DsO9QiYz4NiU+6eDwa3qaQahS3u548bAS373equWpeyC6LqtM
GNgynB8VazZpfUEAzqni678dH85fHHI+4EmXPyolThtW/XcY31/f7WpdP3+s
Ujbfd859GL9cPfZgvIQfvll+YYPvuGG8r++cFUub76CRVG53Zawiv7l8n0t5
vg9KhMgFK5gp8qePWMytj/HGmSvcDH91DuXNNOZ7lwXfxrVajxv3+g3lL64J
GyHrdwv9bT2iJywYyruor5f1DfHCsvOzRvdvGsLbflEwOphyE2921BcIfYbw
b3567lPoexMb/dDOfekQfu2x67fie9ZPjPxBk4YuBf52KJyd3+aJw4y0B2Y9
V+DvNM0O7wrzxHMXjseqWSvwvlrJASIPT7T9c8fi7RgFng+pM3B+4omvUq9m
DowZzCv9Vsqr/OWJ6wM7hhRPH8zHB5mGPnC7gQMP9Z/iFzWIP7DV2G2w6U2M
apzxftKsQbzl7Oorn9d44SXeZ8aOhIH8m/vnDgd53UKPIJG9/LKB/LK9l68b
Knlj06Z3AtniAby+wdaNh8p88FjbbolZewfwvkbJn72qfFGq2N/m8C95Xsqw
SArHBeBfR5vnHjflecsi56KXYUG4fd4FORddeX62sfbvkzH3cOqD/SdGpsvx
E/iVI6znBGPUzGnHVu6T499r3lMMqQxB30fWrZ2ycvzkJveGe4EPUPXRLyOp
57K8kW+e5RunR5g6ZdiXTRtk+daDg0ImOz7GrdGucdW/ZfhlY7Y7GNx8iuqL
0i6ffyTD5w09/eRHajhKOlyFmRtkePldtZcWyb9AjbTFfLmUDH943tdlXRCJ
E0ZpVli97M8/Khnxc7RrFEp+VDJKturPuzkqJ0/PfolDVO5a1o3ozy+dm98S
MfE1Rt7L9Xyb049XLzt5cfCVaJz2+ztOu9iPt/DtUkz/EYN3Twz0B64fr9Zy
ZdJ627dYcuznkaLuvnzJqqnSGq2xeNd0nW59dF/eMjbnS6RjPObVCJdb2fXl
H55+mX5cPhGnV/oWLZnRl98SuuSoMBSxc+ko89Ptffj/Yrb3iw3mMdkgsVr6
dR++0Admrj+RhHeym+vS/+vDr339K7B75Tt8OG/49g9z+/Djdq54ZTvxPa7R
yb3XJtGHT/hjqnJcKhnf+roeWvhBmn/5afLLVEEy+pXNqwl3l+atRasy9JJS
MOzh76O6ZtJ8eYmxwuGQVHygML7jtbo0jyk/o5Zf/ICXNYwuLmyS4msrB+11
P5SGKXxf/4xoKb76WtcRyfXpuHZ9yOcl56T4Jcr5T23mZOAXLzW7F2ukeP/A
2e7B4zJR1VfitMQYKb57n63eQfmPWN4032NqiyQ/ZHLJ/DsdH9HJWXfvnERJ
flrFP+VfVVn4NzBKWsVDkjefcijc+kM2Oi554Pt+pyRvr6vvGfEiB7Pmzfcy
mCHJRzat+160Mher3sVet+knyf8z+ZUwIikXQ8JHmFmWS/DbYgPTB+vn4bP6
H00KERL8qqqC8w/C8vCH82X7Y+cl+ODXqqPTR+ajqlf40nNbJPgq671n97vn
o9nJkTXzp0nwm2zPmp+QKMBnQY9q7slI8MVbZ0kJjhbg3hNGE5Yn/et5jhvd
fUQF6DnvUIb7sX9Y7xKa6L6uEJOdx2T3n/APF6aH/o1JKsQSyeAb4aV/8fWC
jTv7TS3Ctqnerx2u/8UbKtU+hwOLcKfqPuXdi/6i4neDH0LZYvxSXZ29u/sP
qq7+uH+zfTGG8pmT7KL+YK2M8pHUmmI8rl/00uNgz+esZSPHmZTgGTsL9YgJ
fzB28DeZ3ZEl+HCQk8VHwW/8/t/z7c4qpWg2e/Q5YcBv9G5pSjnoUop7XLWr
Gsx/4xmnsL0TxKX4Kv1dTaXyb0y6vroheEkZKm0M0XlT/Av9rO9aVoWVYUyr
q5u99y9M/Bi8L1u2HD313MWDzX7hQPO477b7y1Er6bfZWZVfWNE3yS7+Qzne
0A0dnVbejX4aM2Oea1TghOKw25WB3bji24W2BWcqUCrHwChuVzfeeG0Xf7S8
AldcWh29Y2I3mlqd7j9nRiUafridlNLUhdccDo/xuVKJL6bOmf85sgvrw1se
XBBUYnh2rVaqQxdGbFrtIaVfhVbdEX6buS7cHrJ4jPylKtw1Wi8tQKYLpRyz
6gLKqvBI5nEJj7yf2DxiUvxr7Wp0Cp7zbJL/T4QRLUnrHarRPqBrpa3VT3yB
qlvsU6rRDoY7bZr6E0+a7tIaMaQG920a2lj16wc6jzs8aP7WGvRJzdsmlfYD
J0xfqi0OqcHicYUv+Vs/0O5ldnb/phrUDz5fNXz3D9wwOzhlo4oABeOvCv5O
+YEe6faD984RYHKLRrHD306M16xOiNkqwICac41nsjpR6u5t4VInAQ6Kn2Ex
LLATf4klgpUDBChpdeHU1MOdeHbGhHmacQJUf/jvcb5RJ369+VDyvzIBeloW
mf8c1Imjr+SY9f8hQN3GnQPvCr7j5xv3oksVhWinHbopOeo79r/W8KhpihCH
3c8qtrrwHZef25PKrRBiYXaSkevm79jRpyG+1EqIaU1hJsN0v2O42TXjV6eF
6JFxJlVN4ju6V37SKrwjxLbHUdfvFHZgeu0KI8NIIUrkP7tw4XEHOhrLWdem
CdG84PR9oUsHKnTxN4trhAgLTwuebOjA4UrhiQqdQhyZXmdao9OBY49It3rJ
i9DF1knCWbIDL2qtMdilLsKzHYtVz5a245bLFc8dZ4owWU0z7UtEO/rbDD9Z
vVSEdUX3FsRdbMf4wL4pnltEeGaoY1rTjnZ0N333/sYhEc5ZZB/mNLsdixc3
RYqce77/uiEGh4a049Ecnfzz7iLMlJ1T8KaxDbs6Yw87Bonwepps3c7kNjw7
r7UgKVyEN+wvVu0OasMNxmnmO+JFqHh776wEhzY889bZfH2GCE/b5By1Wd+G
79LGTL9bIsJXeqqq9pPb0P/W5KWLa0UY+eVuUo5sz+euORKLW0U43ctFyrnu
Gyp/v5J291fP15/c43Iq6RvemJg0yLyfGP+kWFSnB37D72GXFh9VEKOcRWC+
9clvOChtUfXnEWJsObFp6Fqzb/j6Y+K65HFiLIw5t/XizG+Ysb9OVWqSGBsj
E4/JDP2GV6WcIkOni/Fp9dDxBV9b0dG84ma4oRjtWvKN6rNacU1NxLzRnBjz
9tn6cc9a0Uc/Tu+nsRhfeK5SEl5pRe2RvnXzVogx/syDW6n7W7Fii1tt82ox
DrVf9/frsla0+KbzdMAGMZ40eLPAQqsVH/azjvUzE6NuqN86OZlWlPmq5uW7
RYz/nfy5vi3nK64slI+W2ybGa25dV1d7fsUnhr4hX7eL8eeto+t11n5F439P
Kkx2itHKbUPsmaFfcZeSS5XqLjG+qlAsX1PYgroepzX39Hxetsey6I53CypM
1TLQ7PmcFPKvZJN5CxYvLLtk1fP/W2vslS6rteDL1Dgf9R1iHJPenKUnaMbO
6HtV5j0/P+F5x6JFoc2odUucP3SrGJ1mLE/9sK8Z40SmLSs3i3GA3fMnb/Wa
cd7H36GyG8W4/FbkKuX2L9h4Z+mB5WvFuPLReeWaN1+wUi8sQsG05/nWZx4d
fPoLRiwLrd22TIzek4/lPTT+gqtD3pyYsUiMaS+dI0MGfMG78YvzbhqJ0edz
nVefwiZ8ZOOwzdlAjPruByTT/JvQcujCsx1TxVhdcPDyF8smPLV5fmiXthjT
A98nHdFtwnrfsAnuPe97S9rdJeu/N+LF1JXWL1XF+PX4ttibiY14L8bx/YGh
Pc9vuVWK3qVGvCH33ee1rBiPxMgojV/XiBkrv869LSHGaQN27jyq1ogGAV19
5H+IsN5Ne7vyp8+odvGXsUqzCF0NHmcrRn3GWlOd1YkiEd6LvXzCyvkz7tgg
YfO3Z32rJCeMkTf5jMvF+s1lH0XY5/huX+nhn3GdXOywdUkilN0fHGMqbMBZ
755p73stQo27vusbwhvQfqy5zajHIhzWZrgi/2QD5iRNHXc8QIQGu6a6yi1r
wOeTPrge8BChdndGpcfwBhyxJzu1z1kRWh6qMdkl/oSX7RS1FtmJMBSi3jhH
fsLNMk5lE6175kNY9aja058w76f0gEgzEe7rnH/Ma9UnfCOKaxYtE+ED76Ko
K6M+odq9D48TDEWoHhYtSPtSj8v5bfsW6vTs35FtEqbx9ehXnrrqmKoIxVtd
1JSu1WNY4bbTq+REKOk0nhtvUY+h3R4jSruEqFlr7XRctx7nS1YbKnwW4jTn
/+r6/qnDsLzKrh8lQhy/UdWrLKsO4/UNjnimCjH3rc+95qA6VFga8aL8lRBX
p4bpLjhSh8dfq38sCRbinx1W5gUL6tAl/WzuJU8hdtydvjJEsQ4jZjWltTgL
sfNBpN6LulqcEOKZIHdQiPl5z7W7YmrR/0fWyyozIZ7aOcTW+Uotau+Y8Hzf
YiHKH8icMm9bLZrILH72bGrPfJ2fcW/m1Fp09ez79ImaEONGfuqykq7FBB2H
UEsZIYYvLLXPKRbjsYMCj9J2AVptHbfuyJOefZqesEuuRoCOM+RylrqI8Q6f
Ld+dLsCFH92mbFwnRsPg4c5hrwS49+2Mtz4TxZjSp+q+0l0BLs9a9GpQz1z7
UxFvaXxZgFpD7A6+zRHhlEl3H+sfF2BXv3+TfEJFWGaRYtZgIUC1GZ7GjxxF
mDQla/X2JQIUNRnIfV4lwl/G0UfuTBGgzuEd2Vs1RNhm/Mnbp+f8nD05oeFv
z3vQujMjwEJSgOMcTKLycoRocCgpIregBgfPneFW8ECIVWM3G/0XWoNh6kVJ
0k5C7D/w/oXndjUI5U+Sd60TonuxipbD4pqeObuk9YuWEAdxq7BIsQY9Ry8N
C/0nwB9HWwRpomq0HW667lKxAOW2545aH1mN06u/bfQJF6D0fEmpE6erMet+
glreeQE+H5c7bIZpNQZ1jhqq3/N3CXzLS6+qVuPiRxYh72YIcPculY+un6rw
y2NvcJQX4PFJDXuVXlVh9nXriBepNTj38MixK85UoX95dHziiRo8OEd639iV
VaizX+QxUrMGwzWdwvyUqzBDcfDw1JJqTNf/ZfJGVIkbFF7NTbhUjXySb8Sp
8Eq81X65859hNSo5jptd/19ljw47Nfd6UxX+XDNqfteCSiyu95LeE1iFs1wq
laPlK/G6S8fyc6urMPPwJeXRRRWYa5ik0ChZhf9ida9OD6pABc9hZj6vKtFT
Izm+w7oCP+e2jruytxJVnYzbrKZUYLDBdKck1Urc5BVx+OKPcixb6Hp4XnYF
OqsrHd6C5fhulXGfbtcK3Ho3XEfgVo7bj/is6dKvwHGapZUjVpWjlKe+lWFj
OT6cOy1aZng5vk2yN3sbVI4fPP3qwivKsLHMEBzWl6N8+lJvueAy/D1PPMte
phwdx2d+HbOvDE0almyNSCjD7Rpjlb7qlSH38n7mhONluHFSgrZjeynqfLj2
uESrDG2lby/FNz16d2WbSnJ1KXZs17v8zrkUI1dIcY23SrF15YM+5xeW4n/v
NJearChF1zvvPvbpX4rXGv5sFkiWYsnYP63GmSUY+tA4+PmbElQac9V5mUcJ
Ns6tWPvStgR3mR06NXB9CZYPeXaneWIJ1i460XpbqQSnJDx7bFFdjOqTdtSI
yoqxWifn7b/bxfhbPWPp94BibPnx81+RaTFqSq6bmL2jGHe0d72q7luMU0xv
29mMK8bmtLOKIxKL8HOfBdoltUVYWDBy8/kTReizS2227KMiDFBRSxozpQgT
rire7Lu/CDv23HNv/FSI96cvmpClU4Qfb52Vqr1XiK2jpat2finEu7/W7JTf
UoifHny7nxReiOu+GTfvUCxEa5W/5q02hXjNFVoFHwvw4xC7huYphSieFxN5
3a2gx1f1nRzXWoA/dWJPWXEFWD+yRMY8sgATKwW+e7vz8XX7xQ1pPX7IMGip
uderfMweAI2y0wvwQ6qbTINNPu5SeXVvdFs+2mo+/bFHOx+F3nNW9o/Kx1Xe
kx1ka/MwJjozMfloPvp6t1YWBuXhPoUhaWbT8tFEbcrJVPM8fLzLRj+pNQ9H
HDz9oGpYHk6YMCBf8kUe5g/+8HpEbi5WagutVW3z0LV9pvTJq7m4qX9CrPzk
PBRenPPpz5JczLqx9mbxl1xcNeBCfKhULn7VMXpx6mkuOhc1J1Q45aCF4rCi
X/tzUW/zQrPIjmz0v3MAzbRy0b3fScn0Q9mocTneTD0rB52rlp8aW5eFGvnw
ZIVJDhZU37/wdlsWlm3t+jQ9JRvLHnuLPYo/omJnjksJl43F83ZsCVn9EY0y
ZcrmxGdhYfWiyLa0THzStmXbdoMsvDrVK9JpYSZay0vaLor6iKssvSdy8Rmo
5/7xcJPuR5x6+0LV3FkZ2KVtEG32KBNN1zo9sHmRjrtK7O9fHpuJ62bYrC7R
SUffn5cvnPXPwJnhI5/bPUhD+akbXi8anoEbW/p5G6un4TnjB2ey3dNRpWlf
1TL/Dzjm3ZqZGjLpOOD8RAtnpQ+4K8BIdYlrGsZlpjQJb6SipZ+Do373B7Q5
YLnXfmAqnkpb7N1+7APmjw57OutyCkaF6kW5NqVi/ZZEb42+KVhqoTxAaJmK
Br+Xysx3TcZvaWsEQytTMGH0BqHrn/d43j5kn8qGFLSV3djnq+N71DtgVdmW
mYyfZihtPN/5DjOkLx8JWZSMxnui3nDH3+HeK8/NJsW9R4/ay8PHtybhw8oZ
765Of4/Z2bPX6xxOQosS4+qUx+8QbK9v2djIo2/h15Jy9Z7vE+cyPGQvj2n1
umWZPkmozxtXa2QgVuj9kPUblITz4lY8WpySiBcbNnsuucDjf85ndobwCfh6
4Q/1Bz8QJ77dWj8/Ph6fTT1m7lKbiHDYRHn4mzicdnuD/Mi8BBwW41Mw/lUs
KtgcsXNOiMeBKXv+7HvxFnPObcx59DgOV3y+5iB69gZrnx9bH3A7FqMy7ui4
P47BZRYz9Le5vsXFL592738Yje9uqD/8cugNnu0+mnc85DV+1/9buHJzDHpd
Gez7+N4rrCxpaj69KBobXAYZyQa9xBHoqnpp8mtcVmH6xNM/Cg2dvrnuHfEK
G8xbs418I7EteZyJep+XeGb1Cr9BPi9wYUHBzVctkbhw2dMuSZ0IrBsSfXpi
2QtURL3cCRPDMTpQbVurWwS2eugGnh/3FFefCnYw2xqO+zVuLVUd8xh9pS9e
cpvyFA8sGvhGNPIRTlDR5V2lH+PhiIrSMpUHOFp6wBrTkodoLoi//Wt4CA5u
+2bV/CQUE4pTKxYp3scKN0M9a5dg/G+A+/RtY4OwVa1/Ttzaexj8eOEpWzU/
TF01qK7WJADDzbcfi1b2xvE3V55Ua/VB8Xyjbm3FmxiqdP/BRG8vXLRxSfO5
Uddw/soHm5Ud3NFfr+POl2Hn8XCtdsij9xfw0seFbr9UHPCUrnDrqNEn0Xpg
mihAYSf23WP06fj+Xf//Gb4e7P0M9PVQObX364G+H9yr6/1+QD8PYk17fx7Q
7wMHlXt/H6DfFxLY7wv090DU6t6/B+jvhSWjev9eoOcB+hd7nwfQ8wIb9ryA
nifYsecJ9LzhPHveQO8D+vXpfR9A7wuesPcF9D5BNqj3fQK9b1Af2vu+gdYD
2LH1ALReQD2ld70ArSfYzdYT0HoDA7begNYjyJT2rkeg9QqjZvWuV6D1DOVs
PQOtd9jN1jvQfoAmth+A9guI2X4B2k+gzvYT0H6D2Wy/Ae1HeM32I9B+hY9s
vwLtZ7jG9jPQfofPbL8DzQMoYPMAaF7AQzYvgOYJ7GDzBGjeQDibN0DzCA6y
eQQ0ryCHzSugeQaz2DwDmndwlc07oHkI3WweAs1LKGfzEmieQjSbp0DzFs6y
eQs0j2Evm8dA8xos2bwGmucwns1zoHkPbmzeA50HIMfOA6DzAgLZeQF0noA1
O0+Azhv4xc4boPMIprHzCOi8gj3svAI6z+ApO8+AzjswZecd0HkII9l5CHRe
goidl0DnKWiy8xTovIWJ7LwFOo/hHjuPgc5r2MbOa6DzHFrZeQ503kM+O++B
9ACQHgDSC0B6AUhPgDbTE0B6A54yvQGkR4D0CJBegWimV4D0DNQzPQOkd8CK
6R0gPQT5TA8B6SWIZXoJSE/BV6angPQWCJjeAtJjkMv0GJBegwNMrwHpOWhg
eg5I70E703tAehAeMj0IpBchielFID0JfkxPAulNaGZ6E0iPwlSmR4H0Kmgx
vQqkZ4H0LJDehfFM7wLpYWhiehhIL8MeppeB9DSMYHoaSG8D6W0gPQ7nmR4H
0uvQzvQ6kJ6HLqbngfQ+HGV6H8gPwAbmB4D8AuxmfgHITwD5CSC/AQOY3wDy
I5DJ/AiQX4Ew5leA/AxoMj8D5HdgB/M7QH4ITjM/BOSXYDPzS0B+CtSYnwLy
W3CL+S0gPwZ/mR8D8muQzvwakJ8DA+bngPwedDK/B+QHYSjzg0B+EcgvAvlJ
SGZ+EshvQhjzm0B+FMiPAvlVmM38KpCfhSPMzwL5XdjJ/C6QHwbyw0B+GZ4y
vwzkp+GfUa+fBvLbIM38NpAfhzbmx4H8Osgxvw7k5+EK8/NAfh/6Mb8PlAdA
OcsDgPICmM7yAqA8ATRZngCUN0AryxuA8gjoZnkEUF4BlFcA5RlQwvIMoLwD
JrO8AygPgW6WhwDlJZDM8hKgPAUMWJ4ClLeAN8tbgPIYuMLyGKC8Bo6yvAYo
z4E4lucA5T1wmuU9QHkQUB4ElBeBFsuLgPIk8GV5ElDeBJQ3AeVREM7yKKC8
CiivAsqz4BjLs4DyLhjM8i6gPAwoDwPKy+Ahy8uA8jQwYnkaUN4GISxvA8rj
4BHL44DyOqC8DijPA8rzgPI+oLwPKA+EGJYHAuWFUMDyQqA8EShPBMobgfJG
oDwSVFkeCZRXQgTLK4HyTKA8EyjvBMo7gfJQoDwUKC+FDSwvBcpTgfJUoLwV
trO8FSiPBcpjgfJaoLwWKM+FWSzPBcp7IZPlvUB5MFAeDJQXA+XFQHkyXGF5
MlDeDJQ3A+XRQHk0UF4NlFcD5dlAeTZQ3g2UdwPl4bCG5eFAeTlQXg6UpwPl
6UB5O1DeDpTHw1yWxwPl9RDP8nqgPB8ozwfK+4HyfqA+AKJYHwDUFwD1BUB9
AlCfANQ3APUNQH0E7GR9BFBfAdRXAPUZQH0GUN8By1nfAdSHgBzrQ4D6Eghj
fQlQnwLUpwD1LUB9C1AfA9THAPU1QH0NUJ8D1OcA9T1wkvU9QH0QXGF9EFBf
BNQXAfVJQH0SUN8E1DcB9VHQyfoooL4KvFhfBdRnAfVZQH0XBLC+C6gPA+rD
gPoyeM/6MqA+DahPA+rbgPo2oD4OqI8D6uugm/V1QH0eUJ8H1PcB9X1AfSB4
sD4QqC8E6guB+kSgPhGobwRz1jcC9ZHgxvpIoL4SqK8E6jNBifWZQH0nUN8J
1IeCA+tDgfpSSGN9KVCfCtdZnwrUt8Iz1rcC9bFAfSxQXwsmrK8F6nOhH+tz
gfpeoL4XqA8G6oOB+mKgvhioTwZX1icD9c1AfTNQHw3/gnr7aKC+Gt6yvhqo
z4brrM8G6rthHeu7gfpwOML6cKC+HEazvhyoTwcH1qcD9e1wnPXtQH08PGV9
PFBfDwasrwfq86GB9flAfT/8cujt+4F4ANjCeAAgXgAeMV4AiCcAIeMJgHgD
cGO8ARCPAIsYjwDEK8A1xisA8QywkPEMQLwD3GC8AxAPAYWMhwDiJUCa8RJA
PAW8ZDwFEG8BHoy3AOIxIIbxGEC8BjgxXgOI5wBPxnMA8R7QwngPIB4EohgP
AsSLQBXjRYB4EqhkPAkQbwJDGW8CxKPAAMajAPEqcInxKkA8CzxjPAsQ7wIG
jHcB4mGgivEwQLwM3GS8DBBPw6UzngaIt+FWMt4GiMfhihmPA8TrcHcYrwPE
83DLGc8DxPtwmxjvA8QDcT8ZDwTEC3HECwHxRNwhxhMB8UbcVsYbAfFI3CTG
IwHxSpws45WAeCauk/FMQLwT58d4JyAeilvAeCggXoorZ7wUEE/FVTCeCoi3
4mIZbwXEY3G5jMcC4rW4fYzXAuK5uCjGcwHxXlw8472AeDBuDOPBgHgxzpTx
YkA8GVfAeDIg3ow7wngzIB6NM2c8GhCvxt1jvBoQz8aZM54NiHfjshjvBsTD
ccMZDwfEy3HmjJcD4uk4VcbTAfF2HPF2QDwed4bxeEC8HhfEeD0gno/bxXg+
IN6P68t4PyAekEtjPCAQL8jNYbwgEE/IpTCeEIg35MYx3hCIR+QkGY8IxCty
xCsC8YycIuMZgXhHbhzjHYF4SO4k4yGBeEmudXYvLwnEU3J7GU8JxFty4xlv
CcRjctMZjwnEa3JrGK8JxHNyOxjPCcR7cmcY7wnEg3ICxoMC8aLcGMaLAvGk
nCvjSYF4U86R8aZAPCrnynhUIF6VW8t4VSCeldvLeFYg3pULZLwrEA/LaTIe
FoiX5TwZLwvE03K+jKcF4m25KYy3BeJxuROMxwXidbkpjNcF4nm5jYznBeJ9
udmM9wXigbm/M3t5YCBemAthvDAQT8wpMp4YiDfmghhvDMQjc28YjwzEK3Pd
Vr28MhDPzM1kPDMQ78ydYrwzEA/NjWA8NBAvzc1mvDQQT81NZTw1EG/NTWK8
NRCPzekwHhuI1+ZsGK8NxHNz7YznBuK9uQmM9wbiwTl/xoMD8eKcLOPFgXhy
bizjyYF4c66B8eZAPDq3nvHoQLw658d4dSCenVvFeHYg3p2zYrw7EA/PtTIe
HoiX57wZLw/E03NXGU8PxNtzhlK9vD0Qj88FMh4fiNfnvBmvD8Tzc1sf9vL8
QLw/F8F4f6D7AFwWuw8AdF+AO/K6974A0H0CTiO+9z4B0H0Dzp3dNwC6j8Ad
Su29jwB0X4FrYvcVgO4zcPYSQ/93nwHovgO3e0/vfQeg+xDcnMDe+xBA9yW4
1lG99yWA7lNwiaLe+xRA9y04l5Te+xZA9zG4yQa99zGA7mtwKXd672sA3efg
3mf33ucAuu/BGVf23veA/wMSLjUe
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.6056385775995969,
      0.8695144738152427}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFm3k4Vm3U9m9SqBSFPJGUBqRSRIO6dgOhWaNSqZAmQ4ZkSqJBph5lSjKG
DJln97qoJKUoZM6QIVOmRKle3/es/b5/dewjB/e997XXOtd5/taC02a6Rrwc
DkdmEofz//69Y8bn1dRoRjm0chfX7QN37b3Ci7Tx5MS17YwGt0HuHPMewk8O
Us7o6fLyKj7QcFvXQRr3UE7MwqWHbs6CaUOmJjudtClnp+Uzi0EpqP921EZz
kwblKCqL//60CEJFC41F1myhnA/dIsEnFcFp1njxxnpCOdEnfkjfXg3/uEot
09+nTjkdvR5TrNVgqfLU3Nf26yinNtsuaEQdChQ6imcrqFHnwuDeKzc3wyRf
rsrWDWuo8wFrZaH6bSA9+M3NLUCZOj/bECDmoAURK2rdPVetphxLyRp/452w
7nldt/FPJcrZXCD1dtdeCOMavVOpWEmd9zuO3/XUha5qqQeBQ8spR3qhrvvg
AShbdLthn5YidV5ZX/Dc4TD4PjyzZPC1AmXauFdXKx6F1hQ1Aa6FPHW2r+oq
5RyH2KEcn83r5ajzmjcO7j9Pgs8ez+Ap85dSzqmeJ/EepyCNf+PT41JLKOdJ
xqjvijOgpuduq7JyMTUYPD+vv8UQlmsp+I4cWERD42L50mKNIav6xgLru7LU
ed6Ad5mLCTTwpotVlC2kHFMBZxXT81BiUXrGXnYhbbr5/ezbCxeB33+O1jSX
BTRUpz7Mxd4U7tzMbtPtlqFNd+0iH+82B6mueRlaJ2SoTHj+XCsTC5D3GiwS
SJtPGZV7Tkp3L4OH3BsXy1xpyrkSb/cywxKEdx3bd658Hi2Tzgpe2G0Fq38k
icQNS9Gywwv1VOVsYG7weol5i6SoQd6/wn2XroDj6FzDwhOSlPJ/E1PNs4WG
bYp+WRFzqXDqs/SxWXYQv+7bTZXBf2iZ/v2NspftwXOd38lr2v9Q4UsnJgfX
OIC4Qsn84RgJ2rQq/8pObSeoFZjq9HumBA0V+yspVXANavXaZos6zaHVUW3v
bUOdYfIsTkneoDjd65Bmrmd4HSRqh67euiROk5RHHBYqusB1rfp8oT4x6lzX
LFv0wwXWN9D2AUsxWjbtlrrqqxsgzl0l2vhHlMo8F99hGOQKDXP0TG54idJR
af6bmy3cIEvH7UDgQlEq0aJRx91xEzbylv2sz5lNY05t+v5W/hZwIqaGCx+e
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
nPn/+xq4z8Gw+xy478FwnP/b9/gf5/2gDQ==
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3dcj//3/xuiIlIRKjsjZTSMlHPJKmSUVTLekq3QEBXSIDRIpaG956tQ
KJ0rs6JFhSgVadMSlfHt93me319u1029el3X9Xyecx6Px/05ZZ+VkYWIkJDQ
ZFEhof/3r4fVEK/aGitevTBr5c9gA1x8/fExvmYPb1RoGeoVbILyJ9pgGGzl
C/zNxWZpmuMqtyWNULORt9SYsLQ18DAO77Y8tP6cAW/8ZHT5h79W+PG7qd3q
Zav4oLpZ8vsWWGO43OMDo7X0+PlKcSJZ++zwnMzvfN2PwE8zz5u12fcMjndV
nGO2WYefPDMnQO6JI87UkMwucFjCe1kn1n3pPI95Ko35siqL+Hlfui6/9nZG
Ud9czRVLtXj37PVlCjNccGLXdze3Wxq8V6yCNma7YtTcqiueC9T5g1c6zVM2
ueOSJx9aD/TP56Wy20Mqv1zCiFyLYs3yeXxy4dFaFXsPbHmn6BfYrcZLXIDK
QMmrWDr9cvVmfVU+fdjjcpmQa+gbbD6jq0CF/xKxud5V1Qs/ZywSzz05m9+p
dPNBTbY3JnQ/9FmuPYvfZnPjwLAYH/TZ6BkydNJM3lLvc6zz0et4d5hu4i7F
GXwY/JLfuuAGLjK5Yq85T5nfl/Ms0L73Bqrpq/j2bpnOf9t1+kf9Q1+8/85l
iu3Vabxbw9u6K+duYrXIvTHlpVP5d0X6ww4u98PCk0XmDtOm8r3b7YZYivrj
sAB5/eEXp/Cdi66c8n/qjx7uDxqMWifzizO7mitdA1CxRSlTf/dk/rRr4NAZ
K2/hbK+u5+J3J/Eq6z2PnRUJxGuzXl60zp7IK5eMelWIgShtuHPz4TIlXuzD
QIOUYxCq/xSMTupR5P9IeXhrLwrGCSHa45SmK/JXpxtnrukMRqdfE/Y/3q3A
7wrKMVdNDMHqlar+96Mm8OdOuPOf/ruNyUu+u2t2jed/Oj+VNxkXip5L/Pec
NxjPZ3v8ee9dFIpjVQon9cSP4x+1JYU5OIdhlbjkuT+jxvGzjbvGSE4IxyqT
Blm5c/L8zDT1rPhT4SgmI1SY0zWWL/tb/9ivMBzHVXWfuXR8LH8q/NreoikR
6Kz/8ZHUtzH8XIV3pevsI1C7mv/aaT2GP56sYilVHIFjcxfI1fyV41NTt6aM
nBaJ1fImh1y85PhjekMnrj8diffXum0JnCrHbw9cc/RxYSTqipT2f3woy9u2
FOy0VIpCoSjJSOntsryMqO7r9VZRqLnOfclArwwvfd+6yJSPws2zEloOBsnw
7T+DD/lJR2OwlXem8nIZXih9xYe+PdH43nXhxGGto3nDDdZn3FKj8UbP1zd1
AaN5xaRbd7R+R2NLENp4rRnNJ9heHituEINZw48aNPVJ8y+2Gq/rvxmDcrqz
pYpSpXnzherykrUx6OJm/VDxgDQ/1cBgp5ZKLFr9uWX2YJI0fyf7otxZ61i8
+/zqS6msUfz8l3o7K7Nj0fh2z+hK9VG8XIeGub5oHEodGzYvKGMkH5r37Wyx
QRxmtGg8mbNwJJ+j9XD4Qe84vMwHaOx5JMW/TJkdKF0eh96h9bbD9aX4xRff
8AXy8di67XGtROUI/ppW45LrpvF4qmuf0MKDI3hxtY/lFiHxKFIZbHl8YDg/
PkvYYXV1PP49Y5nqfWM4/9lt5lx1pQTcreMmeU51OH+mY5b4LLMEnB9z2E6h
QJJ/7+ajPTMoATM0F5xaf0iSD8icNHLe2wQMjDvQ0SshyRuGWdYvk03ECXED
uiKpEvwb+ZNq2zYk4vN5cm3btkjwxnGyDjaXE3FnpnN2zW9x3rAk91hgXiJO
XpHv4Ronzu/p7bz/tC8Rhe2vguYWcb4l4plK7/wknJ6/kq8SEef3D3OLUDuY
hMpKMz9Y3BnGjy+aJ300JAmFX43VfWoxjPevlHFKLU3C0ePCzBvGD+M/S68V
/iWajOnhpT4PSobyc/t35K9ZmIwLfv/ABZeG8iZNyaNCDyZjmJ1UMHBDeS5X
a8ZAQDK+PfXrREW/GP9lePPRPS8G/9/QSPVrphhfa7Rz88sfyVj2qW6thY0Y
b7Fr5XaYloLqHwMrVmuI8bu3jx+ZszEFe9comZzvHsLPSLsxRs8hBZ8uyq0R
vTeEf2i6RvF1TAreKm5vKDg9hJ9srfnpWEkKxuqM2f1i6RD+xTeT2bK/UnCT
Sml4l9AQfqrWyjfPJqXig0DnY3ovRPkB98THbqtTMei9zqcUL1E+EfubjY+l
Ynzs75Oq20V5v7C+NQuup2KM9LSee5NFeZXmTY0T76Wix3TdS3qtIvze3AU1
Su9S8RkvFlyYKcIvWd5gOK8/FTcbRzWvdhHh3dRO7tuikIZtvoo2gk0ifO3U
OUZeS9NwQqDQeaFJIvyi0D27akzTsKp1mff8b8L8NKmmolVn0tDRSfWgdq4w
D/rlvc/80/Dv7QzRcd7CfJSHqObeO2l4ZnVM4JO9wnyZW2nzmJI0LNJZ5rtI
Q5gPNUtxbWpOw+rHDz0thwrzrhqHc9qEBRiVMn67eZUQvzz422TbkQJM/vqz
VTpNiE8eu3yB1wQB/nTysD3lKsRPMpTPWDxDgBN8U9a4mArxxv67j9ouEOD2
swqfli0Q4h1DpGat0hn8/dC4T+HiQryTpFBm/GoBHrTTVV6b9w9HvShsCN8k
QB+dY4Vep/5hkULglbmmAnzqNKl4mPI/nHdN5KyRuQDfCkdeT3n3Fxvtm69K
HRNg13z/e/aefzHP1yhor40A9044JL9vxV9sE1rlvN5RgG01NcX7+v8gHIqa
+NpFgNH8yzk2GX9w/00po64rArTWqrjjffQPKk3O/p1yXYAXbMwmpyn/QeMb
u4WH3hJg7EhHs1e1v7EyWnjlwO3B+1k80aUu5Dcaf2hO8IoS4H7n2dVNJr9R
fI/d+Lx4Ad4tePzpo/xv/CU19KxvigDHbo1SuV85gJKNlXeGZggwq8PZ3dZ/
ABuvtqcpZA7er5rX51HbB3D34t7tbx4IcFbe7+0Xxw2gZoaa/9xHAryuGj0x
v6ofa56s2DqXF6ByZbzfx9v9ePbmqgtvHgtQpGSRbvZ//TgjzFlk0jMBrru8
MXPPjH5cetT6xegXAlzywi/vWWsfiv6Kf5icL0DBfO1lzel9OLY47UVHgQBT
ir/Mem7fh2qVA+9rCgVo0Z8WtIPrw6PZFR9PvxTgfxPV8kPE+1B6+orsnMHr
Ey+thbzLfuG+nb17UgevHSO1k+cE/8LW+kX3DAevbUP61ltZ/MKJpm+jgwc/
zwbGOG6b/wuDdo8dFzj49w5tk2mpHviJR+KCfq4e/D4Bz8t2ieT/xC2zTefE
Phdg5dTyO/zNn7jXzCso66kAtSJdq8fs+4lTAyPmOA7eb+20q7V/5/3ETeem
Pe3BwfXxbXql/d9ezHDI0p86+LxCPrm0XCjqRQtDydtiDwU4MkfDTO52L4Yk
5EWFDT5vYQs3h/nHe3Hmi1PLOgffx+TYfwmvdXtx8lRfw4HUwfdhXmHya2Qv
SoieEOQmClC1Za9UWO0PrNo4eZVO7OD9zI7e9jTjBx4Xd2qyiRCgXERRpYXb
D2waJ2d3OESA5cV5us47fmASPyV/QoAA81vjDeRUf6DpTtcsj8H15V144bmi
0A+UjstUyLo6uH4TMjxvlffgP/unhVFuAhR6nezmltCDte9WBW46L0CTN+cj
6s714Au/Laa59gIEvfO1iVt68J7q5U/tJwWoUNBg+EmlBzvV2359OiLAc1aO
Qk7CPfjz928bv8H9crFn5YSL77oRykMnjzIbfF6KM/Pb0rpRd4vCC8MtAmyo
CF+efakbV/w3Xt1o/eD6lzmT37qnGyXUg2crrRSg9grbeMfF3bj6T6912tLB
zzcavejY6G68ElNRIaEhwJcS2m/ut3ShlpyqjJqKAD3zJRr2Pu3C387aLeOn
DK5f20vV+0K70O+4u1KZvABl/Q4ufGTfhUIOVYeNB+vJecuSk5bGXVgsuvxq
xJDB/aM2YYLt3C7880Pc3v5HGqa3heWVSHThjSlbD+vXpaG67zkRp4ZOHJjV
sv3uqzS8e3b/OYe8TpyxPDvlUVYa/nlmVlNwuxM3NKmVWUSmoaTZ7dcHznbi
UB0Z5dRrafjNbpvM5u2dWHslVvyWXRqWZ7nsvKTZid8Cfd5O35uGLem5p8Rl
OvHPkPrmrQZpmFQjM+3N9w70MJe5qaqehjbfXut+LerAiMNDZiZOSMOyQ1ZB
XHIHbqoW6igRSUOBz4axdVc6sORwzuKwllTMuRBz8/nhDjyyzXjN+NepKGNr
9Pe7fgca/Nu4Gx6k4tlF95ebzerAO1xcjkx4KqpGBxlJineg8SW8fdM9FU+f
/WXcVfIdl34+vuT5YH+55t53daPPd6yO+vMk3igVf908aayy+TtmiM211F2c
ihbuWx5ekPmO2zdoW7gppeLdD7JVm8q/YY34u9fOIqmov9+84pb/N+T9oVqj
MQXzov693WbyDU90qMSFvEzBjk+2Yz0UvyEXXrPxUVoKTipoL1KrbcelA7O6
/X1T8FFqz4oV0YPXTkcTVE6noKPG2ucvDrVjqVXQpTOmKTjCJjXxgVo75t1e
Heaqm4Jrb6ZvkO9uw75dt/+un5yC6+Nc5T/db8NAv1OCNyIpmPT15clR59uw
fuLynPENyeg/91RZ7Ko21JLWmjF5sN/n33FKjxrRhufsVL83xidjQHOD75Dy
Vjz0Pk/u1JVk1PI6Ipwf3IpdnOF1PJqMNW+OerSZt+K67992lq1PxoLbT/JO
qLaiR6LPoXi1ZDTND1tt/KMFh8V0xK0amYzfrXc9vJHbggEiUcMSvyWhxVqL
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
zdWyx7tu30S1HXrb03uK8fjpEW8P6N9Er6FnhQuOFeOKcZu193f7olP1Wocp
DUW4WfGM5rZQX3xTE+H2YFcRVsXOHaFr4IvvE/w/e1e+QpPavqHje25gpc4e
06iNr/DEXTjcEnoDy2tWpHflv8QqbqNdusENvDrfN91R7yWGn917wrLnOm4w
95/B5RTiAYeIW1PCruN8P7fqpQsL8eYorXkvDa6j4WbHGEtBAe77DNZHe3zQ
SMNy41uVAhTu/xopEuaDmikKqTYx+bg5x2zAx8AHt34b6r9qcj5uy8g9qdbk
jeNaD1XrB79AG8urarN0vXGE6wwzp7EvUM9lIFTmhhdmv3zWWnf9OSZYqS9p
/+qJlkfMD9pKPccf7wKO31/qia8nxict9HiGEkM7k2x8ruFX01z/6WLPcG+/
2b6pDVdx0e814sucn+LoH8f/5C25io8mbqlz/vMEBXuUm4y9rqCVxNYh3888
wXPDpK69q/fARo2xW117H+OYn+qbNy3ywFX7M+5z1o9R/rxeaPbVy+j9xWPM
tI48tG87/25C7SUsLl5srHI8D8cdqDO31LyEYOVpurWFxx5XyajMy+5YmH1u
TNRBHnXELH52f3RDLX5VzfRCxHQ9xbwZC9xQJ3td3MpnuViVp7Vno5srnna6
sDeKf4QVPtfmWb53wRkPdn5dlpODcxOavVzUXBCOG8iPuZ+N6Yv+vfN2vohy
WQFvpt19iG8+XTjkW+GMUs/2/zkkeIABXyYGeM12xnXN1+zrk+9j8IbQR85O
FzCj8JaKV0IWNvbHHayKPI8r7yT1H47NxIC9ZyIi157Di/0ny6yj7qG1eEe5
WZcj+l4ZFZgQfhc9s/hkiSAHbDo3Ulci9A4Khw1/nbD8LOp/MEz0Cc7AId1X
23Sb7bHJpKNYNzAdRyd5Rj73OY0XNq4LGjmo23Y2KgauXGyHevpJfcIqadjo
M2B9/5MNyqJaqfKMFHwVUVox9ZI1dnir3nadmoTb/JX2us49hYen31wzYVIC
/gs+fqe64gQeWSF1v14hDvvL/Gp291vi8bQP796Pi0GFqx/29+gfG1znOX4D
Y6KwLsVcyyngMD6qfP5hhWwE6khcudLfcABPj/BS3zUlFGv3Lrl9XHM/Ribo
OVgpBqGtokHM24v/YYrJ7lOZ8v4oNrYkwzpyF35epts/W/YGPqr7VqMCO3DF
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-6.501707037645161, 
     6.516014017739484}, {-0.13048168048831701`, 0.0656087834532999}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.483943901159851*^9, 3.483943911897108*^9}, 
   3.484215578063699*^9, 3.484215637699131*^9, 3.4843130950449657`*^9, 
   3.484314359663621*^9, 3.487485435690309*^9, 3.4875028944339657`*^9, 
   3.4875029761764507`*^9, 3.487503170750936*^9, 3.487504425283441*^9, 
   3.494224249126718*^9, 3.494224370202189*^9, 3.494226850242034*^9, 
   3.494847177302526*^9, 3.494850551158513*^9, 3.49485059295844*^9, {
   3.494850977447206*^9, 3.494850988036456*^9}, 3.494851241422813*^9, 
   3.505465962136663*^9, 3.505467520150874*^9}]
}, Open  ]],

Cell["And here's the Hilbert transform", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hilbert", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.4839439276703577`*^9, 3.483943929706176*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3dcjf/7xysrEVIqySakFCGlXLdkZWcTIpEZDR+jYSTKCg2JpIxCOyWp
645USmnvdeqctEvLCt9+va/fXx7n4TxO59z3+76u6/V6Pa+J+yyNzSXExMQm
9BMT+79/XSz736yqsOT/pscYfvfZDgtuvz/KV+zhF6Qd973pcwgUTjTBINjM
G3qaDZg+1xqWXtb5ChXr+MNaSgsbvc/AkI7jFqsdVvILPsjklf51hLLWHaeW
LVrKuwqmK+ybfQn85N4fkJlnwPsrP5eI2ecMDiN7UvXLgH/gmDh9w10XGO2k
PNNkgx7fmhTnJffhOkzTkor7dE6HH6FTIRB+uwWJql9TZVW1+fY0TeecW7eh
392EuUsWzuMf8Fcrx6jchXHtrZcv39PizcImXcQ4dwiYVeJ6Y/YcXi6gxeTV
ek/Q+VDaeOCXJt+ira2ZLfSCxwnmmXPzNHgnyS/np532hoYiZQ/vDnU+cF9J
52spH8iacrV8wwo1PqJg+DvrBw/gro+ZSvsnVX7wjA6nMeq+UBOhLZlwcgZv
GP2lQvndIwjqeOu2WHc6P3ah+bkDT/zAbd2NBwPHT+MPz7/BmR96DFGD9F/s
Ulbh3U3/us1R9wft7a6n52pM5Ue82vLycJs/qK9Qvdu9aQo/ycLXTi4qAN4U
XZpoe20y32KUjdZnnkC5xOtReVmT+Bc2rTOSFj+FtJMZZucmT+LfXrl6olX6
GQzyUlgx5OJEviXo34a1Fc/AxTlWZNw4gdfL+XLGMeI5KDeMjV6xewK/I3JI
yjaXQJhxsz1ZMmo836Kb0q/dNAiuT0+/aB03jo/+ye1Mmv8CRqzZueFQ9lj+
Yp3od+GglzDne5jMy05lXif++s8fWS9B6YGu4tgpyvzJGyrQfPMV2P9Q2v9+
9xj+fdeBl88WBUO5oZrnmwAlPsdkWfex8mB4pdPqPLd9NP9kheGR/odC4IaO
5x7HlaP5tvZBCXGVISCvmja+M1CR7+d7RN2JC4USSSmHP8MVeX2VA9nfXHtf
bxfJyjko8GrVCzbpYigMGCmW9q5dno+Iar6qVhEKiiUdZ64ck+ctjXDr5PpQ
uLCiLF66ZRSv9+PSgS5BKOiW87XfrEfxmq+PvqtOCwX5hNlyFX/l+DmfFK0v
PAuFcoXtFpduyvG3jWs2vvgvFN4YXd7kPUmOn1IrHHFgcSjoS2T9Knsryz/e
+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
Hvg/heZhnA==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
/PswZoTcLSFW1iRpQdTVXDy7Nizgg6UQu2GTneVKr1zM013ho60lxGbNQ89D
rrlYlZZ44+goIVa8arIh45CLIRGTTfaVc9jVaqbzvljm4iteT4vkaw57JMfd
Z5FhLvY4X3G0d+OwS7ve33ZS//f5fCL0L5tz2Cdyi1vei+eiybkpNSsWcFjF
D+5/xBty8NWjZzVBohx2z7d2X5f4HNx/avmsdalDKLbtwyQNrxz01j2cc9N+
CINLUzU1tuZguvP0/NGzhnDRqTNt9ybn4FehJ7cjvv3F3efdg10qsrFT0/fN
mRt/0VUkpeKvfzZayttNslr1F5NCVc3nGWdja3V1vlXfICbGZf1V/ve+Q9nc
uSdjBrGye8rHvndZ6LC4JPbWoUHczLeKz7TOQteTFoqvZw1i8lSv5hCJLHw6
7rzFJ+4AJrLRh57FZKLJ0mmXax8M4G7lo3rNWzPR+qJqVZPZAPpvcrB2+5mB
cdlpNZWTBjBDrfn1jWsZKLs9RC2+tB8/1eg2TlXKwHcdFz0cffsRE/cGb3jz
Eb01btaPN+lHpdJA0wVrPuKc1AGTS3L9GHc71Ki+MB1vq4dOyyrvw62R64PP
7kzHWaXP71U+7EO7RJvZY+o+oPBn7eXv9/Zh7+pZHpE2H3C91+a3e2b3YZD0
xznneGm4LPNe6seWXvSydFviZp2GUZo6K75H92Jrd/vduppUjMhvmJNxphc/
BNs3vDBNRZu+14GmTC/e3aDq0pnP4t5pGlkPRHvxwNffJ/L1WDye68C5VfgH
458Gij2zQzz/ROfV3Pt/UN/63G51/RR0fNC74ZjNHxTrMVi6fUYynoSJ53do
/kH50TqbDXveo90O6eaq/h4Mm6KcND87Ef0yCncJZ/XgBUehnnl+CViqVBzL
3u3B5yPYksN743HxE7eqiVY9uLrU7Nq4Oe+QO/Ma9+/8HvykufDZ0pY3mP5D
ufTM326U04uWGf8yDh/UXG52zevGbbOnTHmzPxbHJWlZyDzsxva8B7s2zohB
IRt3J80j3fin6VpF79coVHw6FP5leTcerAmvfTfpNXrvKzH7M64bz0erRsw5
9wrVmy0lHnN/Y5ZsnL7H13A8qRq6Iz3mN/r2yTwcr/kMZYLzSm3cf6NrW4mp
sFsoFuenLr9o+hvHuV1rCiwKxqyW54Yy6r9RxiVuYM6KR3grxzVDgfMb1ddZ
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
l6udwvjg9UnPo1/uDJYu9nL+8e9rW4msugeSlnjMhJ085+n/fw2Cr+n7QfD9
9PNA8PPo94Hg99HnAcHnoc8Le+jz0t8D3fT30N8LsfT30vMAwfOg5wWC50XP
E/zoedLzBh163vQ+QPA+6H1BMr0vep9gTe+T3jfcpvdN5wEe0Hmg8wJ76bzQ
eYIlgvM0fN5AcN7oPILgPNJ5BcF5pfMMgvNM5x0E553uAwjuA90XqKb7QvcJ
BPeJ7hsI7hvdRxDcR7qvoE/3le4zCO4z3XcQ3HeqByCoB1QvQJzqBdUTENQT
qjfQRPWG6hEI6hHVK0ikekX1DAT1jOodCOod1UMQ1EOqlyCol1RPQVBPqd6C
oN5SPYYYqsdUryGe6jXVc5hB9ZzqPQjqPfUDGKB+QP0CjKlfUD8BQT+hfgP2
1G+oH4GgH1G/AkG/on4Ggn5G/Q7GUb+jfgivqB9SvwRN6pfUTyGG+in1W3hC
/Zb6MURRP6Z+DYJ+Tf0c7KmfU78HU+r3NA/AMpoHaF4AwbxA8wScoHmC5g0Q
zBs0j4BgHqF5Bc7TvELzDPTSPEPzDrjRvEPzEATTPETzEgjmJZqnQI/mKZq3
QDBv0TwGhjSP0bwGDjSv0TwHC2meo3kPBPMezYPQQPMgzYsgmBdpnoRImidp
3gQPmjdpHoVwmkdpXgU5mldpngVLmmdp3oUUmndpHoaPNA/TvAwPaF6meRoE
8zTN2yBB8zbN46BL8zjN6yCY12meB8E8T/M+hNK8T3oABHqA9AKsIL1AegJe
k54gvQG5pDdIj0Ak6RHSK/CN9ArpGdAnPUN6BxaS3iE9BEWkh0gvQQHpJdJT
INBTpLfAk/QW6THYRnqM9Bqkkl4jPQcCPUd6D8xJ75EehHjSg6QXQaAXSU/C
BdKTpDehjvQm6VEYIj1KehUEepX0LEwjPUt6F8JI75IeBoEeJr0MiaSXSU9D
Julp0ttwmPQ26XEYQ3qc9DrsIL1Oeh6kSc+T3gehlcN6n/wAyCU/gPwCsCK/
gPwEMCc/gfwGqCO/gfwIECU/gvwKEPgV5GfAUvIzyO8ATfI7yA8BcfJDyC+B
O+SXkJ8C5uSnkN8CtuS3kB8Dl8mPIb8G3pBfQ34ORJKfQ34PHCe/h/wgEPhB
5BfBb/KLyE8CT/KTyG+CeeQ3kR8FDuRHkV8FeuRXkZ8FseRnkd8FSuR3kR8G
u8gPI78MDMgvIz8N+shPI78NdpDfRn4c2JEfR34dxJBfR34eCPw88vtgCfl9
5AeCA/mB5BdCI/mF5CfCDfITyW+EPvIbyY+Ei+RHkl8Jo8mvJD8T6sjPJL8T
ksnvJD8UvMkPJb8UJMgvJT8VTpKfSn4rJJLfSn4smJEfS34t/FUY9mvJzwV5
8nPJ74UA8nvJD4ZBuWE/mPxiUCG/mPxkUCI/mfxmcCO/mfxosCQ/mvxq4JJf
TX42WJKfTX43rCC/m/xwaCY/nPxyqCe/nPx0WEx+OvntcI78dvLjwZ/8ePLr
4Sj59eTnQzH5+eT3gzP5/ZQHgB3lAZQXgA7lBZQngALlCZQ3wGLKGyiPgB+U
R1BeAe2UV1CeAdWUZ1DeAUh5B+UhUE55COUlsI7yEspTYBTlKZS3wBjKWyiP
AUEeQ3kNuFJeQ3kOHKY8h/IeuER5D+VB8ILyIMqL4Mfd4byI8iQooDyJ8iaY
TnkT5VGgRXkU5VWQSHkV5VmwnPIsyrsgi/IuysPgAeVhlJfBXsrLKE8DNcrT
KG+DAsrbKI+Dvm/DeRzldSBJeR3leSBKeR7lfaBGeR/lgVBMeSDlhWBHeSHl
ibCB8kTKG0GO8kbKI+EbbziPpLwSmPLhvJLyzH/3YzjPpLwTllLeSXko/KE8
lPJSUC4dzkspTwULylMpbwVTylspjwVpymMpr4U7lNdSnguBlOdS3gsplPdS
HgyPKA+mvBg8KC+mPBl6KU+mvBlG5g/nzZRHwwHKoymvBobyasqzoYPybMq7
wZTybsrDIYfycMrLIZTycsrTIYfydMrbYSPl7ZTHgzrl8ZTXw0HK6ynPhybK
8ynvh/OU9xMPAKHEAxAvAMXECxBPAP3EExBvAPeJNyAeAeKIRyBeAUTXDPMK
xDOAC/EMxDuAFfEOxEMASzwE8RKgQ7wE8RTwjXgK4i2gmngL4jGghngM4jUg
jHgN4jngEPEcxHtADvEexINALvEgxIuALfEixJMAn3gS4k0gnXgT4lGgkHgU
4lXgBvEqxLPAIeJZiHcBPeJdiIeBl8TDEC8DUsTLEE/DHCWehngbRoV4G+Jx
mGjicYjXYdYQr0M8D3OceB7ifRgj4n2IB2JkiQciXojJI16IeCLGlHgi4o0Y
AW9EPBJzmngk4pWYcOKViGdilhLPRLwTo0G8E/FQTATxUMRLMZbESxFPxfwl
nop4K+Yg8VbEYzHixGMRr8VkEK9FPBejTjwX8V6MkMsw70U8GCPgwYgXY/SI
FyOejPEknox4M8abeDPi0ZhA4tGIV2OUiVcjno25Rzwb8W5MooB3G+bhmBPE
wxEvx/CIlyOejjEnno54O2Yk8XbE4zHjiMcjXo8RIV6PeD6GTzwf8X7MaOL9
iAdkjIgHJF6Q0SZekHhCRnjkME9IvCFzk3hD4hEZF+IRiVdkuolXJJ6RMSee
kXhHZgvxjsRDMoXEQxIvyfgTL0k8JSNLPCXxlsxE4i2Jx2SmE49JvCZjTbwm
8ZyMHPGcxHsyzcR7Eg/K2BIPSrwoc5l4UeJJmTTiSYk3ZTyJNyUelXlDPCrx
qowq8arEszL/Ec9KvCszh3hX4mGZV8TDEi/LNBAvSzwtY008LfG2jDXxtsTj
MgM4zOMSr8u0Eq9LPC/DEs9LvC/TUTbM+xIPzGwhHph4YYYlXph4YiaLeGLi
jZkzxBsTj8wELRjmkYlXZhSJVyaemQkinpl4Z4Yl3pl4aOYM8dDESzNexEsT
T82cIZ6aeGvGknhr4rEZS+KxiddmJInXJp6bMSWem3hvRsB7Ew/OeC8b5sGJ
F2f8mWFenHhyRo54cuLNmSjizYlHZwqIRydenbEkXp14duY48ezEuzNRxLsT
D88ozhrm4YmXZ1yJlyeenuHIDPP0xNszHBjm7YnHZ7j8YR6feH1G8eIwr088
PxN0fJjnJ96fsZw1zPvTPgAj2AegfQGGpX0B2idgODOG9wlo34Dh/B7eN6B9
BIYTOryPQPsKDDNteF+B9hkY1xXD+wy078BwbIb3HWgfguG0De9D0L4Ew4kZ
3pegfQqGozm8T0H7FgxHb3jfgvYxGI7X8D4G7WswHMl9/7evQfscDOfM8D4H
7XswHMvhfY//AeJ7HBI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.6645632681398839, 
   0.7390327933269257}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.483943930233307*^9, 3.484215580107583*^9, 
  3.484215639100649*^9, 3.484313096210414*^9, 3.484314359791182*^9, 
  3.487485437024589*^9, 3.4875028945658827`*^9, 3.487503170939695*^9, 
  3.487504425435781*^9, 3.494224249339602*^9, 3.494224370352071*^9, 
  3.494226850377228*^9, 3.494847178410825*^9, 3.494850551286789*^9, 
  3.494850593106576*^9, 3.49485098828039*^9, 3.494851241571313*^9, 
  3.50546596229396*^9, 3.505467520302556*^9}]
}, Open  ]],

Cell["Alternatively, we can use two half lines", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], " ", 
        RowBox[{"Sech", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], " ", 
        RowBox[{"Sech", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.4839439741905317`*^9, 
   3.483944002209663*^9}, {3.48430942601604*^9, 3.484309436801639*^9}, {
   3.484309573811685*^9, 3.484309592255674*^9}, {3.484309659015181*^9, 
   3.484309663636537*^9}, {3.4874854476936693`*^9, 3.487485449321033*^9}, {
   3.487502981437656*^9, 3.487502993166254*^9}, {3.494224342861354*^9, 
   3.4942243583955107`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zWU=
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-30.892306118919223`, 0.}, {-0.5473642104414135, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{0., 30.892306118919223`}, {-0.13267413663386834`, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.483944002785182*^9, 3.484215582270564*^9, 3.484215640606179*^9, 
   3.484309304784272*^9, {3.48430943025779*^9, 3.4843094376248293`*^9}, {
   3.4843095822965603`*^9, 3.4843096078131104`*^9}, {3.484309647495029*^9, 
   3.484309664333256*^9}, 3.484309735433642*^9, 3.4843130984740267`*^9, 
   3.4843143602582407`*^9, 3.4874854499414177`*^9, 3.487502895058869*^9, {
   3.487502979546039*^9, 3.4875029952236567`*^9}, 3.48750317143834*^9, 
   3.487504425934462*^9, 3.4942242498065147`*^9, {3.494224359565942*^9, 
   3.494224370840485*^9}, 3.494226850855401*^9, 3.494847180212049*^9, 
   3.494847270967574*^9, 3.4948473551753187`*^9, 3.4948473979305153`*^9, 
   3.4948505518324337`*^9, 3.494850593738962*^9, 3.49485098883479*^9, 
   3.494851242208098*^9, 3.5054659628548403`*^9, 3.50546752084984*^9}]
}, Open  ]],

Cell["\<\
This also computes the Cauchy transform (with a couple extra digits of \
accuracy)\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"hf", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "t"}], "]"}], " ", 
       RowBox[{"Sech", "[", "t", "]"}]}], 
      RowBox[{"t", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4839440057568483`*^9, 3.4839440417939987`*^9}, {
  3.4875030055913467`*^9, 3.487503011893209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.9682480351975755`*^-15"}], "+", 
  RowBox[{"2.498001805406602`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483944009612321*^9, 3.4839440424574347`*^9}, 
   3.484215591184659*^9, 3.484215642564892*^9, 3.48430931154177*^9, 
   3.484313099878104*^9, 3.484314360525237*^9, 3.4874854534048567`*^9, 
   3.487502895309862*^9, 3.487503012403119*^9, 3.487503171622789*^9, 
   3.487504426171255*^9, 3.4942242499889708`*^9, {3.4942243615918913`*^9, 
   3.494224371143675*^9}, 3.4942268511137*^9, 3.494847182271182*^9, 
   3.494850552193273*^9, 3.494850593959957*^9, 3.494850989177993*^9, 
   3.494851242419196*^9, 3.505465963169024*^9, 3.505467521169511*^9}]
}, Open  ]],

Cell["\<\
Since the solution is bounded (unlike the interval case), we can also compute \
the \[PlusMinus]1 limits globally\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}, {3.4839441040557127`*^9, 3.483944139864868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"+", "1"}], ",", "hf"}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "hf"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483944091777616*^9, 3.483944094936315*^9}, {
  3.483944140915352*^9, 3.483944143963496*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/c//A+sD1JU=
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{-30.892306118919223`, 0.}, {-0.6056367377372744, 
       0.8695181135728387}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], ",", 
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
WkSSErBcNJak/Q+YZnOQ
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{0., 30.892306118919223`}, {-0.17271811296883566`, 
       0.8695181135728386}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
2rpZ//P/AIx97LQ=
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{-30.892306118919223`, 0.}, {-0.13048188642716171`, 
       7.077671781985373*^-16}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], ",", 
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
BzcEl/E=
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{0., 30.892306118919223`}, {-0.1304818864271616, 
       0.0656033567115257}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4839440979771423`*^9, 3.4839441494598007`*^9, 
  3.484215596454945*^9, 3.484215651013043*^9, 3.484313105655669*^9, 
  3.484314365075713*^9, 3.487485461084436*^9, 3.4875029002988663`*^9, 
  3.48750317707721*^9, 3.487504431193286*^9, 3.494224254935886*^9, 
  3.494224376517861*^9, 3.4942268559959173`*^9, 3.494847200504257*^9, 
  3.4948505597659607`*^9, 3.494850599016389*^9, 3.4948509942045307`*^9, 
  3.494851247663393*^9, 3.505465967606063*^9, 3.505467525573097*^9}]
}, Open  ]],

Cell["And the Hilbert transform matches", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}, {3.4839441040557127`*^9, 3.483944139864868*^9}, {
  3.483944218556014*^9, 3.483944225156108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hilbert", "[", 
   RowBox[{"hf", ",", "0.1"}], "]"}], "-", 
  RowBox[{"Hilbert", "[", 
   RowBox[{"f", ",", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4839441682840843`*^9, 3.4839442121497087`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "9.442446824436956`*^-14"}], "-", 
  RowBox[{"1.858513343222512`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483944168693555*^9, 3.483944172013701*^9}, {
   3.483944202777815*^9, 3.483944212744112*^9}, 3.484215651310932*^9, {
   3.484309299940062*^9, 3.484309314897402*^9}, {3.4843095873395653`*^9, 
   3.484309681693447*^9}, 3.484313106353702*^9, 3.484314365386196*^9, 
   3.487485463711349*^9, 3.4875029005816803`*^9, 3.48750317734487*^9, 
   3.487504431475905*^9, 3.494224255273559*^9, 3.494224376864807*^9, 
   3.4942268562262917`*^9, 3.494847200902297*^9, 3.49485059942671*^9, 
   3.494850761895397*^9, 3.494850994477758*^9, 3.494851247962748*^9, 
   3.494851297976645*^9, 3.505465967857318*^9, 3.505467525813748*^9}]
}, Open  ]],

Cell["\<\
At a single point they are both O(n log n) operations, hence comparable\
\>", "Text",
 CellChangeTimes->{{3.483944248166347*^9, 3.4839442923342333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", 
      RowBox[{"hf", ",", "0.1"}], "]"}], "//", "Timing"}], "//", "First"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", 
      RowBox[{"f", ",", "0.1"}], "]"}], "//", "Timing"}], "//", "First"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.4839442632666283`*^9, 3.483944286552775*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1212470000000021`", ",", "0.07961400000000118`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.483944286884128*^9, 3.4842156525980663`*^9, 
  3.4843131090892344`*^9, 3.484314365564587*^9, 3.487485466733247*^9, 
  3.487502900758458*^9, 3.487503177523335*^9, 3.4875044316584597`*^9, 
  3.494224255473106*^9, 3.494224377047526*^9, 3.494226856398656*^9, 
  3.494850599692299*^9, 3.49485075865098*^9, 3.494850994652615*^9, 
  3.494851248084725*^9, 3.494851341959208*^9, 3.505465968069407*^9, 
  3.505467526021256*^9}]
}, Open  ]],

Cell["\<\
Globally, two half lines is an O(n^2) operation while one real line is O(n \
log n)\
\>", "Text",
 CellChangeTimes->{{3.483944248166347*^9, 3.483944316663529*^9}, {
  3.4948513539952602`*^9, 3.494851357720566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", "hf", "]"}], "//", "Timing"}], "//", "First"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", "f", "]"}], "//", "Timing"}], "//", "First"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.4839442632666283`*^9, 3.483944286552775*^9}, {
  3.483944321445191*^9, 3.483944324233823*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.972656000000004`", ",", "0.10951400000000078`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.483944286884128*^9, {3.483944323024613*^9, 3.483944329939587*^9}, 
   3.4842156618621073`*^9, 3.4843131159919577`*^9, 3.4843143704646053`*^9, 
   3.487485477641158*^9, 3.487502906269846*^9, 3.4875031832309437`*^9, 
   3.487504437148703*^9, 3.494224260807394*^9, 3.494224382331625*^9, 
   3.494226861617133*^9, 3.494850605147423*^9, 3.494851000048244*^9, 
   3.494851253587617*^9, 3.494851350881035*^9, 3.505465972427722*^9, 
   3.505467530351985*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Over the real line of a function with different asymptotic series at \
\[PlusMinus]\[Infinity]\
\>", "Subsection",
 CellChangeTimes->{{3.483942350266241*^9, 3.483942352792292*^9}, {
  3.4839455399435863`*^9, 3.483945568126918*^9}}],

Cell["\<\
The Laurent based approach is not as accurate for a function which is not \
smooth when mapped to the unit circle (we fix it at 500 points since \
adaptivity won't converge)\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483945574278681*^9, 
  3.483945615151475*^9}, {3.483945675939287*^9, 3.4839456979230347`*^9}, {
  3.483945817409748*^9, 3.483945826952993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"LFun", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"InfinityQ", "[", "#", "]"}], ",", "0", ",", 
       FractionBox[
        RowBox[{"Erf", "[", "#", "]"}], 
        RowBox[{"#", "+", "\[ImaginaryI]"}]]}], "]"}], "&"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], "]"}], ",", 
    "500"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.4839456558967953`*^9, 
   3.48394567242994*^9}, {3.48394581575795*^9, 3.4839458256392803`*^9}, 
   3.487503024494022*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFmXlYjuu3xxuovJVGqQiVFOUXmVK0nlBKGsg2hLYhZKMytHchs7YxFDtN
hkKIVJKh4X4apXme3hdpllAqDZKzzzlrndM/LldX0/Pc91rf7+ejvcVz5TYJ
MTGxbnExsf/+N8+mU6epaSvvwJJWzk/xhcS/+h/ENTnzdjbLDRKTz4Kbquho
0ellvNuM5phJy4Ngk++IrIbGxfzHh7kBN1+GgLLD1t/ky4A/E1Q/TqByC1Zo
X890O2nGKxtbqt2wiYKMbssJ2S/m8glBGsf+8LsHY962CGLqZ/Hm+0cbOsQ/
gOgKyTXwcCavZzD9m37TIxDu1MkVzzPm29ff3vhJEAdOHX65uk1G/CUTjZTx
UfEQfvVuV4rvNL6mQe9qsNlTUL7TaevoYcCfmFKy2640EdalXq089ngKXzXB
qFJ/RxIE/ozrcDPQ408flNw2fug5LGtXVcor1+X1LI+mql9+CfHHx4lpR+vw
HQtLz8rpJkPv4oU708O0eQWJt0dbE1PgZpzdm52PJvEzfOs3hVilQU35HI/8
BxP5a9LjB5UqGaz4YBEZpjuBt1dLDbwVz0PBQI1NAj+eb3Aat03WJx1cxef/
5X14HD/XJ8MjfWEGxCn9ClJw1uRVzcPiX0lkguH2Vyo2lhq840fjeV9zMkFZ
Qcxq2xJ1/pJwWHHNuSzYdPBZmarLWP7JmYK17cuz4Q+RuOO6Y2q80Kp3xu3R
OTDlcc2lQ8/G8J2P0rL2F+eAzyiJgeE+Vf7z3fs2LpdeQ8nJrYLr1qq8hCBt
cLlDLqy0C3s6+ZYKvz23SWeJ3Bvw68iSuyepwjcsmq5i+uYNTBr3fpq5lzLf
rTzJQPt0HuxIUq8e36zEP54n86YP8sFlWctQyGYlfpT1HPfEgXxw3W33SLVZ
kZfuMzrpmFAAa6Vlr/3yUORH8CmR6TsLwf0ftbznPxX4eFbmIjmpCAaldLo8
DBT4l6cHbOUriyDcPyF89cbRfJWxlXrNmWJwXn/SPTFMnrfteGkWq1UCbqlX
rd83yPGtoqFztn+WgNmoMv+FJnK89vnVa8yKSuCIZp/24rOy/ICPW99hvVJY
o+W70KtVwH/wG5Eif7gUpGR73zsuF/CVW1za20pLIcpZsfjP56N4QVz2M4F+
GZzoe3/5hMEoPs+8xNTzUBnEVovOq9+U4X1nGe9RLi6DramzLJs1ZfiGCeK6
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
R0D9CPsTUH/CfgXUr7B/AfUv7GdA/Qz7G1B/w34H1O+w/wH1P+yHQP0Q+yNQ
f8R+CdQvsX8C9U/sp0D9FPsrUH/FfgvUb7H/AvVf7MdA/Rj7M1B/xn4N1K+x
fwP1b+znQP0c+ztQf8d+D9Tvsf8D9X/kA0B8APkBED9AvgDEF5A/APEH5BNA
fAL5BRC/QL4BxDeQfwDxD+QjQHwE+QkQP0G+AsRXkL8A8RfkM0B8BvkNEL9B
vgPEd5D/APEf5ENAfAj5ERA/Qr4ExJeQPwHxJ+RTQHwK+RUQv0K+BcS3kH8B
8S/kY0B8DPkZED9DvgbE15C/AfE35HNAfA75HRC/Q74HxPeQ/wHxP+SDQHwQ
+SEQP0S+CMQXkT8C8Ufkk0B8EvklEL9EvgnEN5F/AvFP5KNAfBT5KRA/Rb4K
xFeRvwLxV+SzQHwW+S0Qv0W+C8R3kf8C8V/kwxzxYeTHHPFj5Msc8WXkzxzx
Z+TTHPFp5Ncc8Wvk2xzxbeTfHPFv5OMc8XHk5xzxc+TrHPF15O8c8Xfk8xzx
eeT3HPF75Psc8X3k/xzxf/QDHPkB9Acc+QP0Cxz5BfQPHPkH9BMc+Qn0Fxz5
C/QbHPkN9B8c+Q/0Ixz5EfQnHPkT9Csc+RX0Lxz5F/QzHPkZ9Dcc+Rv0Oxz5
HfQ/HPkf9EMc+SH0Rxz5I/RLHPkl9E8c+Sf0Uxz5KfRXHPkr9Fsc+S30Xxz5
L/RjHPkx9Gcc+TP0axz5NfRvHPk39HMc+Tn0dxz5O/R7HPk99H8c+T/0gxz5
QfSHHPlD9Isc+UX0jxz5R/STHPlJ9Jcc+Uv0mxz5TfSfHPlP9KMc+VH0pxz5
U/SrHPlV9K8c+Vf0sxz5WfS3HPlb9Lsc+V30vxz5X/TDHPlh9Mcc+WP0yxz5
ZfTPHPln9NMc+Wn01xz5a/TbHPlt9N8c+W/04xz58f8CSXaq/w==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxFmWlYjWvYhhsoDTS3U4QSIRtl2sL9kjInY1ubDIXIpi1Rpoq0DRmTUBGV
DNFgptxvFGlVmrSqtSpSSQqpDEV9+/uO6zi+/vjRUVrv+zz3fV3nOWD15gVr
lBQUFFoUFRT+99/sGZ/NamrcxK5+n+lSSje6vf371aSahaJC/5G3NqYMJHd9
uX/e/lli17in1YtnjKOVft0yqt/aiYpbgoJOJ08jXUe3xT0LSexSTDURhjrR
/AFnnrrvmyAqa9TkjXNwpictU0wz748VFXfovfBIWEEGFXXq11/biAHaRlqT
b7pTfLGyM10bJSp2M3qmMmwDydabZSlmjxD38IuqoYO8yKlxd5Z5jZX42H97
ZtsBb4o8Fdec6jdUVNBNU0uftJ10Yz/PnLfJUhR9Ls1fO20nLU079SrgxiBx
sqRPy6NIfzr5K6nR3dJCnCy67pxlvpdmNejrZBeZiwol6SGvo4MoOdBEYUC8
mdglrlunMv1farObtD49YoDYWWd7MdrgEF1Imv1ifUJ/kRIDhp/UPEKlRWM2
Sa72E7t0On+vNDhO899MvhRhbipGPzTe4v/gBOX8KJ2RIvYRU+JXvTf5J5Rc
Ff/Y7rPLRDy+c/HLixPDKEmnK1RrobHYU8vjeKdJOA1b+1BvxpTeYs+khxJT
rbOkq6Vgv2aakWhzo27hR4MIWrnjTqG+y29ipUXeiD9HRtEGueK8pQGGotJv
PhEOrhdo0I3SYzvvGIjtc/4JKngZTb5qSj86v+mLWwbt1x7WfpHy97mpn3HQ
F+3rXavNf4+hBbMjbg2M1hMLDYuCEz1jaXdjhuZlZT0xdfalwekpcdTfpGqo
rZeuuHfXz8OzleNp3V0jaZ9aHfGReffeU5ZfIZdZdT/PrtIRbeIWFoaKV8l1
4+wE/VptsWnhWpcxw6/Tn6oaYV2btMXb/b9+MYxJII/Thtn3fmmJd2Zp7h5i
dpPaVcyaN1lqiXO/XvVdfi2RIoNTIpcs7yUe/VARWBCVRAv/2udxO6Kn+E36
60PrhmRyTzvlUFWtKfbbExtzfGIKTVArDJ5krSn6H/pqHKl7i/YYfxtgd1BD
jI4wOtir6RY59/Wb5PVOXTwZs6imUnKbVDTaqubNURdVY+aVKyfeoZiF2i+3
3VMTD2joPPM+fZf2fqs6vtdSTVxVfjNm4N57dFMqP2x0oYf4R8wBRc0t98kt
zWZKrXEP0Tve8JPp2gdUzTVRERGqYkzmpvfzXR9So+Tmitb+qqJsY1rmGZdH
lDV/7OEb11REizfq5+pcUunCzTHNB8eriMmLH8UOX5FGYu8S0Sm7u1jsN9Nm
xbrHNMEj1CJ3RXdRMufZAU9vJu7h8Cn3ezdRV8u5OnqKSKqtpnYWYd1ER7lT
7TqJSFEehxZdGd1NtB3yzEDROZ0sF+hYjJAqi9HvlvZYXZNO+iM3zzq1S1ls
Vz5xyt/7CaV0DHt4e6CyGGpWnTO321O6G9Xv3OaXSuIaN/vvfPopWe53Nri8
S0l0MlhxJGtoBpkvezfa1kpJTBSWjFgqZtB7zYmpepWK4sfFrgmrnTMpI+pU
D8OTiqLFii+/ij9lkpf5vJYhMxTF9Sr3Z104+IymrUq/O15BUfRJ/fE+ceBz
UpEue2X1UEH0WnnRo1V8Tlb9a5W++CiIEzrDjy11zaLqF/u1fGwUxMBDnp6S
n1kkHhp9dXptF++uNlo8JvIFfXrbaV++tosrb5R0BE7Mpis/T60J/NDJNR2p
myMqsslj5kFLU+9Odv/HYrinv4SEMX2nhf76xUnB0ZblA3JIUzGmPuPQLw4L
Xi7Lz8ihRl/J1TPGv1grtmbeOI9cyuu87dGW8JMTt3cb0aaRR8OPhtHTKT+5
2askpzkxj0ZpV2z6UNrBBsPFMfqLXlJ6TNLsP7d0cI+BLrZ231/S1H8ujWjr
2cG/nEJFa8d8ktqHrL95vZ1Npu3LGBmdT63HfUb8M7udq1/fqOr1JZ9y92w+
MazpB5vL1tiJdgUUXLzw75zjP/hef8mA8WEF9LZhkZvd2B98rN721vq6AnJM
dpQEVHznEdH/2s4YV0gr1bKv+QR/5331r3s9/7eQ9HvFXdcb9Z2Hx4WcLpMW
0qXOhXpzK77xgoo5i70HF1HOkcSH+oe/8d6S4A//biuiensHFdcJ3/ivdQNN
NDKLyDZkcFWfD1/ZUGmU5LNuMW0I7ZdgH/WVm9fZaAxfWUxpwrLZuU5f+Zmz
veHthGLyve6tebX7Vz5Y3rB4x/di8t6SeS3vURs76V9332r3ilqvj5wx2ruN
u9/bqB1+5BU9STTyyB/WxtddzyyTlryiZxtvNZytbeXxgnLQ0H4l9HR1ZI8D
0a3ceC22ff/aEsq4F+94clkrazcaba5KKCHvcc1nk3q3so9Vq8TqSwlpu5jr
y6Qt7Pvm3Xj3sVJ6++DLCPXwFg5fl2ayy09Kj6Oz48Y6t3DTIsveno+kpBAW
77XUqIXfdfc2sPwppe/d+0o8y7/weKnqmGu2pZTsuc9qXdQX/m1zmbzer5TM
XOc42K/6wmvdElJkd0up36IdigqDvrCDz7SoHV9KSf3tH7tOfGjmfkHbM9Ks
ykhnzznV1uRmnjjV8kTUmjJyL3G3MPNr5vKooTd0o8poumnPYMMpzTzovp6y
YVEZORxllRy1Znaz+pYWrVpOUfH7EycVfeb5TnozEyaUk2PW3uS1UZ85u+vv
edYby0k7zWHNVI/PPPFvt0dWkeWkpTdmZo7NZ851sbwbll1OCv/39ZkP95gS
v+5bOQWHep5POfuJQ7Q+2kSZyajWiW2vjP7EnnOOTx41R0bKy1bXleZ/ZKv6
bnWmW2WUEnG0YeKmj9y+oz1o1TkZRS1tfJmj+ZEXWQvJrY9l5FU50zkwoYm/
F2rZFr+RUdaRv30Xzm3i9uULrX4qySmnj+LKiZ8aWdB599zDTE7DQ0/9PeZk
I4sbSw8YCnISy++NGj+2kdOklwYoLZOT7NaQjZNlH9hr64adltvkFPzVWH1q
4AdWih1zJ/ionPyM9g+cZPmB+yVbmBvHyWl818nOIfkNbNozce7rB3K6bWPS
TdmvgUMCCj6X5Mhp/rmhWU/MGnh9vFNHR4Wc3CrPK7vnvufrPZqOzG2S0+ic
l6FvfN9zUa/z7S/a5TS5ysFvrMV7XmGW+3SzSgWVLwoqWV5Yz7/1PRkxSbuC
VPoWfFwQUM/5M5pXWxtVkIJmXwudEfUcp28yZK5pBVner28PrXzHU+NvDD1i
VkEDt0/Qkh59x7mbvuc3D6ygqW1RfUvoHT/InpK8w6KCbtcP/xXSXMf673qF
DP7v+33Xx1/4FlPHSRV/z/nev4Km7wjW1nWu48NWU1WbTCpomOuwraXqdcxH
Q9u7G1SQdEYP1elcy8enVIXYaf738wbSPi5bazky1XPOZcUK2ny+pF+vobU8
7835j7+3ySnXQ+v4itc1PDt2ybzKOjm9srugNDu8hreMnOZ1p0RO/uc0BuQ6
1rA8cKbvnQw5nR147kq1Sg37+JSlVCXJyexW4voD/JYHzXA5NiZCTlw0evoj
37fs7n8o+v4+OelqKIz1tX7LhTb1ERs2yCnfw35iamM1W90xXjp3npzMbTX+
CYqv5jV7XAtWW8up/7WYjtzV1SzZ3GJ6Q09ONirD9E6bVrPqtCO7fm+R0Zxw
9c6y8jdsPObZtPf5MipN9dcJD3/D9zJCm6sSZLRr5ODk7EVv2CIyzcTgXxnN
FUIct+i+4aJtS3YcXiGjgJJHHofzX3Oi+rhq+7EyMhgsO6x37DXXv95hP11D
Rn9VpDv1cHzNA3S7Uk5WltPEuPBl63q+5pDS6sXDkspJVfZeXHauip0b1Hz0
A8rJJ6in9V3jKp5+LHrLfMdyujnZM7IkopJL3C5Kao3Lyd72fNyDvpV8NnXZ
b69qyyjhgXuPv6IrOCZSUdU8sYyemnaG3jWv4J7WlmuKtpVRlPHRYVnxcjaU
LDdomFhGrVeDMg9byTlpXIqep2IZPX+i7vkrWcYnDzlsdckopbu7vcf1Hi/j
pcMrVqfuL6WAY8nOssflnGfraRZmX0qW9flqgkM5Gxtf13yvXErpjlsj7fLK
OHBC0olUUUpcuGRT9ZIyzlbZNU5/l5Qsm/KbjF6XcmZ16NnWMVK6PHzVmbfr
S3nRxDMeqz/+N2+dxrdPbpVy3nn5+tVxJTTqfNaNwf5SnskK23+4lJD+5j//
Oqcu5W3bD+220iqhe2nh90NPl/D1uIA9Ck9e0diL4w9om5dw2zuVozu8X9Hz
M4fO9kx6xW+GtBdeMH9Faw4bZf076RXL2o8E+xQWU+KqmR07JcXsGtfQohDw
337przzo3dJitu6UbJ9uVUyZfzs5PKsvYve3/QMcpUWk7tZjjaFvES9wu37Y
JLCI0i/4hhWrFrF10MUht4cUke5unbZf4YXsGev4o29BIQUt1L9+zLKQ2zbe
ueq6vZD8U+3qgx8UcKmj9Y+dfQrpYGpY3etZBSwNMr2zUyygPU/f1Z+T5/Pm
UO8Hbm4FdMPr9oSUTfn8SNj8+Y/uBeSgJhkxUDGfR3eOW9Dtcj6d7a8zQz74
JX98HFiTZZ9PK6oGfjV2zOPY9Wu3mrx4SWvtLYSurbm8rdKwLrnbS2qJbVAP
iszhjoRj21ZNzqPA6/NmxmZIuOPXqdNjt+WSk0ZKh0tTNg+9EJg3KSGHPqf4
jIgxzGavplNp+15LyND3UOd24QXfXDilt4GehEJMWo8Wb8jiU0t2JnTaZdOX
kEW6t8Oec6OFmvNc7xcUstg3Uyf9GWtfK9TsdTGLduvWfqpvzORZatav5uY+
p8a69W9H987kSxHTsnt/f0YnXiZ3fLbP4MLpE438Bzyju+nSKCPvp5xil/zz
0MxMMgj4OS4++gnbjGzNnOWVQbnalcKZvHTefWRloSTsKf1kr3HvforsFZB4
zOThE/pxzu/SsWEiZ76dtWN6RTo1X1zU3/jOY+5+KbrP8i6RYiS7ht3VS2O1
+dt6bfivVr2dYXO+Ycsjtuy9o/5bwGNauvtl6s3CB1yvJ/kpcCrZ6uyQ/rC+
z4efehRkdzykbzu9Zj4NvcuC0fCWpLEPaGnALF+lttt8X7dRScvrHvn5Tim6
ueQWx23se1vhyh1qm+dXyPeTWeFosORi5S1K05j91cokiXe/qOnbS/+/PrFn
wBFZRwJHlIUfXTUjiSiyNqYl/Sobjjzbx+tbAv35aKPLiQOXWbdons1fy65S
Zmzv2ph5Mbw/6e3mVI6jmXuyAo1/i2bvm4EtkgGX6FJodWNW2lmuiT1Vua97
FG0NC+9XPTeUo8Pn293IDKOrCwr9H6ceZEe+4qimdoQe05n6nal+7Nx0OaVB
bTf2+f9/4fuE7zN+nvDzjN9P+P2M/5/w/zP+PsLfx/j7CX8/4/MRPh/j8xM+
P+P5EJ4P4/kRnh/j+RKeL+P5E54/4/0Q3g/j/RHeH+P9Et4v4/0T3j/jfBDO
B+P8EM4P43wRzhfj/BHOH+N8Es4n4/wSzi/jfBPON+P8E84/434Q7gfj/hDu
D+N+Ee4X4/4R7h/jfhLuJ+P+Eu4v434T7jfj/hPuP2M+EOYDY34Q5gdjvhDm
C2P+EOYPYz4R5hNjfhHmF2O+EeYbY/4R5h9jPhLmI2N+EuYnY74S5itj/hLm
L2M+E+YzY34T5jdjvhPmO2P+E+Y/Yz8Q9gNjfxD2B2O/EPYLY/8Q9g9jPxH2
E2N/EfYXY78R9htj/xH2H2M/EvYjY38S9idjvxL2K2P/EvYvYz8T9jNjfxP2
N2O/E/Y7Y/8T9j8jHxDyASM/EPIDI18Q8gUjfxDyByOfEPIJI78Q8gsj3xDy
DSP/EPIPIx8R8hEjPxHyEyNfEfIVI38R8hcjnxHyGSO/EfIbI98R8h0j/xHy
HyMfEvIhIz8S8iMjXxLyJSN/EvInI58S8ikjvxLyKyPfEvItI/8S8i8jHxPy
MSM/E/IzI18T8jUjfxPyNyOfE/I5I78T8jsj3xPyPSP/E/I/ox8Q+gGjPxD6
A6NfEPoFo38Q+gejnxD6CaO/EPoLo98Q+g2j/xD6D6MfEfoRoz8R+hOjXxH6
FaN/EfoXo58R+hmjvxH6G6PfEfodo/8R+h+jHxL6IaM/Evojo18S+iWjfxL6
J6OfEvopo78S+iuj3xL6LaP/Evovox8T+jGjPxP6M6NfE/o1o38T+jejnxP6
OaO/E/o7o98T+j2j/xP6P4MPEPgAgx8Q+AGDLxD4AoM/EPgDg08Q+ASDXxD4
BYNvEPgGg38Q+AeDjxD4CIOfEPgJg68Q+AqDvxD4C4PPEPgMg98Q+A2D7xD4
DoP/EPgPgw8R+BCDHxH4EYMvEfgSgz8R+BODTxH4FINfEfgVg28R+BaDfxH4
F4OPEfgYg58R+BmDrxH4GoO/Efgbg88R+ByD3xH4HYPvEfgeg/8R+B+DDxL4
IIMfEvghgy8S+CKDPxL4I4NPEvgkg18S+CWDbxL4JoN/Evgng48S+CiDnxL4
KYOvEvgqg78S+CuDzxL4LIPfEvgtg+8S+C6D/xL4L4MPC+DDDH4sgB8z+LIA
vszgzwL4M4NPC+DTDH4tgF8z+LYAvs3g3wL4N4OPC+DjDH4ugJ8z+LoAvs7g
7wL4O4PPC+DzDH4vgN8z+L4Avs/g/wL4P8MPCPADDH8gwB8w/IIAv8DwDwL8
A8NPCPATDH8hwF8w/IYAv8HwHwL8B8OPCPAjDH8iwJ8w/IoAv8LwLwL8C8PP
CPAzDH8jwN8w/I4Av8PwPwL8D8MPCfBDDH8kwB8x/JIAv8TwTwL8E8NPCfBT
DH8lwF8x/JYAv8XwXwL8F8OPCfBjDH8mwJ8x/JoAv8bwbwL8G8PPCfBzDH8n
wN8x/J4Av8fwfwL8H8MPCvCDDH8owB8y/KIAv8jwjwL8I8NPCvCTDH8pwF8y
/KYAv8nwnwL8J8OPCvCjDH8qwJ8y/KoAv8rwrwL8K8PPCvCzDH8rwN8y/K4A
v8vwvwL8L8MPC/DDDH8swB8z/LIAv8zwzwL8M8NPC/DTDH8twF8z/LYAv83w
3wL8N8OPC/Dj/D+cVxJa
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-6.4816115116406765`, 
   6.4816115116406765`}, {-0.4554125529313456, 0.4554125529313456}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483943284903302*^9, {3.483945670095839*^9, 3.483945672999289*^9}, {
   3.483945816929749*^9, 3.483945825987019*^9}, 3.4842156734668617`*^9, 
   3.484224242150696*^9, 3.484309254320442*^9, 3.4843131278461847`*^9, 
   3.48431437065812*^9, 3.487485492332634*^9, 3.487502906469698*^9, 
   3.4875030399032307`*^9, 3.487503183460688*^9, 3.487504437336874*^9, 
   3.494224261001101*^9, 3.494224414136538*^9, 3.494226861848843*^9, 
   3.494847161852453*^9, 3.494851390067387*^9, 3.5054659725915813`*^9, 
   3.5054675305179*^9}]
}, Open  ]],

Cell["Now the Cauchy transform is innaccurate:", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
   3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
   3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943867662326*^9}, {
   3.4839457186196327`*^9, 3.483945726756151*^9}, 3.484028109723958*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"f", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"t", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}]], 
      FractionBox[
       RowBox[{"Erf", "[", "t", "]"}], 
       RowBox[{"t", "+", "\[ImaginaryI]"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.48394329305892*^9, 3.4839433207561693`*^9}, {
  3.483943369247134*^9, 3.483943369334272*^9}, {3.483943752798101*^9, 
  3.48394385506581*^9}, {3.483945710626296*^9, 3.483945715975523*^9}, {
  3.48750302701962*^9, 3.48750303770638*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "7.330480702512354`*^-6"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4839432977574778`*^9, 3.4839433210960817`*^9}, 
   3.4839433695202513`*^9, {3.483943750665978*^9, 3.483943753659663*^9}, {
   3.483943802607685*^9, 3.4839438554225607`*^9}, 3.4839457292338247`*^9, {
   3.4839458208271217`*^9, 3.483945828194581*^9}, 3.484215674548518*^9, 
   3.4842242434907093`*^9, 3.484309256897737*^9, 3.4843131281374826`*^9, 
   3.484314370865389*^9, 3.487485497348207*^9, 3.487502906678142*^9, {
   3.487503038466999*^9, 3.4875030408637733`*^9}, 3.487503183672113*^9, 
   3.487504437544902*^9, 3.494224261235811*^9, 3.4942244144271307`*^9, 
   3.494226862053484*^9, 3.4948471631299067`*^9, 3.494851390390834*^9, 
   3.505465973266934*^9, 3.505467531201433*^9}]
}, Open  ]],

Cell["Two half lines do not have this issue", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.4839457382352133`*^9, 
  3.483945746684516*^9}, {3.484028114370496*^9, 3.484028128222385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Erf", "[", "#", "]"}], 
        RowBox[{"#", "+", "\[ImaginaryI]"}]], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Erf", "[", "#", "]"}], 
        RowBox[{"#", "+", "\[ImaginaryI]"}]], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.4839439741905317`*^9, 
   3.483944002209663*^9}, {3.483945753620615*^9, 3.483945756144388*^9}, {
   3.487503044279628*^9, 3.487503049549366*^9}, {3.487503093449812*^9, 
   3.4875030959370193`*^9}, {3.494224387491355*^9, 3.494224406937554*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd1P8zFHgcx/HV+q4kkXG5JV8ifbs4ShnvWF+WHV/zZUuxvpQrx7rrfFtb
N9VKOcVWy7kU244p300rO1l8PrJRykpam93NlrZztpIvl0uS6/rxHjPPef0H
r3WJjIiDywgEAvVL/+2n1D+EJAkP97+L3JrV5Qn5tG+nSX0ncLacXD7eux8i
cr1r4y4xsJplxch2z4AnOmsLbdsSMO4OKjn1ggVpBaEfmbxovF72y9TyytPQ
di3c4tfIULyS47whP7oE2sllpsaT/jhtYkrMCi+FmrjR4P1Mb2wd9E5j63cF
7qTUh2jl7cJy/k8o8vI1INLjPmy1dcdb+ZQ+ifl18Jtois3Z7IIfklMujprV
AztphWFh9BYMAdIfmvubQdiU1i2/vgEnOAeQ9YYFUCUjlT+dcsDJidL+Gnsh
RH180C+atsVs14S159vaICIqu1XnuA32TSW2UH/vBE380tjAayt84FkWcyGu
C0KYR2wi2JbY6xVpnsnthgBDRiORvwbfpkj8xyfvArlobBxvNsMOYKaZO3wP
SHN2+Tkmplg47cJv0X4AAcK+unO7TPC876LwQHs/jDh3eB7xW4HbO62SK/0f
AV23QRKUY4gDa5Jb/G8PAuErfczdsy/FwnUIcsI+nRUP6OBMgQ/fuvkJdA1v
C3V4RsT2bxSXVm8chiK6NIFtvQy3PLhhWVMhg8XOyLrbxQTMcRq3W7nwFCbn
VGMXQj8j3lBBo8ZDDhWrPtOi7y4gSq6Qb0lVgJ9IO8YjZx6tV/HuOtgowV7V
s2mR/g+KGU7LM6xXgpSb4peR+x7tkqwbVKiV8F5rSbi7fRZxdC9snxMr4W24
/nmZ/QwKXF8dUURVQmfIDvXOpikUfOh18EWWAv46Jp3RNE2ig3u0gzfS5VA2
z7XX2fEGFY9YejZpjYA0UNDAnJ5A/lddLMrTZVDWKv5ULRtH81l1nom3pHCy
MC8//c9XqMlE7HJcPQQTvx2Id/tGjQo/75k6ZfAYbhjXT4sZY6iHVSAp/u4R
3Nm3246sfo5u3lxehXofwrGTKUDVjCI6OXk6KOY+mDv6NIfuVqIzhwry9a16
4EfTV2/YPSPoyU7az0mkbsikTBlTcmVoL3HWhJaEIeorKboXvXRrdkQErWs2
eXXEDCFXqaMeMUsIpoIWC8WxQZSpQ7NuLBVAqdYRXnnhAJJ3PK+2dmsGT7WH
QBbzEDkelegzOLVgYP5y9Fz8fRR9WB54orgaRNyseI+rPchB4BWiHcaDpdk2
QYOJGGUtiNtErMvg2qEbvLylC7FHSZtURVx47cTOZxohVKW1tLi6tgTcOITH
g7oipNnuHKKinwW3TN9YdZQQ+Qi2m9YsngScFBbw8m8BarfLoKYr8yAtbTA0
8Xkz+phta8b4cBT6DCrcqpzrUSFhZeOAMhVqmTR91brrSHQik0gZTAQnOwcW
n3cNcW70qgwzaBC06lavL/UKyjhdu23ZzhAwMq30/D6yFFWcsWTIOd4QOKMz
yo0pQZTG2KX5IRdQKcwUXZWnkY+5Zq7VyBbqzLPrX7xgoYEo4+DuwytgdeOQ
2Rn3DCS209tSdXbGay+Nmvq2dz9y1zeKzXTr94rodS/68kMorCjdO97pnBfh
f/4F1l9WIw==
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxF049fC3gcx/ENy2pxVuIhJKud6uRHp/Rjjz4pS+yhMa1Fro1OuVw3RNaI
pKgIcaVcZyUe6ZdFNP38fpcpTMvUmlo/lOKSepQydFP343GPxz0fj9fj/Re8
l+4WcvZMIxAIrL/7Zw37rsqsVLnYd+1vcmttsmdi0OJRq6cn8XV9OK+q94kn
J2ZdYcivQnxwHfPbisgRzxbSwhRa5S7ceSN7/yqqCUSeYU+IcwOxqyJOeNGw
BCqvb51/IoCN3xMLbo5LV0G1zxWz2cO++Kadu0ccHaAgpGvzTvE67A3czDjl
JqgLL/YnHvXAppJx8YNCLkwXhHxeSXPBJIe8GYtKBcAckAaLHJ1wm1NcdaFs
LySEzjJJCVyBCQaGP6/iAMikkQ/b8+2x7XjGtroaEeRorbJejtDxjZq1GaJX
ccCdUDZWjdLwLqNMG8vLp4HDPVJOOm6NQ+h3WuJvp8I7/lRv0+AifJay2HKP
62XwF0dYcxIW4FVnrql8LmTCBhPh7el583CR+rvmUKIEfM71vsWOc3Gqhe6B
NDgPrPQ2iaI5Zngmre2z33A+bJA9LUr1mIPLlpB6mOwSaHOoYUQwZ2H/Ir7+
G+UdEBiVqDaJTPBAuBXZOfI+EP5Fxg2KxuRDWRUg2mJIVjSRMOueOn1yey3I
W1ez6Z3TcQ3Ze9BRJ4dzAs2uhCXT8IqhaIuklwr4WhtQVHGBgFnPN6rW0x7D
sL679xJ7Ej1TzqKYlSohmzoZFPjoT7Tji5+KHtUEzKoZPDfRF9SuZ+ZZF6nB
trt++VfBJ7RzKiAqRNIMmvRw5v6Yj2i37Pgp5zMa+EicknlVj6GvbPWMCY4W
hraSz2ttPyBcQE7JG3sJtf6ufe7SESQ4ZL+iP7gd/ojVfHgnHUYB/Qc9yCd1
cOVLui3J9T26NhH/Iia4AzQby0rEowOIKFprSX7bAVfKFYab2reI5hc20ULr
hPiUo4m/vOlHKy/00CjUThg4+wPf2bIPyVWm9mHlHXBrdvGoQtiLEm6t0UsW
dEDdDi8bn75XKEmU2NvirYPY+HBgvetCrB+7Vw65t4PFMu9StlcHSqM7aeZR
2uBns/73CfVtKL+CFRFYrYXDfiOz/WK0yH7xm2VOvFbg/kuDLE6eeBz9ugXK
5y33rOE1I7Y8s818bzOYld2br4tVI8Zhh2rKoBoyiBG5WSlNSB+BTaMOPAdG
n1uZlvcMtUbVi/STjWBs8borlf8EqTkxDsarlVCVHs13u1aPVCIn85+OP4ap
scqykjkKlJb2qGrh4CP4vsZos+k9ObI+X9BIFT+EQbuERDEFofCwHH+uoxyc
0wgv1EZV6GrUfM+9prXgfHh9cB9XhohUmzdKk0rAoVs2vB4vQ0Qhf1pwYDlE
RqrZu1+VIukBytjA8F14apztnONQjOpcCn0y86VQKA4idy/NR/1b8u0+zywE
Oxv6sbzc6yjnwepWkeEGbKLeb1jP+h2JesxP7YnPAYqZhLEmIAOJjYkhHx2z
YOMHUlc67yIauysJowovQbdurk4uOY3Ufu52jNPJUGRxpLin5xjKHhOCLysO
zG83z01y2Y8KQrcl+bIOwvYg1r6hhp1IaOBT+hgC4DS4nIuWM9CnlkWx3m5e
//3jf38BM/xRyQ==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-27.309073119326918`, 0.}, {0., 0.4552509732540121}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd1P0zFHgABnBaJEoSGZejvJT0dnGUMp4v633HS/KypVgv5cqx7jpvS91U
KyXFVnQulW3HlJcwrexkEdkoZSWtzdpsaTtnK3m5XJKc7n67Z+aZ5y94Piuj
mUF756mpqdHm+nX/n6B2x9yUFmcE5ia6RtqcdtlJp8W/a98NR23d8GSHTpel
VT2GJxyTILKcv6Hk5LhLhVFq5cuXmegK0fNr3b8Iin7D/pYrx+FmpJqs07WA
z7jmQEFYPryrwmeneuyga3DF+fvgQhSfMGHKOK7wXXKr3Z12CUnHyzfN2+oP
G0vrTB73KjjX2xU6SXSUs+jaipXXIDySTPHujkbHgmKHEttK5KgtruqSxyMh
oTsg+kUNPqVaGDI/HkRzTKDXq7/4aLBMoiXKM+CQ7B6uDBHAjb/ZoGzmKBw4
ak+6tYRQbbb1VzBO4o0NO4ulewcl6rMzS8vzYd+o5bewtgXsAbN1itwCzE7U
82/oi5AyLaoXZl6EsCAl0ulyG6z5Lv4agVwsMHo1cDryAUL3y3yO5JXCWenE
l4Y9wuqDYm0mpxyF6ge4RTldkDW+KDV3qIEBv9a4/1A3kjXp5lWFfNQtW+fS
GNYDe8nq+ZQUAUL+jQT3Q2dvTfQJkew9quedLsVOyoQ+PaYZPxq8fstu68PT
rfSfY8xaYbTarSaAyHFiX3aWtmkbDh2NA001AAY1dsw37AHu7iKWVOUL3Ly5
sORO+yNc16scEzEH0ZaZLc777jGGT+2JdPhGiZwvO0aPLXiCozkZWYl/vEa1
vsjusLIHF+pEn0ulQ5hKqXCOviWBxId/gzU2DM/LdsZFiVJcmCqw0tzyFnl9
Js7V6n3485BkXFU9gr07NPzWMmRo8t+i3Fo9Cr99b/zOZfbj3XbtM1Krcfis
Kg3KpcnxQX1WQBomwNE6u3lSJIekIM4jKf0DtolXdvcr5bBStK2bYfyNsN6E
DJ1KOTyEGmFOaVNYpeDes14hR/GSL/TQe9PwThfwTGj9GJlUDJ4N+AJuT3aV
ykmGmabgitt5aoRjM2S5ePoZchmSKLb5PFL78LpJWbEULb2bAqyfU4jV2/7z
S9f2Ii3w80lRlyZJ5rvxzGue4r9XaJOCHbvijO17wNC6IfZN0yE+ZbG1nre7
0Wfb6HzAYxFpaDKNveL5GF6CjorT2/TJlPuMYE9DJ8wmLbPS9A2IYMyOV6vx
ENTcwaHm9YbEGoaqyf334aXDrKLwlpHb3mLPoZF78GcdWBHENiEur82mWAWt
UEXODna9MSV7nqewpiNaEBSSWqd5eAVxj6fU0n5rQsinh53CMQvCto9afqa+
HiVSs6Jno9YkNlrSWWYlgKA6oVV2bQ2JsvWizu/lgx2zSCcndAOBl+SHms4a
eAxXh6ettyOPqHHnBgwrQWFEfNxo4Ug28rw7xEbXcDeu0l89YxuR8X66E3zx
KsoiBvx2s1yJue97lYXHJTRQLxjojXiShOFRUeb2QtRf3W78a3AAWcyxXZMV
mo+E7IBPLG4oWSX9ZXThnAtPNZfnWNRHkeZW3/xjc24EpbuWR5xnEmWmKTN1
zpUs+rdjZh1HSKqMWjQ0587n+N8FZmIu6XwfvPGrS/8ArvYxIw==
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxdk/9bC3gcwBuW1eKsxCMkq53q5Eun9GWPz6eyxB6NaS1ybXTK5bohskYk
RUWIK+U6K/GkbxbR9G3vlilMy9SaWl+U4pJ6Shm6qfv2272e5/W8/oLX0t0C
9p5pRkZGzL/9p/+H3eB6LlpOR59aFsV6u2PYHsTcN9SwEwkMPHIfnQ8Wt5vn
JrnuRwWh25J8mQehyPJIcU/PMZQ9JkC+zDjo1s3VycWnkdrPw55+Ohk2fiB2
pXMvorG74jCK4BKQzcX0NQEZSGRCCPnolAWbKPcb1jN/R8Iei1N74nPA3pZ2
LC/3Osp5sLpVaLgBhaIgUvfSfNS/Jd/+88xCeGqS7ZLjWIzqXAt9MvMlEBmp
Zu1+VYokB8hjA8N3oTZ0y4bX42WIIOBNCw4sB5fD64P7OFJEoNi+UZpWgkua
0Qu1cRW6GjV/3V4zGQzaJySKyIDCw3L8OU5y+L7GeLPZPTmyOV/QSBE9hKmx
yrKSOQqUlvaoauHgI6hKj+a5X6tHKqGzxU/HH4OJ5euuVN4TpGbHOJqsVgK9
z71My32GWqPqhfrJRsggRORmpTQhfUStWdSB52Bedm++LlaN6Icdq8mDaiif
t3xdDbcZseSZbRZ7m4HzLxpkefLE4+jXLXDYb2S2X4wWOSx+s8yZ2wo/m/e/
T6hvQ/kVzIjAai1YLvMuZeEOlEZz1swjt0FsfDhivutCzB+7Vw55tEPdDmzr
0/cKJQkTe1u8dXBrdvGoQtCLEm6t0YsXdMDA2R94LlZ9SK4ycwgr74D4lKOJ
v7zpRysv9FDJlE64Uq4w3NS+RVS/sIkWaidoNpaViEYHEEG41or0tgOufEm3
I7q9R9cm4l/EBHfAH7GaD+8kwyig/6An6aQOZP5ufR6SEcQ/5LCiP7gdhraS
zmvtPqDaAlJK3thL+EiYkuLqMfSVpZ4xwdaCJj2csT/mI9otPX7K5YwG7Lrr
l3/lf0I7pwKiQsTNwKiawXUXfkHtekaeTZEasimTQYGP/kQ7vvipaFFNMKzv
7r3EmkTPlLPI5qVK+CoLKKq4YISZzzeq1lMfwzm+ZlfCkml4xVC0ZdJLBchb
V7NondNxDcl70EknB+EWQ7KiiYiZ99Tpk9tl8N8VJNygaEw+lFUBfOMS1Sah
KR4Itya5RN6HNscaegRjFvYv4um/Ud6BDdKnRamec3DZEmIPg1UC1nrbROEc
czyT2vbZbzgffM71vq11motTLXUPJMF5sMFUcHt63jxcpP6uOZQgBn9RhA07
YQFedeaayudCJrzjTfU2DS7CZ8mLrfa4XQY250g58bgNDqHdaYm/nQqcCWVj
1SgV7zLOtLW6fBpytNZZL0do+EbN2gzhqziQSiIftuc7YLvxjG11NUJICJ1l
mhK4AhsZ6P7cigPAGJAEC52ccZtzXHWhdC9M54d8Xkl1xUTHvBmLSvlQF17s
Tzjqic3E46IHhRwoCOnavFPkhb0RJzNOuQmqfa6Yzx72xTftPTzjaAgqr2+d
fyKAhd8TCm6OS1ZB5BnWhCg3ELsp4gQXDUughbgwhVq5C3feyN6/imIK7Biv
wpBfBfigF+PbisgRWWLQ4lHrpyfxdX04t6r3icyw76rUWpWLfdf+JrfRJsv+
ApnOUck=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{0., 27.309073119326918`}, {-0.4552509732540121, 
     0.45146842406322535`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.483944002785182*^9, 3.483945756595428*^9, 
  3.484215675966221*^9, 3.484224244656814*^9, 3.48430926232192*^9, 
  3.4843131282566957`*^9, 3.4843143709805603`*^9, 3.487485499772729*^9, 
  3.4875029068286858`*^9, 3.4875030499862547`*^9, 3.487503096206262*^9, 
  3.4875031837939157`*^9, 3.4875044376718388`*^9, 3.494224261375012*^9, 
  3.494224414555359*^9, 3.494226862179187*^9, 3.494847164555499*^9, 
  3.494851390518271*^9, 3.505465973416247*^9, 3.505467531348544*^9}]
}, Open  ]],

Cell["The Cauchy transform is still accurate", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}, {3.483945762422402*^9, 3.483945768341103*^9}, {
  3.483945834067512*^9, 3.483945843273717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"hf", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "I"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"t", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}]], 
      FractionBox[
       RowBox[{"Erf", "[", "t", "]"}], 
       RowBox[{"t", "+", "\[ImaginaryI]"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4839440057568483`*^9, 3.4839440417939987`*^9}, 
   3.483945773513974*^9, {3.487503052765167*^9, 3.487503061528363*^9}}],

Cell[BoxData[
 RowBox[{"4.85722573273506`*^-16", "-", 
  RowBox[{"2.220446049250313`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483944009612321*^9, 3.4839440424574347`*^9}, 
   3.48394577400075*^9, 3.484215677874202*^9, 3.484224246990508*^9, 
   3.484309264501794*^9, 3.4843131284756002`*^9, 3.484314371179937*^9, 
   3.4874855014805527`*^9, 3.487502907035556*^9, 3.4875030625154543`*^9, 
   3.487503183996852*^9, 3.487504437893962*^9, 3.494224261567959*^9, 
   3.494224414746834*^9, 3.494226862374874*^9, 3.494847166857052*^9, 
   3.4948513907310534`*^9, 3.505465973674307*^9, 3.505467531607531*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hastings\[Dash]McLeod", "Section",
 CellChangeTimes->{{3.4835340750892677`*^9, 3.483534080262928*^9}}],

Cell["\<\
We now setup the Painlev\[EAcute] II RH problem, for the \
Hastings\[Dash]McLeod solution, cf. [Fokas et al. 2006].  \
\>", "Text",
 CellChangeTimes->{3.487504199735875*^9}],

Cell[CellGroupData[{

Cell["Setting up the jump curves", "Subsection",
 CellChangeTimes->{{3.483953701595611*^9, 3.483953710979085*^9}, {
  3.484028171889319*^9, 3.484028176356489*^9}}],

Cell[TextData[{
 "We want to solve the RH problem\n\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", "+"], "=", " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", "-"], "G"}]}], " ", ",", 
    FormBox[
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", "\[Infinity]", "]"}], " ", "=", " ", "0"}],
     TraditionalForm]}], TraditionalForm]]],
 "\n\nwhere ",
 StyleBox["G",
  FontSlant->"Italic"],
 " depends on ",
 StyleBox["x",
  FontSlant->"Italic"],
 ".  Then the solution to Painlev\[EAcute] II is\n\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "[", "x", "]"}], "=", 
    RowBox[{"2", " ", 
     RowBox[{
      UnderscriptBox["lim", 
       RowBox[{"z", "\[Rule]", "\[Infinity]"}]], 
      RowBox[{"z", " ", 
       RowBox[{
        RowBox[{"\[CapitalPhi]", "[", "z", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}]}], 
   TraditionalForm]]],
 "\n\nThe steps we need to take are\n\n\t(a) Define a list of Fun's which \
represent the jump curve ",
 StyleBox["G.\n\t ",
  FontSlant->"Italic"],
 "(b) Use RHSolver to find a function ",
 StyleBox["U",
  FontSlant->"Italic"],
 " defined on the same curve as ",
 StyleBox["G. ",
  FontSlant->"Italic"],
 "This ",
 StyleBox["U",
  FontSlant->"Italic"],
 " satisfies  \[CapitalPhi][",
 StyleBox["z",
  FontSlant->"Italic"],
 "] = IdentityMatrix[2] + Cauchy[",
 StyleBox["U,z",
  FontSlant->"Italic"],
 "].\n\t(c) Compute ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"z", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{"z", " ", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", "z", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
   TraditionalForm]]],
 ", which can be found by integrating ",
 StyleBox["U",
  FontSlant->"Italic"],
 ".\n\nTo setup ",
 StyleBox["G",
  FontSlant->"Italic"],
 ", we first choose the Stokes' multipliers"
}], "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
   3.483705035021916*^9, 3.48370505871178*^9}, {3.48386865553936*^9, 
   3.483868664306522*^9}, {3.483945868466632*^9, 3.4839458976675*^9}, {
   3.483946948265936*^9, 3.483946966226915*^9}, {3.4839859710810966`*^9, 
   3.4839859847064037`*^9}, {3.483986567458593*^9, 3.4839870685762787`*^9}, {
   3.4874886025917883`*^9, 3.487488604558551*^9}, {3.487503082781644*^9, 
   3.487503083763979*^9}, 3.487504193758354*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"I", ",", "0", ",", 
     RowBox[{"-", "I"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "4", "]"}], ",", 
     RowBox[{"s", "[", "5", "]"}], ",", 
     RowBox[{"s", "[", "6", "]"}]}], "}"}], "=", 
   RowBox[{"-", 
    RowBox[{"Array", "[", 
     RowBox[{"s", ",", "3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483534098191519*^9, 3.483534121288732*^9}, {
  3.48353417333419*^9, 3.483534197611909*^9}, {3.483534240389817*^9, 
  3.483534336682715*^9}, {3.483703230389113*^9, 3.483703230749571*^9}, {
  3.48370501565246*^9, 3.483705015970914*^9}, {3.483868794234153*^9, 
  3.483868795550787*^9}, {3.483885462418798*^9, 3.483885470030558*^9}, {
  3.483985987215592*^9, 3.483986004481682*^9}, {3.483987074007008*^9, 
  3.483987077156212*^9}}],

Cell["We define functions for the jump function", "Text",
 CellChangeTimes->{{3.483987087382971*^9, 3.483987133711948*^9}, {
  3.4840277877691708`*^9, 3.484027788668972*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", "I"}], "3"], 
     RowBox[{"z", "^", "3"}]}], "+", " ", 
    RowBox[{"2", " ", "I", " ", "x", " ", "z"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "1", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "3", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "3", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "4", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "4", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "6", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "6", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<unfl\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.484041184550807*^9, 3.484041186691311*^9}}],

Cell[TextData[{
 "We need to construct Funs (interpolations by mapped Chebyshev polynomials) \
of the jump functions defined above.  GG returns the jump curve sampled at ",
 StyleBox["n",
  FontSlant->"Italic"],
 " points along each ray."
}], "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
   3.483705035021916*^9, 3.48370505871178*^9}, {3.4839459044037027`*^9, 
   3.4839459112109003`*^9}, 3.483986006036242*^9, {3.48398713718258*^9, 
   3.4839871889103937`*^9}, 3.487503099604124*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "1", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "3", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "4", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "6", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "6"}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4835341285876102`*^9, 3.48353430694979*^9}, {
   3.4835343464077253`*^9, 3.48353442182684*^9}, {3.483534510913375*^9, 
   3.4835345145689497`*^9}, {3.483534802707912*^9, 3.483534810938017*^9}, {
   3.4835348429931517`*^9, 3.4835348430703163`*^9}, {3.483535612045465*^9, 
   3.48353561237816*^9}, 3.4835372492972403`*^9, {3.483700379133095*^9, 
   3.483700379364772*^9}, {3.483700420086055*^9, 3.483700420314332*^9}, {
   3.483700645290639*^9, 3.483700645599826*^9}, {3.483700799133174*^9, 
   3.483700827698254*^9}, {3.4837008888982677`*^9, 3.4837008897736187`*^9}, {
   3.4837037656220093`*^9, 3.4837037662987757`*^9}, {3.4837040283461523`*^9, 
   3.483704048140493*^9}, {3.48370504381546*^9, 3.4837050439876003`*^9}, {
   3.483885472380365*^9, 3.483885481002095*^9}, {3.483986007140946*^9, 
   3.483986011100771*^9}, {3.4839871922141657`*^9, 3.4839871956224623`*^9}, {
   3.4875031014254713`*^9, 3.4875031040253696`*^9}}],

Cell["We can plot the domain of our jump curve", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
  3.483705035021916*^9, 3.483705040788938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "[", 
   RowBox[{"80", ",", "0."}], "]"}], "//", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.4835343005342073`*^9, 3.4835343022501717`*^9}, {
   3.4837040504538183`*^9, 3.483704052479437*^9}, {3.483945933997724*^9, 
   3.483945934229574*^9}, 3.483986011765085*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], 1}}, {{0, 0}, {
       1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], 1}}, {{0, 
       0}, {-1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], -1}}, {{0, 
       0}, {-1.7320508075688772`, -1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], -1}}, {{0, 0}, {
       1.7320508075688772`, -1}}]]}},
  Axes->True,
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.483534302436573*^9, {3.483534349730088*^9, 3.4835343708384733`*^9}, 
   3.483534424854615*^9, 3.4835345181039867`*^9, 3.4835348125478687`*^9, 
   3.4835348444325247`*^9, 3.4835356142140913`*^9, 3.483537252771473*^9, {
   3.483700374056423*^9, 3.483700380484953*^9}, 3.483700421500204*^9, {
   3.483700802364541*^9, 3.48370083141947*^9}, 3.4837040529132013`*^9, {
   3.4838687526468143`*^9, 3.483868762739881*^9}, 3.483868802336193*^9, 
   3.483885483166663*^9, {3.483945931971674*^9, 3.483945934759091*^9}, 
   3.483987208142911*^9, 3.484037379087864*^9, 3.484041195184537*^9, 
   3.4842061588992243`*^9, 3.4842242580405416`*^9, 3.484313135492949*^9, 
   3.484314389540987*^9, 3.487485041514098*^9, 3.487503071294654*^9, 
   3.4875031905471582`*^9, 3.487503827792313*^9, 3.487503921929304*^9, 
   3.487504438042041*^9, 3.49422686270154*^9, 3.4948514064323807`*^9, 
   3.5038383335806427`*^9, 3.505465973914481*^9, 3.50546753180558*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The solution to the RH problem at ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "= 0"
}], "Subsection",
 CellChangeTimes->{{3.4840282161725388`*^9, 3.4840282461936626`*^9}}],

Cell["\<\
We can compute the solution to a RH problem with the jump curve GG using the \
command\
\>", "Text",
 CellChangeTimes->{{3.484028258994722*^9, 3.484028297087385*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"RHSolve", "[", 
    RowBox[{"GG", "[", 
     RowBox[{"n", ",", "0."}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.484028298346074*^9, 3.484028324735532*^9}, {
  3.484206184890297*^9, 3.4842061854543056`*^9}}],

Cell["\<\
The solution is the identity matrix + the Cauchy transform of U.  Here we \
demonstrate its accuracy, by comparing the + and - values with the jump curve \
at a point along the first ray:\
\>", "Text",
 CellChangeTimes->{{3.484028258994722*^9, 3.484028297087385*^9}, {
  3.4840283355255003`*^9, 3.484028371012206*^9}, {3.484028401036256*^9, 
  3.48402841708996*^9}, {3.484028507730563*^9, 3.4840285151184797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
  RowBox[{"Cauchy", "[", 
   RowBox[{"U", ",", 
    RowBox[{
     RowBox[{".5", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "^", 
       RowBox[{"(", 
        RowBox[{"-", "11"}], ")"}]}], " ", "I"}]}]}], "]"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
     RowBox[{"Cauchy", "[", 
      RowBox[{"U", ",", 
       RowBox[{
        RowBox[{".5", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", 
           RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"10.", "^", 
          RowBox[{"(", 
           RowBox[{"-", "11"}], ")"}]}], " ", "I"}]}]}], "]"}]}], ")"}], ".", 
   
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"0.", ",", 
     RowBox[{"0.5", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4840283734720488`*^9, 3.484028388205003*^9}, {
  3.4840284189323606`*^9, 3.484028534665007*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.1990876958023478`*^-8"}], "-", 
      RowBox[{"8.79799694208927`*^-9", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"3.835973205745802`*^-12", "-", 
      RowBox[{"3.031824791221993`*^-12", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.4110402846156944`*^-9"}], "+", 
      RowBox[{"2.0866760208626545`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "5.182521078950231`*^-13"}], "-", 
      RowBox[{"5.9581853339985`*^-13", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.484028502214787*^9, 3.4840285348446302`*^9}, 
   3.484037398606627*^9, 3.484037468844975*^9, {3.484206175559877*^9, 
   3.48420619291846*^9}, 3.484224267431006*^9, 3.484313146497554*^9, 
   3.484314398909398*^9, 3.487485057847604*^9, 3.487503077209947*^9, 
   3.487503196643393*^9, 3.487504444011548*^9, 3.494226868626205*^9, 
   3.494851418911973*^9, 3.505465975918665*^9, 3.50546753386417*^9}]
}, Open  ]],

Cell[TextData[{
 "What we actually want is the limit of the Cauchy transform \n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     RowBox[{
      UnderscriptBox["lim", 
       RowBox[{"z", "\[Rule]", "\[Infinity]"}]], 
      RowBox[{"z", 
       FractionBox["1", 
        RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
       RowBox[{
        SubscriptBox["\[Integral]", 
         RowBox[{"Domain", "[", "U", "]"}]], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"U", "[", "t", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
          RowBox[{"t", "-", "z"}]], 
         RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]}], "  ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], 
     RowBox[{
      SubscriptBox["\[Integral]", 
       RowBox[{"Domain", "[", "U", "]"}]], 
      RowBox[{
       RowBox[{
        RowBox[{"U", "[", "t", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
       RowBox[{"\[DifferentialD]", "t", " "}]}]}]}]}], TraditionalForm]]],
 "\n\t\nThus we obtain the following approximation"
}], "Text",
 CellChangeTimes->{{3.484028258994722*^9, 3.484028297087385*^9}, {
  3.4840283355255003`*^9, 3.484028371012206*^9}, {3.484028401036256*^9, 
  3.48402841708996*^9}, {3.484028507730563*^9, 3.4840285151184797`*^9}, {
  3.484028546318883*^9, 3.484028689946849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], 
  RowBox[{
   RowBox[{"DomainIntegrate", "[", "U", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.484028676189353*^9, 3.484028703776342*^9}, {
  3.4840288904889717`*^9, 3.4840288968933687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.36706155159606874`"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4840286809526253`*^9, 3.484028704271759*^9}, 
   3.4840288981474867`*^9, 3.484037471837036*^9, {3.48420617886052*^9, 
   3.484206199216547*^9}, 3.484224268806696*^9, 3.484313146547666*^9, 
   3.484314398952694*^9, 3.487485059167737*^9, 3.4875030772613897`*^9, 
   3.487503196719411*^9, 3.487504444062043*^9, 3.494226868674984*^9, 
   3.4948514235333643`*^9, 3.505465975969953*^9, 3.505467533916003*^9}]
}, Open  ]],

Cell["\<\
The PainleveII routine matches this value\
\>", "Text",
 CellChangeTimes->{{3.484028709936593*^9, 3.484028752759797*^9}, {
  3.5054661147718163`*^9, 3.5054661237153482`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PainleveII", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], ",", "0."}], "]"}]], "Input",
 CellChangeTimes->{{3.5054661247452097`*^9, 3.5054661326778803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.36706155154807807`"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505466136193858*^9, 3.505467536477103*^9}]
}, Open  ]],

Cell[TextData[{
 "In the next section, we will compare this value (and those for other values \
of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ")",
 StyleBox[" ",
  FontSlant->"Italic"],
 "to precomputed values available from [Pr\[ADoubleDot]hofer & Spohn 2003]"
}], "Text",
 CellChangeTimes->{{3.484028709936593*^9, 3.484028752759797*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using RHSolver to speed up computation at multiple values of ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.484028237986026*^9, 3.4840282543693047`*^9}}],

Cell[TextData[{
 "RHSolve, used in the previous section, recomputes the same matrices of \
Cauchy transform values for each value of ",
 StyleBox["x.",
  FontSlant->"Italic"],
 " RHSolver precomputes these matrices (for a given ",
 StyleBox["n",
  FontSlant->"Italic"],
 "), significantly speeding up evaluation for multiple ",
 StyleBox["x",
  FontSlant->"Italic"],
 "'s.  "
}], "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, 
   3.483946758172183*^9, 3.4839471604373817`*^9, {3.4840287597436647`*^9, 
   3.484028845910819*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "//", "Clear"}], ";", 
  RowBox[{"n", "//", "Clear"}], ";", 
  RowBox[{"x", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", "[", "n", "]"}], "=", 
    RowBox[{"RHSolver", "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "0."}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483704059473811*^9, 3.483704084796417*^9}, {
   3.4838686818317337`*^9, 3.4838686877682533`*^9}, {3.4838688055309353`*^9, 
   3.483868807893404*^9}, {3.48394593885419*^9, 3.483945939253743*^9}, {
   3.483945970689331*^9, 3.483945972508366*^9}, {3.483946530550324*^9, 
   3.483946532556075*^9}, 3.48394673502254*^9, {3.4839860129058733`*^9, 
   3.4839860335919247`*^9}, {3.484028855902452*^9, 3.484028861435276*^9}}],

Cell["\<\
U returns the jump curve, so that the top row of the solution to the RH \
problem is IdentityMatrix[2] + Cauchy[U[n,x], z]\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046593092823`*^9}, {
  3.483868705986638*^9, 3.483868710099099*^9}, {3.483946743988546*^9, 
  3.483946754242897*^9}, {3.4839860447345333`*^9, 3.483986048770546*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{"R", "[", "n", "]"}], "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "x"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483704136197484*^9, 3.483704177950693*^9}, {
  3.483868690332923*^9, 3.483868695300831*^9}, {3.4838688101315203`*^9, 
  3.4838688121352177`*^9}, {3.483945941608038*^9, 3.48394594201553*^9}, {
  3.483945974689599*^9, 3.483945976351905*^9}, {3.483986050759377*^9, 
  3.4839860532768297`*^9}}],

Cell["\<\
p is the value of the Hastings\[Dash]McLeod solution\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, 
   3.48386870454757*^9, 3.4839860554902554`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], " ", 
    RowBox[{
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{"U", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.483704184291832*^9, 3.483704191836005*^9}, {
  3.483704822797823*^9, 3.483704824140067*^9}, {3.4838686987902107`*^9, 
  3.4838687360598507`*^9}, {3.483868815020658*^9, 3.483868827944105*^9}, {
  3.483945944706315*^9, 3.483945945378501*^9}, {3.4839459789789677`*^9, 
  3.483945980903613*^9}, {3.483946778617774*^9, 3.4839467787274218`*^9}, {
  3.483986056191382*^9, 3.483986058645659*^9}, {3.484028881412284*^9, 
  3.484028906905645*^9}}],

Cell["\<\
We can now evaluate the Hastings-McLeod at points (real or complex)\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, 
   3.48386870454757*^9, 3.4839860554902554`*^9, {3.483987232026153*^9, 
   3.483987298264481*^9}, {3.4839882362942057`*^9, 3.4839882512860937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"50", ",", "0."}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"50", ",", 
     RowBox[{"1.", " ", "I"}]}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"50", ",", "1."}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4839882525207243`*^9, 3.4839882776785507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.36706155159606874`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.3115443699085162`"}], "+", 
    RowBox[{"0.3195028080154944`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.13564354348645602`"}], "-", 
    RowBox[{"3.533949646070574`*^-17", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4839885400785522`*^9, 3.484037489906739*^9, 
  3.484224284195694*^9, 3.4843131728468237`*^9, 3.484314413328671*^9, 
  3.487503084173922*^9, 3.487503204188031*^9, 3.4875044512936707`*^9, 
  3.494226875487461*^9, 3.505465978560276*^9, 3.505466144185205*^9, 
  3.505467539032385*^9}]
}, Open  ]],

Cell["\<\
We can plot the solution (this takes half a second per point, so almost a \
minute to generate the plot)\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, 
   3.48386870454757*^9, 3.4839860554902554`*^9, {3.483987232026153*^9, 
   3.483987298264481*^9}, {3.487503458333911*^9, 3.487503486627722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"TablePlot", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"50", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5."}], ",", "5.", ",", ".1"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Hastings\[Dash]McLeod solution\>\""}]}], 
    "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.483704223848497*^9, 3.4837042316373177`*^9}, {
   3.483704334952297*^9, 3.483704349013042*^9}, {3.483704383806059*^9, 
   3.48370438391581*^9}, {3.483704535636174*^9, 3.483704536308423*^9}, {
   3.4837046850789623`*^9, 3.483704732261632*^9}, {3.4837050852631273`*^9, 
   3.483705086102219*^9}, {3.483885454205223*^9, 3.4838854562111473`*^9}, {
   3.483946157952426*^9, 3.4839461735197144`*^9}, 3.483986060767049*^9, {
   3.483987238068766*^9, 3.483987239412341*^9}, {3.48398805432108*^9, 
   3.483988057518875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw11Qkw3FcYAPCNbFyLZYWqiFbEygQRd6qm/0djTEjiiCJoK1LCKIlsS6XV
bCoh1zTa9HA1NGHcmdDuKMp7EulIHSNkpYu4ohriWnvZEtva/f7fzM7Oznvf
7/u/b/d9axN/OixBi8FgJPz/2nzXxHZSfNvduYqrxEWFm2FKGsyCXiUtrGI3
dZiSA+zLFQUNq7i3ZzM4xPVvx4Ic3ipOVAeHvH0mPC7dbRVrPA4RZCnkpWIF
eCYkhF2o43dXAZ4JcV2qm/syWQGeMTGvU+XxbBXgGZOL42WlbqNy8IxJ6iWe
Q/dNOeSzyf38xnoqUA77jUi70b2Ib1QyqGdIYuYFytZfZFjN9xgQFV7vb0qU
gWdAkvHrZucsZOCxiDIyJU3WJQVPn6zZDwVYfiYFT4+k+e7Tf2onBU+X6LdE
BFgMSMDTJSWBDSNdX0jA0yFcTwODATsJeNpkVDhTsaN3Bau5wm3EMKLa/vrZ
FfCYZFeXv1zXfAU8Jpm8WlKR0SQGbysZ6x+Jao4Qg6dF/MKElECyDN4WYpU8
5BH89TJ4DPIq8cmlVO4yeAwSZ/NOvThzCfI38OH4WH7LT4uwfx0/M5wxea19
Abuq663hd/dUGMn+mscFal+Jzyy5oNDFl+Ct4rSDT+q9N+bAk+Po4YAHQt05
8KTY6qRP5IdGs+BJsGTB5yNn9gvwxHg65D3fVtY/4C3jyNwP7H5kzuAudf48
nr4T1pHx7zTsn8WKIqdOx8XnOEldbwZHaXO41RNTeL/af44ZVVl75AOT4E1g
U8ejhu5/TOB8db4Ii7N/9bbPHIf9g3i5TxVdmvQM89Xrj3BeJdUXdHIEPjfj
cMP00FvJIrp/DKeoxdal7KeYaNYpa2rsRPptIS7T5FPdh3dNviEaxEjjUy1h
A/Im2wFYF1FWwcHC+px++vmoUh3R1aPSXnxA8/xUcSYrWszups9HWQ829x2K
6YL8Waqce+MUHnqI+zX9ofR0BGT3Vw/o/lGXDQpyOmM7cImmv1TA956qyT/b
sbum/1TZQuPKXo9WyJdSOzOKC/OlTVBPTtWEPnZpYQro75fKqeksmI9rBE9J
8b7zetOBeQ+8NarJKx7XDNSCt07F2scZ55hXgbdBtbWxFRWPyun+oSP+hR6W
Uz/jPs3vE7WNcYqv1N2C+7UFHQ/xq2V4F0G+FpLdd16PifkB6m1FgW8FvrzA
uEnfDyQI6Bm+YpkPHhOdsiyZv+B1DbxtSC/P5kjIUi542khvudVa5J8Dng4a
kVtUNnH59P1Fvz08PxmuOkffb1QZJuRN8TPg/Hoo+fesqBDBWfD0EWt471Su
9mnwWKg2oaOTUZ1MzxcUlW3HQg4J9PxBKzzm6PWUE+AZorg0W9WnhbHgGSH/
rLodwSmR4LHRtdn3FedtjtHzD4mVn78I2hdMz0dU59RiWX/8EJzfGH2i8LB7
fOMg5Jug7MZvq8ruIHr+Iv6Cr6PXmDc9n9H+nX2xd8s9oD4HGfCDQjwTXMDj
oFq+Mi11xgE8U6Rtxt/tdIxL/z8gZozPx7aDNuBtR0ljDPvxRCv8Hx55Bz0=

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Hastings\[Dash]McLeod solution\"", TraditionalForm],
  PlotRange->{{-5., 5.}, {-1.571937736889743, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483704243425623*^9, 3.483704346499186*^9, {3.483704382667766*^9, 
   3.483704389280013*^9}, 3.4837045647317038`*^9, 3.4837047048521957`*^9, 
   3.483704735205851*^9, {3.483946155085792*^9, 3.483946169055881*^9}, 
   3.483946234996176*^9, 3.484314468285205*^9, 3.4875030861332684`*^9, 
   3.48750326252765*^9, 3.487504505187256*^9, 3.494226928323372*^9, 
   3.505466004099991*^9, 3.505466170343985*^9, 3.50546756396355*^9}]
}, Open  ]],

Cell["\<\
We can compare with the [Pr\[ADoubleDot]hofer & Spohn 2003] computed values:\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, {
   3.483704714076076*^9, 3.4837047698326883`*^9}, {3.483947958742804*^9, 
   3.483947975103579*^9}, 3.483987306874814*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
      "\"\<RiemannHilbert/Data/McLeodSolution.txt\>\"", ",", "Number"}], 
      "]"}], ",", "7"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3."}], "<=", 
       RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", "3."}], "&"}]}], 
    "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLineLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"25", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
                "//", "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"50", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], "-", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "//", "Abs"}]}], "}"}], "&"}], "/@", "data2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"75", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
                "//", "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"100", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
                "//", "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Error in approximating the Hastings\[Dash]McLeod \
solution\>\""}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.483704899100596*^9, 3.4837049814796667`*^9}, {
  3.4839475891111526`*^9, 3.483947615508149*^9}, {3.483986064769115*^9, 
  3.4839860833364*^9}, {3.4839873369993887`*^9, 3.483987370083581*^9}, {
  3.4840347101732273`*^9, 3.484034715859729*^9}, {3.484224361262281*^9, 
  3.484224390749359*^9}, {3.484225316209055*^9, 3.484225322359745*^9}, {
  3.484313192693275*^9, 3.4843131937709627`*^9}, {3.4875033995110598`*^9, 
  3.4875034214647293`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw90A1Q02UcwPH/xgZISWChhCgKCALyIshLIDx/M1RGIFcaKBQ4gtRIjrLB
WelyHO7w4gCFMEUEQYOkgziQN3ke3TCws3YIWm6DEaLckoFjvOPWi8+v3f1v
97nv/Z/n//utF2a+k8ZlGObAP8+//y9+lsQ9Qy7Lsl1F/qPYgqiuTDKd+fYv
zFiQ4cGiqveCHWg3J0cqd7TeCXak3ZzkuEYVH1KvpZ1P2p2C5IKu9bTzSej9
2onSKWfaeWTliSEP/Ms62nkkNj7hr2/sqMVmJC2mbqQi14l2M9IZv1Ov3Uot
5pLsXV73TnlD55L86xntyu3QOaR3yM/12OfQOaS5qE093QGdIWj8gka6DO5n
SHvYzCVdGNiEB9ZizpqjYCNeJ2XLBY3g5/gL95g9g3rwEpb2BVUdCIF5F3H/
S0cqsr8GL+BfT5dO3L8Lnsf1NnNFkWvoPpg5LF8xNFmSCZ7FaQG4u1oOnsEL
ApE03tGFehqHqu39z4vABuzWVuCaeg88hS8XDlt97+9KrceSK0OS9LPgZ/jS
hwnC8jnwJH7QZfNWdPIGah3W1AcFfNwDfoqlB0NmJwLcqLX4pyfG+huV4DFc
1TC+s9LWnfoxvj4/Wh0pAT/CV2te/cptBvwndvS123zy0EZqDU7aNxgfowKr
sFVW4knvGA/q37FWcLVO0g7ux5l6XlChsye1Alt7PhxtkYB7cFeyrFatAhPM
tuqrFd5e1A14IEFw+HQ2mGEcNv2hjev8v6OLEWdeP2cCE/RBK1e1FLkJzkdb
yrrbhSVgBRpprogYmAb3o+V5fYFLn3nD9yPl6jMPuzf6wHxo7+1dEaL9vjA/
8srzMW+6uBn2gxZTjCs0BuiPENKE16SkwPuPUapEJns3F84fQ63f2t7UTsL9
WjRSU+cizQM/RewwZ9WDYLAOKT9xTLEzwnyTKPy38C9PDICfIUVLSaKuA6xH
T0IyPLY2gKfQzDZugakRbED8lttWopvgaeRhXZ5ePASeQXs/EhoCreH+WfRK
r01BUxx4DjW+rH7bcA08jwyi0b4YH5hvAb2xZ7fAUwdeREFHA0zRYbCfJTTm
JD/umexP/RylTym3NeZCN6LFKFnieXvYnwndqg01mOLgPIZNSI5VX7tL7xcz
bFSzVW9XFnwPhy1aeexwhx90Dpvqd67pTR50LpsTuP9HxRidV8xlk5Zif8hR
wfxm7K3yzt37BqGbsZ/eaStL00HnsQuXb/QIl8P5PJY5mO7iEA7n89kNhdtd
lGLofFYebelcOwjdnB23sb6wRUjnEZuzbvmlZa+5wbwWbFLXsu+0x+k+xBas
5Gc1clQE0G7Jur+/uqO/2Jf8DaT/9oY=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw90Q9MU0ccwPFH/9HJKNYEN5eUKdMCAiJM1qLoHQOnlDEbBTHqUHCArEai
DHBlmNJgAPEv3YwSGLAxohORgeg2tt25dQQCQ5BqgWnWVYaIrEKLAvJvf7if
L3l5+eSbu8v93rLEtK1JPI7jEv59//vOP2Ja87DLz35VTv+nzpnKxAaBQuA1
b86Z/t5dLP7wfWadiF65dcIS3QRdRBcc8a5tknmzLqTmr/SCijxmTkgXnq7d
NvkEuoAO0skT5j0+rAtoRluzY7eJWcenxlTDWhq9knU+7dYnIHU7s45HH/x0
XKhV+7LOo4078wW3+5h1TjR4u+Z7zwN+rDtRlWuPa57Qn3WO3g//dov+IjPH
0QiPjx4lxq1iniNL76ZEVLsHMM8SRXKYZvEj8Axxis3eKz+4mnmaDJVKj7vw
A5mnSGzOlGKHCfycfDqqSpzrfZN5kiRtGNSHXQxiniBl7XXZVil4nFwvLduf
0Qfrn5HaQyZ1bzP4KflLKblc8sJjJLRkJqX1NthBJta7xZsfgu0k2Tha1sSH
/UfJhn4zUa4Aj5ADS/rPFUSBbeSWZOdsYCZ4mPzJTz9lrwIPkfIV2v56M3iQ
mAczDudK4H4DRN3qO3c2EtxPXKx1jrBCsJV4FnmmenaALWQ8JjLTZcka5nuk
PE67DWvAPaSsYOmxxmawiUh7hpTVq4KZO4kFJZzkLoFbSO3L9aGNb7/FTIm2
6p0MvzcUzHUkRPNZSqpkLTPHXU8aMJ75+UVHjxfs0CtVYIp2fTlwQeIFbkGu
/KK2LB9wJ7qzqDs+KAJsQtfGq4psh8E9KMouif6lEXwPqUO9XIKlSrg/urwv
W9lVDLYiS9eWL/w1ITA/FHDnvDD8yTqYL/p6ce533DHog0gv39z3sQg8hK7q
jhY86ID9hpGHzw9BBTfANmR95VpDdQN4BJ1enp+Z+CN4FMlvVi3XdoHtaPXk
sHfv32AHupuejqcXwnlj6BPjDbfyEPBTZFM+rixOBj9DMRvRSMU58DhKWUQ6
ClvAE8hiet3w6hR4EoV6y97b7Q//5zmKalJNT8WDp1CI+7LOyjPgaTTSMrYr
ywieQdiUQ1pnwbPI9ZsrQTWbYH5z6CynNlTUgTkcF+PXN5weOm8dh7UlnRbp
zHrWnfC+LN4h5ArdCZ9XpEXma2A9D3f/EZu09yVmHQ/XS9xe8/gVzufjQl95
5VEDs46P0ecJR3LToAtwoPJ+Tcl26ALccGqNe84m6EIclxlwszQMuhCLD9pl
zhuhi/B+b3dR0lboIqyy4bZgDXRnLG/rydtTDN0Zh1c6ZJd+gy7G737QLo5f
uY7+A1Db6qE=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJw90HtMU1ccwPFLW1oWzIQt5ZFRBZzgzFYQJkwLPcdBAdFsBNQ/hkxahyIj
0zFkLBXXCtskc7zGUKejChKWzUHB1M1XzxlsCkmRysPCxqPBguB4Iy8LuNf5
eZObm0++53WPj+pwfAqP4zjlP++/3/8fJxrU8HLGauEm+h81InpdO+RWGc7M
iWixe6/UNxu6kCLVL++dNkAX0hu66FHJHHRHukuV2fxgSxDrjnRQeChQqmXW
COgloVNLsgm6gP56pnr8Oa9g1vnUucaWPn+EmePTpJp3f0s0QefRgSv6JnHg
66zzqC02nx+jY9Y4UEWTLNe0djPrDlSm++CAzsis4Wiv8/k2t0shrHP0zkf9
BaPWLcxPSbCbXaoODWVeIeauNwf23ILxyyTG5K9rLwEvkaBjh4yTJ8F2MvJS
xHf7i8FPyNufH34wWAVeJGMNIykbGsELxC8y552Qh+B5EjDUH2B2gf3niOmF
tBkvBJ4lpRv8lSc+BD8m+ao6S2E1eIbQC7GLf1nB0+Rq1DpjvOQN5imCVOmR
X+4FT5KvysesB8vB42R9qDHl9gB4lBgSrgeffAXu5xFxDbS0/ZABHiYeXsN7
NxvBQ+RocevRxFVbmW3EY9+62qwk8AAxPTTYYurBVpLQaJiacJYx95COKtc7
RengLnJxVnn3mgXcQTIylxtDd4Uxm4mfvzTRbxrcRBrEA+rs4XBmSuSFgr57
nYhZT2jWSnfzEnSOa/OM7vy5AKxHMR43jluSn81H+PvUrKo4cBMK/6mCq4oH
m1G+NinNVQXuQPraj+tHjoG7UHP4xmlyEdyDEhBtHzODrUid5KkUr5LD/SB9
4xfbluLBNtTaMmc5chk8hGpfFDW4+MD/DKMIkUkR0wx+hCoPvpqYXICZR1GE
d1jP7s/A48jTPav+lhg8idTBEu/qbpg/hfxDrpRl3wRPo9yiuFSrATyD+NsX
fhQ0gh+j3nOnjiv6wbMoN1qVV8GH9efQlNtZv7e8wfNoAuWdj4oCLyC7SJIq
UoMXkfJA7/LtVvATdNpoDOor28ZsR3F9svZ7AeAl9En2XV9fM4xfRtcKREtR
1eAVpDUoygcLwU/Rt+fel63PA3O4pk5+v0XLrOHw86XqNRPP7ssB/7lv/1Vp
CXQHLN8TFtFWAZ2HxxWF0mAjdB6u8ZnN4Qah83FLnev9r9ey82r4OH73a39s
+gbOL8A7TC5bd1igC3BO0YnSSAzdEa+O7Z7ZaIf1HXFf+M6dZzthfSFeU2L8
dP4mdCH2aK2V/H4ZugjzMo1p7ZXQRRjby+QJOuhO2OQu7ne8gOnfFFX2xA==

     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxd0GtIk1EYwPF3Ny+ZlsuoMGqpeSm6iJha6tEpxCR12MU+qOFKKi0HhpSG
aSswzSgvTLQiV6AI0lxlUVTPUTEkUxz5wVBrTDMbYlOn6VyZ1XkE98Lh5cef
55zD2aZQJmXwOY6TLq2///+fE61t5HWWVITSfyxypCqXPfLPUmbOkUqCzu86
64/dgSaFFm9S+GF3oFnnGoNpMHYRLTu2IbEhAbuI2vqN2itK7EL6o3XmQpMa
u5BGG0wOAe3YBXRjyYPTCRbsAhpbHlevDQhjnU+FTe7aBQUzx6eFJwVZq+qw
8+it9Xunvhiw86he6VqYt30/6xwNy7s6zMtm5jjqLhaYul6hF+EQsWy2uRxg
/g2yN/d0HQr0L/jWkFoeB2gblEm99Qd9wpkX4Kho4HBKBdoKF4eH/OfcIpjn
4VK40Awa9BwYe6ITuhSRzD9Bv07n0tlAmGdhaDrT8tYjinkGPG5WajIisVug
0ZCblmzF+WlQn4nYt+M7egpC3CLqXM3oSVgb3lYTKsR5Myw+TJ8+4YOegMCq
yFx1PHocfNtHnz3NR5tgIbC0ckCLHoO78m6ZagQ9CmPD3uleYrzvCCTlx6bO
B6GNoL0++e7DcbQBguN7fOdV6EH42GTNb6tH9wPf9mSL2Ijug6jXLz+pVkcz
90JMQVCyzxF0Jxiq7+Q8zkZTSHaV3Kj2kzI3gzXE73JiGnrpRhLvYqcXy510
iDKcpRo0Jc/bdp9qub+8PxEn7lSqRdh7SU6pxFOlx95HVu7fT7pr8h61pKAH
7eYNZOX5RvK1uaDaJkCP2PVR8t55a2Xrmhh8f2JOzXS+LUOb7Po4IbOeVfIi
nJ+w62ai08iI1zXsk8v+A3LrUxs=
     "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQGf7Xd+Xa7b1+t0AML/Yr/mXYLo758w/lf7U5zy
kw/yO0P53+xndrl6374Nk/+Opv6HfS6f361zWjD1P+0/xGZx9nvC+L/sN36S
ml+VAeP/RjP/j32hvazILUEY/699jpuhRvE0mPn/7JUmzd7veBHG/2/fWOwY
PsUEpp7BIWW2nWuiA5TfwOCAKs/ogOK+BkYHVPuYHKZcj1HcEgSTZ3KIz6yQ
zn8Cs4/ZQcnwxvwsmPoGZjTzWRz088NnG36Gqm9gceA8Jpw2SQQmz+oQJrQ/
asItmDyrQ8CXdP51DDB5NofGI0Lb30i6QOXZHGwuPolcqAKTZ3cIcLXMZ3sG
s5/dobs2vIevGSbP4bAzZLb7S6B9AISoiKw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-3., -40.20253647247683},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-39.14394658089878, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-34.42544770960368, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.73677480943866, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.332805587922074`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.04587229873253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.823178286648194`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.64115653498315, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.48722005672038, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.35384934538487, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.517692430621544`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.82901953045652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.42505030893994, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.1381170197504, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.915423007666057`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.733401256001017`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.57946477773825, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.446094066402736`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-39.14394658089878, 
       FormBox["\"\"", TraditionalForm]}, {-32.23619130191664, 
       FormBox["\"\"", TraditionalForm]}, {-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-34.42544770960368, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.73677480943866, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.332805587922074`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.04587229873253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.823178286648194`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.64115653498315, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.48722005672038, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.35384934538487, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.517692430621544`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.82901953045652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.42505030893994, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.1381170197504, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.915423007666057`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.733401256001017`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.57946477773825, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.446094066402736`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Error in approximating the Hastings\[Dash]McLeod solution\"", 
    TraditionalForm],
  PlotRange->{{-3., 3.}, {-40.20253647247683, -5.767035540450741}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, {{-39.14394658089878, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-34.42544770960368, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.73677480943866, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.332805587922074`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.04587229873253, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.823178286648194`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.64115653498315, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.48722005672038, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.35384934538487, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.517692430621544`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.82901953045652, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.42505030893994, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.1381170197504, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.915423007666057`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.733401256001017`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.57946477773825, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.446094066402736`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.609937151639407`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.921264251474383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.5172950299578, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.230361740768263`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.00766772868392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.82564597701888, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.671709498756112`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.5383387874206, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.70218187265727, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.013508972492247`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.609539750975665`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.322606461786126`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.099912449701783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.917890698036741`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.763954219773973`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.63058350843846, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.483704942615612*^9, 3.483704951120318*^9}, 
   3.48370509110963*^9, 3.48398748935837*^9, 3.484037871463777*^9, 
   3.4842242937283688`*^9, {3.484224358766386*^9, 3.484224383377935*^9}, 
   3.4842246960324583`*^9, 3.484314846342731*^9, 3.487503358666337*^9, 
   3.4875033953955812`*^9, 3.487503447296482*^9, 3.4875035769371233`*^9, 
   3.4875036828406897`*^9, 3.487504852835619*^9, 3.494227255096567*^9, 
   3.505466108168879*^9, 3.5054662227780027`*^9, 3.505466354970501*^9, 
   3.505467732769123*^9}]
}, Open  ]],

Cell["We can even do a complex plot: (which takes some time)", "Text",
 CellChangeTimes->{{3.484028931838593*^9, 3.4840289357402782`*^9}, {
  3.484034225672072*^9, 3.484034245112227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TablePlot3D", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"p", "[", 
       RowBox[{"50", ",", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3."}], ",", "3.", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3.5"}], ",", "3.5", ",", "0.25"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Hastings\[Dash]McLeod solution in the complex plane\>\""}]}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.484029070089178*^9, 3.484029150781715*^9}, {
  3.484029194790024*^9, 3.484029198715837*^9}, {3.484029312394601*^9, 
  3.4840293160548162`*^9}, {3.484032592800659*^9, 3.4840326027261868`*^9}, {
  3.484034236403985*^9, 3.484034242089651*^9}, {3.484034671189992*^9, 
  3.4840346885909033`*^9}, {3.487503500673008*^9, 3.487503520541003*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
gXUl+vzMnEuXjtoujPOf9/Pt9mW6HD8E4ovp6bZXu2c7czrY8OMXbC5nbd9s
L4hjJM3vi3vpL/35vcM6Gz4Orp0x/GwEPP9CR1y/Djg08p8AwNUk62qzYcNC
4XkcapRbmq8rmVc/9oHWv+pmYb2Wvpx6PWxuJelROC9qxJzX8rpfOn++Xh0J
aH7Fq2KlDVAffKS0Ply9lvyb1E344R24FuqM2TrLcZvSfeTOL7D0sXdx3U0u
V/eBetUo/lFm7ed3NgjH/6ePVabMrHt4J4gjpjr/vUFPR2yBdaEr+1bbRYyC
cYzkuNsPm2bF8DwIHRHdfxTyMn81qNeIPh5sOX3PIRhHTbQ9hm0Zew+eT6FG
2aX5uhI9870DJ61ZEQznRR6l5y3JE50Q5Mn7E8eTzP5dK+yDOuC3Ah143bBD
ad1438rxArd2kd8fH4J9wb3+9EX8P4D/Po62kXerMLmzNf6fy//FKYQbz/xe
psz3NSo+zl94yXPU/yf+RQTjSP4HXCozb1GYMtAYkVJm3k0Vb/cd/OljmXkj
32aP/ZCYWibON8cFbfttfVRmvDIvtnHVcQll8hw8Y9uYng43yuS5aonthAkN
LpcZ7+K0/MCzx9zr5P/7/P+W59/y+Vu9f8vnb/n/dxx3X7ec7nozJuFTBLy/
3Ujk5RbbNNsHfndg8fNdv0JFnbbw9whyPDds4sT3U7jPmcW8DurQzJxyiw1C
bokff/vDwbqTwH2tlvhHXi54tOK7Xsgt8Te9XSAZNpiLk8fHv2ifPfm3DHBL
/LqRu7OGhnLf3+Xw8d279jIrlumE3BL/4CrJ5d7VufzVfBzDkxZ7bzYB38tb
4rS477RWf4W7rvqO79fhN43371nxW8gtcWJXyaou9uK+J+W+f7G8n+zsOcY+
PkHILfko/KMPHuvMXXfI4eMbNsUULDz8Rcgt8c/rK08urMZdv+Lvj0Ph32bX
WOMaLeSW+APPVene5xN33f83Hz8jqO6s2XOfCLkl/uN4h9qvenC/5yrm4/fX
XZv1nX8fXszHX1rtUf7SEzHg9U5Oy2vbrBhX7Rx43TeSRVPOhAWc4d5fce9P
jCjuZV6TL0e2g/dpcux+ZN27pdtPCftVZr/i7qMoWRd/2wf+/G/KxUmrOKPv
s03gud+W16kRIbGJsVbweeNGYj9kvT5qJny+upr4HNcNuDIcPu9djRbZ72k4
aRjkRnQLfa8XNDUPzov3ih++ChCDeS111Zo+9Nu3AC7PIl4Hj8eRP+7x99Fx
XEwHZbzu2vYjfJ6wkZx+UGtnugt8vrGaPJ8XkrY3GT63WY2SnjzrrkyE3Iie
P3J9fbVeDpwXb+8/6+D6uDyYJ3a+cF56gn8+cC6fv7x/+uZqLyAX08U1PCpc
TYLPvbTkf6VZxPXq8PmiatL5nxffq2fA56aqUW/nsefWf4XciK50iOx8plgH
58U23b2mdD5UJk/sgRVbXIdzfUnk8zw/oWPiypH5Qm7J0/lD13uLfb4CribO
nq7xN+3g8wbVaE6DZbjIHnIjKoq0G93W9yucF3et9FLStR2Yt8zreyK/3mtu
qbhk1z3w3Kf/3M9WlFk1Igk+t8pIPlU80kD8Ez53S00GDdnWx5u/rshzZEqy
Ht3hAuSW15FT1/ut75QI58W3qvj+02e1FnA53vzqw93QAu76YC6f/5OQx90W
VUgFXEylO2aMXBICnw9jJJL+7yXr/WIAV5MBCQ/2p7rB5/CoUfTJoyeTBkBu
REOCzywveBAD58UDnhZvn6l/A/PEK3dWNPWexeVZxOfv9fX3jIedYgEXU5dP
+2favIXPYTCSGt9DVg8Nhc+RUJN/Di8YM3g3fN6F5X1sxO2XN8IgN6KCd80U
s/PPw3mxjzbO6lXbmzBPLKIZP2u/4/Lk92Ea+2nvrrANZwAX0y2Zl1d2PAl/
72wkRW69Vvilwt9rq0l7Eu+/chz8XbkahfqdPzx7PuRGNKmSmiytvAvOiwv0
i7xk5Q/BPPGqU7WiXOtz15H4dcG/XvxfgueFnw==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
csGs1D6ZWZH+ovD7lzf7Z4Xn8lvh36izTHCfYIXg2cCk8fF8WDrvi9L0bNGv
lx5Dd/ZI9NzSPpRbS/s42om+uHRfvLN5X7NurPmb8DLlVGZxaZ/shcr/tbDP
ZTfe1bFf+C3wZVyd2zdCPvYw4nxOD0z6kFiXeytepwtV7mD2Tfgxpd+A3yv2
gb6KnozNuWo7ND6du5X3lOBpwZDcPouhwmfntoeeJdxU5Wbq901Lp7cP++es
im259E1fq6O/e/TbaJVZUNoPdXysDz5IbN3YM2mTPrcXbqIy81TmndLtLIi2
7lb5EcqfkXuMjBVf9RtKPxS20LdF3yz6LeE3c9tIoSlzU2p/yuDcPqzThVuU
5iXs28ME57HWVftQ8J0OFD45tw17YPgg+uATqtoejl2YNLZ6fHu9S/P8InTU
0v4PbMXHBI3NunPpdXkz9mJFrBlrx3hmC9ctHY+ArRv/GfSiSA/Lbde9IPeY
8R2Ni3rY6ucIZindW/k3l7blz4nf8FP3Vr0eVfum8XWSZo9OVfm7sNsLPyB4
XnB/YNKvCl4TPCr4hHaFvxR+VPWniZ4vfD58ytgor9+eEP5I+LXS+U+Vjoc5
ueKYiiWl69xfmp4YZRbiyxH9WG4/2AXR7gKlp0d+Q81hJnKwat64LXWa8T0S
4/1Gbb0i/G1p+pHgq+9Kv4V4s/ws2X1kxX5Y9GH0iZUxRmx0AwOgu7Ifqe2e
nwg/zZlJ7WtGPsJj8B8685jg+Xm5+f9h4UWlfdr3CT+o9EjWljMuPJ4zKLg+
tf97QuqyEyJ9XmB+p+4U4bnRJnWXCs/nTKb2h0Jjk3tC+H6Vu1z0nNxvB+bx
qvDi3PJnUZyP4SHrbyp9FyDTmOPj+v2EqvueGGOZndtfT5uMm36Zx0NKT435
co5Xpd6D19Tn64L5grlKv5T63J5d8fqfhdxJvZ5PpT6/jImzuzrOODR+/Bmi
Xw5Z8Y7y+lXt818Wcnyo2joT2SJYU9h3hP2T2AD6+LR0H/RFW/DU0tTxAa/l
Ht/rufmcM7BaeE5qmf9cAPw/J+pOi/oPxlnhDL2r+pNSjw8a3nsv5nJjtI+8
x2cxHD1R4+sl/E5hmvH/ULitF6PtucFnDwlfwv1XsR2W+WKzHVLx/TYk0j+k
jgtdK/xBajvT+8Kfl57jm6X3h31CVi5CXxf+tbSNlztrRMV2e/R+3j79Io/+
v009/s9Tv0cvqzhGivYZ85rS+f3jt09T27i/Tr0vjP/3wm1eEnPhjuYe/7bw
/vWM+b0c/ALfIE9e1fr11b6/knttSL+Y+7y8kDv+BDlLfMgWueNd6+aOd7pZ
dI24X5DBdwh2Lx23QkwLMTkfwT+58/G9d6v6DYLNG/2eNqeL3lK4ZmncRWW2
Fr5G+c3QiXLz/e7oX4KJoncS3rRqfFDVsTHE+BDXsnuU517ejLlVHMtEm9wR
2+SOaXpCME3QLndcz27CbfKIfYLXhCcJ5gk2y12Wud8kfKPgIcEW2GWEW+f2
V/FWx28Ojd2UGMjzhc+reNzzok3WDp8Xtswlmd9BC4T3qNpHhk0T2+wTmW0D
lHmisC9or6r9FNg48Vngv8Dmib/nzXjrIZeIR3u54vnwBsT+tzrKYNMjnpN5
jRG9ae73GvZAfA2bxBqRjw3wX5ktXNU6Xi96ndLr/wB8LXqD0jKpcemYsSWi
ty0dU/Sh6A7Cmwiaq72uqjdZeXfGfbwD/FZxPF7D3DoJetHjFeuu2HfIv0q4
ovwdc4+hlfC2gmtjT+vl1mXqC2/AvVBxnCHtc3dvWbo8uh3j2ETjaCp8oPBW
wldXnB6SOi6FeJyWSt8ffW0f7dBeyxgz9Ha59YYWuefFnNA1KD8+8jeI37BT
bVz6vKDbrJ/7rNfOHRP1XsWxccQBEA9ALAo0sQfE/xB/x3lZWnGcHvxEzGHP
3PEOnDVitYhFm1txXAG6D/EJt1d8VjmnxDMQq9I1+HpptPtw8DV8wzjZo/VL
88Poit8kG+bekzq59/Q60Xnp83tFxfHwDbgTYy9q5u5zvdz9TIuztyT2l33m
XD8Y5widh7vgxdI8j98PPyD7dQ9nsfQZJ+7oIOSPYLLKPx/6L/yG3MH+dlnq
WKb2UZ56uym9rGI9GV1obOhdtIMecVzV9++o0A0oT3sdS+tLxEw9LPoe1lT0
rNifJTGX50rbzh4XXp773fNM7pjD/+INibfg7MBb78f6s/fP5n4r8SaaHeNn
Hug/d6W2ITI/5on+zrxeDdnVuGqZ3adqGxc2rzW550psC2tHzCaykbOKfosO
gt7YrLRe0U54m3iHbBb5C+JcU583C+1RhjaJOflPr+L9+Vfu2IefcsetsR7E
Ay+NecK/2K6xH/8jfGjuOEzk7QfxO+WwjW+d2N5IjASxET/kbh/fX1lYVrOm
bXPLefDBVeu100O3WZ7Zzk0sxIrcuhx78W7sF/vWIGQOMqZG7jt0HeE091ud
t2QWNHl/KF0Kd656PVnLWwWNQkbRzi2x1uRTHlyrdKziF6n15H8y3wMYZYgN
5r4hnhZZxPo3izN7W8V7cHvgx6Iv9qJx7jgNfPR8B4Qcvi362qhqnehn5f+V
2R/+p3AT1RkXdYn/4M3LOxoa/z++e2JF8ON/xj1Ter32Em5d+pwi83l7fhzn
Al8J/ifusCWsQ2p9l5hLztEpqd8jM0JPhvc5A8QesV+8UxaWjkH75v/JL/pC
nsFbR4fuDr+zVq8EQCMHP838dmfMxBV8jU2/an89vizS+N/XCu9btQx6L84e
82IsxLgSS4DORDnO43Wh/y8vHeuJ3tgvsU+zL7a60u8I5E+vzN8KHBnrgD79
RMyPeFNiTflWhTh+vuPAhkScJDFMF5aOOSLOijVnfNyhxHjzTRDfL6BLoEeg
c1CeupeWjv8ekfi7oVEVv7u4/8gnPpzY7ytjDIyF71CIYeebB75P4dsuvh2h
f2xQxEDh18S/yTcmxAYcgH+mar8n3y51y/w9Dv52vushxp874tSK/dF8o8X3
RPfm9oMgxyq59fUk6ElxplqVfmPvXPqdil3u/BgD/la+kxoZ8+IdSZw2cpRY
vu6ZfemMh3cXthFsdvj9+caLca8NHf6n1PYk4seIE5xdek+ml/4W5t9vrDKP
B9mMzoDdhhjTc4Rr5b4Tua/xM3VK7F/GV9QkbI8NMsc+4HtKC/t4iWdoEmUa
Rz7fgmxTtQEXHYY7FFsTMXXD455lzugO+LY6J441wl5EDPBVpf3K+Kz5Xm/3
zN927JE5H78zMWn4tVtF/pm5Y+2wR+Hzwg6Nbws9hTckd/k+hb9JalU1zTcZ
fE8BjxJvB8+enzueDlvPj8h+1VuTmofgpX+/K8wdo4uN5axomz7WBo/+Xfh7
EPYTHxw+QeLJ8P3Vi33CfkfsBH62fTKvOT4+4uWK3LbHHF2msO0SOyr+xH0T
+7dYW/rmDYhu8p+dD1/3fqljUrHZYv/EBjmydEz4eOHRpeNWzwoau+uY0rYv
4pjPEN63tByDb7FDErtNzDl8NTZk2t6p4x07pK5H7DPx3TNKv/mxY2ArJqZ8
TG4bAPnEqROf2iZ1vOqc0nyNvXpOnBNi44l9Rk8YEPjyoOeV9t3NFL6jtM1z
QtBDIp84+R4x3ytyx2Zj06NvYr8ZC7ayg4Inp0R/xMnvKbxX6jjjtjFGxkos
94jQkVhP7N9HVj2eq0MvGpk7vhY7OXH82Nv3CUya+H5sqqxxz6pt791jjxqH
fKJ/7peRccdAD4z0qSGLeNvwXkOnRbfFJjMozvvmud9x3Im8awdF+b1y60J7
5m5nTPy2PHQf7jzu1r85/1XfrfRBOg2Zxjc+xDoTFw0P9a74jPAO5DsUvvFA
dyVWetfYZ75B6BLnmlh3eIR4eHgW3kWfJo6edwnvkzNLrxX8eVnpNRuK7lx6
HYjDbxJ81zT2pm70V69qe3avqvmQb0j4JoJ8YtIviDbh3VHRJnz1qPDFqtct
tR+EMTBHbLacBeKesc2elvt88R3EiBgHsejnlOaVi4NGBp9cugy8dHnpN9Hk
kHvEj3HuW1S9b9hXsQni32Fst+X+vojvjIhjJ6YRXxe+Xfase9xH2DXnp46H
5ruqS9BvVPbW3DZe2uFbLXxf/AafckbGpdbnl+n3E1X+6dx+ENJ8a7NQ9PvC
j6W+43gPYAvF/vkTukDptbomylKGsitCz0e/GBJ8QOw6c8F3zXdSYzJ/ozc6
M99w98NHxNG1DB24W8yPeWITIoaU2Mf/ZeY34hv5BvCyxN/xEefIPU09vs+a
Fe3j434+/H1Paky3pvYRjAt+uypkFt+jcLaJicLPi28anzh+PuL5+QYG3w16
0uCoR31seLek/k6mW4yBcROjzpqtKL22rPtTub+d2SJ4g3cNNkLsh3yjQew/
MeHEjRNrzvdcg0v7GvARYDd9XLAktdzqGnKB/CnxGzoJ37nwdsP+uij1GxJd
brHwB6XrIlPw/eCb+/eMhE57SuQ/l9ueuVL4ptwyiTLP57Ynk/9jZpsk/EBM
Oz5EfG0v57ZzrsrdznXBD0tz219ZB/iHvvApwMO3Bh9Pz72e2EIvivVmjZfG
nqFzYtObGO2ju2JTf6b0uuBTuCvmvTjmPjXWjHz8iZzHm3OPE5v1S7ltg/cH
zZo3DZnD3I+O8nznOzLx9+asB7IanfKszH7aszPHGBHXRHz4ubnj6tGvNq7a
TrB/1XwzLs4h8UUvhS/7r8Lvl7R0/NhDnDfhau63D2834qaI3ZgdfRH/Mibs
wdhBsS3yHTHfKfKNJHFTHyRui/ax/WI75RvYSxN/50wcCzHkxO2gbyCPsUcR
10KsC7HljAG7Lu/DNqXf6HwvSX/oePTPHLHjYrPlvchcsNUSI4cPnRgd0ugz
/J7FexI9h3g2YhWIVSOejbgt4tiItyFGhpicSwvHAbWtmiZOjZi980vrU/is
a8Tbcl3kUObYfNaKWC98+zOCZ9Gd8Ct0D9mLDOa73KmJ4yv4rnaY0q2r9i93
CBnOt7R8Yz4sdE70VfRWbLlr427FLnRpjIFvfkcFbxDDTAw4ccn02y363ii3
3ojdiTGMTvytPd+XcbehO6HPcd+i37GHV/+//R4aafYFWwM2SWQ/7wzeG8Qj
EcfD/yVAnxgd55z9JbblslhDdGC+Pbk2c0wK8TwTgj+JW/g/QE4x6w==
         "]], 
        Polygon3DBox[CompressedData["
1:eJxNm3UYFsX3xbdmXxtbRBRQbEVEsbBAEQkBEUFSQBAbFcVOEGwUwQaxERW7
EQs7ULG7u7v9nY/nfp/n98d93nN3dmdnZ2dvnDtvqxFj+hxUZFk2ocyySr93
1Fl2kg6MlMwQbq+D3+RZ9q1kM+FrJZeqbbpklnB7nbNQbXdKVhNumbKsj/rp
qv42aGTZhtL3kr6TpIXwdTrnUF27u+Qy4U6Sj3TtIPXVR+e31Tn76NzukrWE
z1N7X517SJy/rORKnf+gpJnwCZIt1LaKZJzwupL5artW0kJ4I/V7s/AtkraV
9anC50naCF+kcwbr2kuFB+n+/fT7gdrel+wuvLLa5wivJ9w92v+R/q+kv/CZ
at9Z14+SnC28au25uEiymPCRkg3VdoTO7afrJ1d+9n6ScyrrWxZ+hrOF99H5
KwlvyjMLX65jnYQ7SmYKN+hTff8svVR/U6TvKsxLvFh4eu1310VyuvC+kmbC
m8f8HKo+1hdej/6Fe+jY9+pvKek9hU+WdBCeqraB6n9m7Wc7WXKF8NHMg3AP
yTGVxzdUeE/ahYfonCWFv1Of3YT3YczSF5HsK7yq5Ay1nS5pLryD3vGJmddI
e+G/JKeobR/WnPAvhd8V7+xX+tE104VnSBYVXl3n7KZrD5ZsJryl5BDhvqG3
0DpsJdxSsprwhpIdhTtL2gj/JblAfV0o+Vu41jVt1LaM5G/1v7GOrSe8rqSt
8NpqHyR8JMeE69rjGycphYfpnAvVdpFkuPCy6mNi7mdaRvhHXXO48JQ4fzvp
R+vcITp3I833b9JPUFvSuTtJ/1e/rdUumH0r/L7ah6n9OMmHwrNqv/szJLcw
9zq2uc5tJllMeI/SYz1C0l/4D9Y0cxPtXSWnCh+ttk10k12kn515DrsxVh2f
KHyK5LDS+hXCV0rGCY/UObcIT5XsKvxp8rvrLnkz3gfv5qzob29dc4nwpZLR
wvtJTsq8BvYVvr7yWsMGzRbeTddMU9utkt15dmyI8Mk6d1ON90Dp90qfLtlT
eG0d7yjcSbKO8Ms61kNj2VfytvArkl7CB0jeS57fNXRua96t+ntAczi5sI26
k7nV8cvUPlMyRngSYxS+QXJq6JMzz9nE0vYNW3V2XP+F7nGg7tU77reRZGTm
Z95CeIBkhvB9rBfhnZLnGhu4jXA79fFsbhu2kfAqkpuEnwm9i8b/q/Bvkp1Z
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
5vP/AG4g7VI=
         "]], Polygon3DBox[CompressedData["
1:eJwV01dsjmEYxvG31aFqa1FK7aCR2I0ReyVVo4pIajuyQwhaM0ZojYitSGxB
QqNEHZiV2IKG0jaCxAkRggMUv/fgn3zX/73u+3m+783XcsaCzPmRQRAMQDSK
Y4JgE3E5KgiuoEVsEKz14IVnBdWC4BBqc/u5n9xJ+QTy5RtIjdCVS1FPb719
/ew7YNdB7Jaf4Qx3Q76OErnUbIbZSnMVeCC/5C/oPdF5jJb2NeLO6rWRWyOR
28tN0tsT7kczbiIXyU2Ws5HE/bJzndl4uSYSuEy939woOQND5SH4yE2XZ2C8
/NpsFvfZ3T6hvtn7XC/uq/wNr+Q7urud+9zcC5TKUdih117uEN5Zro/jXGJ4
D0TL2YgzO0eejSbOOGxnld+5yP5LqMPFcJ24XnLv8C7yH/0ULlluhmi9FfZ1
tm+lZ6uQzA3TXa+3SGcxMuWteul6y3WWIUdORqH7dZW7oKHZf7qbuSZyU8Tr
LEEHswvkhaHXi9Br54yO9qcihpvJnee2yJtRk1ttNs1svrmtyJN/6OU4o0rn
Lxro7eK+mN0n78U6ubdumd6Q8J2hsV5ffqneeJ0JiOOyuH3cVHkKBsmtMYEb
K49Bdb2N3BvurHwOO+VTiHPGK3cswxdn1sIhLtaZMfitk4tHZreZ245a9u3U
yzSzSWcjNshJeiP0uut0C38DuYCfpndc5xiam33IJ3leyac4657cI/zf+NxT
Jw2N9K5z23RK5Lt4IGfgu94AuT/6yE/ND+Oe2vkEN+Vy/orZCp1ytLIvgR/o
fu102iJS7q/31uw4nSykyyV8V+69zodwZziHlWZnyrNQw75jXJTebfkW6nLN
udF6g8N3gVhuCneSy5VzEM+lc3ncGnktsuV4dOeGyyOQLBe5zxrf47S7nQn/
A2Yn8Uf05unMxcjw/egd1SvUuYhrch7/Tu+qTjEK5P8BNpbE
         "]]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkD1OQkEUhe9783ijISYiidoahVVoo6zAThsTElsoXZwbUAgswAJCA5ao
iPgD8p3cKSbfnTNn7t9Ju3vdyc3sjBPEaHabmY0qZn2ENY//pdlrYbbHfQIP
4AOeOpwW7pF3RhzhGK7QGni+4THaOfGEeCfFu3BB3hxm1HyCl+jPcIP+gveR
Hn5hE/0P1lJd1X8r3T+seM/qqwXn3G/QP3i/g1eZ+4y3DTne0X9STuVeJN+Y
f8vgf7+CL0N6FjznISyiz6D+NUeD+1HwWmvOvmbCOye+wDNIcRU9x7sKriv/
afT9aEbF2tl99D2qZ/XZS7G0z9JnV37pzbSrLaYfPjY=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtkUlKREEQRLN+Wf1xwAHHlSAOp9BNtydwZ28Ewa0uPZwXcECPoDvBnUNr
fwVbXxC1CH5kVVRGZvyt04uj8yYiNsEUeCgRJcPBW88Qz+CpGOINGHF3T32Q
Ijrqwzbik7MF+Dx45C5xluAnyXqdDeGXydoPsM79Gngt7jcHn1XN3R/DDZLf
B2ff1LvwPfADX8nudwxW4dNgP3mmGfhNtlZvrrVXa5308tPMXe2xAz9rrZN+
G/7ODBN8ngnnrmagWfrJ2Sivfu2tt1/Vf4PvC29GxbsuUf/2PI/02ukWflXs
1eEx6Vm/mJ2h8pG/tMoh6N+03kv7KZ9x5fKU97juNqz/ZDnbX7Wy+gfwQD4G

         "]], 
        Polygon3DBox[{{1467, 730, 1255, 1247, 1827}, {1779, 345, 1014, 1257, 
         1829}, {1860, 1249, 781, 780, 1485}, {1893, 1247, 775, 773, 1486}, {
         1791, 764, 294, 970, 971}, {1502, 782, 1256, 1249, 
         1828}}]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0j1Pk2EYhuEHsIAWEMSPUtREHfAHmJjIAIP8AHHAQQe7qww6wIA7cdEB
BplJWHTAAZQPtVRRCrQqI0ExkDa1jRKiwS4cDQwH530xwNs3vZB40Hu/KoTw
lHhNCJNGhiJXjoRwrDqEDq5zz76rQzxn3J7SNb5Rqg3hq37hlzurGQruVV1h
mbyd1iVy7s/6iW33on7kA1t2Shf46U7qezbd7/Qt83y353SWDfeMvmHd/Vqn
GSPpeR9rgh6G7csarTy7z3vDzuorRonZg3qHbn54P5e0lrz3NWGn9SXP6Lcf
6S06uWqf18r79S9Cwd/zqyCh6EdEPWIoueu0nqP8rrx3jfLH3aCN7Lib9DjN
7NoteoK/7lY9yT/3KT3NGfbsmLbx3x3Xdsrus3qOa9z0cH368PD78MR+oUvk
SNkRH+YiXZTt2zrASNXB92cfmD1PAA==
       "]], 
      Line3DBox[{1782, 774, 1250, 731, 740, 741, 748, 749, 1787, 751, 750, 
       743, 1785, 742, 1251, 733, 1783, 732, 729, 728, 727, 726, 1782}], 
      Line3DBox[{762, 761, 760, 1790, 730, 1255, 775, 773, 772, 771, 770, 
       1793, 769, 768, 767, 1792, 766, 1254, 765, 1791, 764, 763, 762}], 
      Line3DBox[{793, 734, 735, 736, 1784, 738, 739, 746, 1253, 747, 755, 757,
        1795, 759, 758, 756, 754, 753, 1788, 752, 745, 1786, 1252, 744, 793}],
       Line3DBox[{777, 776, 737, 792, 1257, 1829, 791, 790, 1796, 789, 788, 
       787, 786, 785, 1789, 784, 783, 782, 1256, 781, 780, 779, 1794, 778, 
       777}]}, {
      Line3DBox[{1259, 1258, 1276, 1797, 1830, 1296, 1297, 1316, 1317, 1340, 
       1801, 1838, 1360, 1361, 1380, 1381, 1404, 1805, 1846, 1424, 1425, 1444,
        1445, 1782}], 
      Line3DBox[{1261, 1260, 1278, 801, 1299, 1301, 1319, 1321, 1342, 858, 
       1363, 1365, 1383, 1385, 1406, 915, 1427, 1429, 1447, 1775, 1469, 
       1783}], Line3DBox[{1262, 1263, 1279, 1831, 1282, 1300, 1303, 1320, 
       1324, 1343, 1839, 1346, 1364, 1367, 1384, 1388, 1407, 1847, 1410, 1428,
        1431, 1448, 1451, 1470, 1854, 1473, 1488, 1491, 1506, 1510, 1528, 
       1862, 1531, 1549, 1552, 1569, 1573, 1592, 1870, 1595, 1613, 1616, 1633,
        1637, 1656, 1878, 1659, 1677, 1680, 1697, 1701, 1720, 1886, 1723, 
       1741, 1744, 1760}], 
      Line3DBox[{8, 37, 808, 66, 95, 124, 865, 153, 182, 211, 922, 240, 269, 
       298, 978, 327, 356, 385, 1033, 414, 443, 472, 1090, 501, 530, 559, 
       1147, 588, 617, 646, 1204, 675, 704}], 
      Line3DBox[{1264, 1267, 1281, 1798, 1832, 1302, 1307, 1323, 1329, 1345, 
       1802, 1840, 1366, 1371, 1387, 1393, 1409, 1806, 1848, 1430, 1435, 1450,
        1456, 1472, 1809, 1855, 1490, 1495, 1509, 1515, 1530, 1812, 1863, 
       1551, 1556, 1572, 1578, 1594, 1816, 1871, 1615, 1620, 1636, 1642, 1658,
        1820, 1879, 1679, 1684, 1700, 1706, 1722, 1824, 1887, 1743, 1748, 
       1762}], Line3DBox[{1265, 1269, 1283, 815, 1304, 1311, 1325, 1333, 1347,
        872, 1368, 1375, 1389, 1397, 1411, 929, 1432, 1439, 1452, 1460, 1474, 
       985, 1492, 1499, 1511, 1519, 1532, 1040, 1553, 1560, 1574, 1582, 1596, 
       1097, 1617, 1624, 1638, 1646, 1660, 1154, 1681, 1688, 1702, 1710, 1724,
        1211, 1745, 1752, 1763}], 
      Line3DBox[{1266, 1272, 1285, 1833, 1292, 1305, 1313, 1327, 1336, 1349, 
       1841, 1356, 1369, 1377, 1391, 1400, 1413, 1849, 1420, 1433, 1441, 1454,
        1463, 1476, 1856, 1483, 1493, 1501, 1513, 1522, 1534, 1864, 1541, 
       1554, 1562, 1576, 1585, 1598, 1872, 1605, 1618, 1626, 1640, 1649, 1662,
        1880, 1669, 1682, 1690, 1704, 1713, 1726, 1888, 1733, 1746, 1754, 
       1765}], Line3DBox[{15, 44, 822, 73, 102, 131, 879, 160, 189, 218, 936, 
       247, 276, 305, 992, 334, 363, 392, 1047, 421, 450, 479, 1104, 508, 537,
        566, 1161, 595, 624, 653, 1218, 682, 711}], 
      Line3DBox[{1268, 1277, 1286, 1298, 1834, 1306, 1318, 1328, 1341, 1350, 
       1362, 1842, 1370, 1382, 1392, 1405, 1414, 1426, 1850, 1434, 1446, 1455,
        1468, 1477, 1487, 1857, 1494, 1504, 1514, 1526, 1535, 1547, 1865, 
       1555, 1567, 1577, 1590, 1599, 1611, 1873, 1619, 1631, 1641, 1654, 1663,
        1675, 1881, 1683, 1695, 1705, 1718, 1727, 1739, 1889, 1747, 1758, 
       1766}], Line3DBox[{1270, 1280, 1288, 830, 1309, 1322, 1331, 1344, 1352,
        887, 1373, 1386, 1395, 1408, 1416, 944, 1437, 1449, 1458, 1471, 1479, 
       1000, 1497, 1508, 1517, 1529, 1537, 1055, 1558, 1571, 1580, 1593, 1601,
        1112, 1622, 1635, 1644, 1657, 1665, 1169, 1686, 1699, 1708, 1721, 
       1729, 1226, 1750, 1761, 1768}], 
      Line3DBox[{1271, 1284, 1289, 1835, 1799, 1310, 1326, 1332, 1348, 1353, 
       1843, 1803, 1374, 1390, 1396, 1412, 1417, 1851, 1807, 1438, 1453, 1459,
        1475, 1480, 1858, 1810, 1498, 1512, 1518, 1533, 1538, 1866, 1813, 
       1559, 1575, 1581, 1597, 1602, 1874, 1817, 1623, 1639, 1645, 1661, 1666,
        1882, 1821, 1687, 1703, 1709, 1725, 1730, 1890, 1825, 1751, 1764, 
       1769}], Line3DBox[{22, 51, 837, 80, 109, 138, 894, 167, 196, 225, 951, 
       254, 283, 312, 1007, 341, 370, 399, 1062, 428, 457, 486, 1119, 515, 
       544, 573, 1176, 602, 631, 660, 1233, 689, 718}], 
      Line3DBox[{1273, 1287, 1291, 1308, 1836, 1312, 1330, 1335, 1351, 1355, 
       1372, 1844, 1376, 1394, 1399, 1415, 1419, 1436, 1852, 1440, 1457, 1462,
        1478, 1482, 1496, 1859, 1500, 1516, 1521, 1536, 1540, 1557, 1867, 
       1561, 1579, 1584, 1600, 1604, 1621, 1875, 1625, 1643, 1648, 1664, 1668,
        1685, 1883, 1689, 1707, 1712, 1728, 1732, 1749, 1891, 1753, 1767, 
       1771}], Line3DBox[{1274, 1290, 1293, 844, 1314, 1334, 1337, 1354, 1357,
        901, 1378, 1398, 1401, 1418, 1421, 958, 1442, 1461, 1464, 1481, 1484, 
       1248, 1786}], 
      Line3DBox[{1275, 1294, 1295, 1837, 1800, 1315, 1338, 1339, 1358, 1359, 
       1845, 1804, 1379, 1402, 1403, 1422, 1423, 1853, 1808, 1443, 1465, 1466,
        1784}], 
      Line3DBox[{1757, 1738, 1737, 1885, 1823, 1717, 1694, 1693, 1674, 1673, 
       1877, 1819, 1653, 1630, 1629, 1610, 1609, 1869, 1815, 1589, 1566, 1565,
        1546, 1545, 1861, 1811, 1525, 1787}], 
      Line3DBox[{1759, 1742, 1740, 1197, 1719, 1698, 1696, 1678, 1676, 1140, 
       1655, 1634, 1632, 1614, 1612, 1083, 1591, 1570, 1568, 1550, 1548, 1026,
        1527, 1507, 1505, 1489, 1785}], 
      Line3DBox[{1772, 1770, 1755, 1240, 1734, 1731, 1714, 1711, 1691, 1183, 
       1670, 1667, 1650, 1647, 1627, 1126, 1606, 1603, 1586, 1583, 1563, 1069,
        1542, 1539, 1523, 1788}], 
      Line3DBox[{1774, 1773, 1756, 1826, 1892, 1736, 1735, 1716, 1715, 1692, 
       1822, 1884, 1672, 1671, 1652, 1651, 1628, 1818, 1876, 1608, 1607, 1588,
        1587, 1564, 1814, 1868, 1544, 1543, 1795}]}, {
      Line3DBox[{794, 1075, 1074, 1073, 1868, 1072, 1071, 1070, 1069, 1068, 
       1067, 1066, 1867, 1065, 1064, 1063, 1062, 1061, 1060, 1059, 1866, 1058,
        1057, 1056, 1055, 1054, 1053, 1052, 1865, 1051, 1050, 1049, 1047, 
       1046, 1045, 1044, 1864, 1043, 1042, 1041, 1040, 1039, 1038, 1037, 1863,
        1036, 1035, 1034, 1033, 1032, 1031, 1030, 1862, 1029, 1028, 1027, 
       1026, 1025, 1024, 1023, 1861, 1022, 1021, 1020, 1048}], 
      Line3DBox[{377, 376, 757}], 
      Line3DBox[{823, 795, 796, 797, 1830, 798, 799, 800, 801, 802, 803, 804, 
       1831, 805, 806, 807, 808, 809, 810, 811, 1832, 812, 813, 814, 815, 816,
        817, 818, 1833, 819, 820, 821, 822, 824, 825, 826, 1834, 827, 828, 
       829, 830, 831, 832, 833, 1835, 834, 835, 836, 837, 838, 839, 840, 1836,
        841, 842, 843, 844, 845, 846, 847, 1837, 848, 849, 850, 851}], 
      Line3DBox[{88, 89, 1316, 90, 91, 1319, 92, 93, 1320, 94, 95, 96, 1323, 
       97, 98, 1325, 99, 100, 1327, 101, 102, 103, 1328, 104, 105, 1331, 106, 
       107, 1332, 108, 109, 110, 1335, 111, 112, 1337, 113, 114, 1339, 115, 
       116}], Line3DBox[{880, 852, 853, 854, 1838, 855, 856, 857, 858, 859, 
       860, 861, 1839, 862, 863, 864, 865, 866, 867, 868, 1840, 869, 870, 871,
        872, 873, 874, 875, 1841, 876, 877, 878, 879, 881, 882, 883, 1842, 
       884, 885, 886, 887, 888, 889, 890, 1843, 891, 892, 893, 894, 895, 896, 
       897, 1844, 898, 899, 900, 901, 902, 903, 904, 1845, 905, 906, 907, 
       908}], Line3DBox[{175, 176, 1380, 177, 178, 1383, 179, 180, 1384, 181, 
       182, 183, 1387, 184, 185, 1389, 186, 187, 1391, 188, 189, 190, 1392, 
       191, 192, 1395, 193, 194, 1396, 195, 196, 197, 1399, 198, 199, 1401, 
       200, 201, 1403, 202, 203}], 
      Line3DBox[{937, 909, 910, 911, 1846, 912, 913, 914, 915, 916, 917, 918, 
       1847, 919, 920, 921, 922, 923, 924, 925, 1848, 926, 927, 928, 929, 930,
        931, 932, 1849, 933, 934, 935, 936, 938, 939, 940, 1850, 941, 942, 
       943, 944, 945, 946, 947, 1851, 948, 949, 950, 951, 952, 953, 954, 1852,
        955, 956, 957, 958, 959, 960, 961, 1853, 962, 963, 964, 965}], 
      Line3DBox[{262, 263, 1444, 264, 265, 1447, 266, 267, 1448, 268, 269, 
       270, 1450, 271, 272, 1452, 273, 274, 1454, 275, 276, 277, 1455, 278, 
       279, 1458, 280, 281, 1459, 282, 283, 284, 1462, 285, 286, 1464, 287, 
       288, 1466, 289, 290}], Line3DBox[{993, 966, 967, 1250}], 
      Line3DBox[{1019, 1018, 1017, 1253}], Line3DBox[{349, 350, 748}], 
      Line3DBox[{464, 463, 1588, 462, 461, 1586, 460, 459, 1584, 458, 457, 
       456, 1581, 455, 454, 1580, 453, 452, 1577, 451, 450, 449, 1576, 448, 
       447, 1574, 446, 445, 1572, 444, 443, 442, 1569, 441, 440, 1568, 439, 
       438, 1565, 437, 436}], 
      Line3DBox[{1076, 1132, 1131, 1130, 1876, 1129, 1128, 1127, 1126, 1125, 
       1124, 1123, 1875, 1122, 1121, 1120, 1119, 1118, 1117, 1116, 1874, 1115,
        1114, 1113, 1112, 1111, 1110, 1109, 1873, 1108, 1107, 1106, 1104, 
       1103, 1102, 1101, 1872, 1100, 1099, 1098, 1097, 1096, 1095, 1094, 1871,
        1093, 1092, 1091, 1090, 1089, 1088, 1087, 1870, 1086, 1085, 1084, 
       1083, 1082, 1081, 1080, 1869, 1079, 1078, 1077, 1105}], 
      Line3DBox[{551, 550, 1652, 549, 548, 1650, 547, 546, 1648, 545, 544, 
       543, 1645, 542, 541, 1644, 540, 539, 1641, 538, 537, 536, 1640, 535, 
       534, 1638, 533, 532, 1636, 531, 530, 529, 1633, 528, 527, 1632, 526, 
       525, 1629, 524, 523}], 
      Line3DBox[{1133, 1189, 1188, 1187, 1884, 1186, 1185, 1184, 1183, 1182, 
       1181, 1180, 1883, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1882, 1172,
        1171, 1170, 1169, 1168, 1167, 1166, 1881, 1165, 1164, 1163, 1161, 
       1160, 1159, 1158, 1880, 1157, 1156, 1155, 1154, 1153, 1152, 1151, 1879,
        1150, 1149, 1148, 1147, 1146, 1145, 1144, 1878, 1143, 1142, 1141, 
       1140, 1139, 1138, 1137, 1877, 1136, 1135, 1134, 1162}], 
      Line3DBox[{638, 637, 1716, 636, 635, 1714, 634, 633, 1712, 632, 631, 
       630, 1709, 629, 628, 1708, 627, 626, 1705, 625, 624, 623, 1704, 622, 
       621, 1702, 620, 619, 1700, 618, 617, 616, 1697, 615, 614, 1696, 613, 
       612, 1693, 611, 610}], 
      Line3DBox[{1190, 1246, 1245, 1244, 1892, 1243, 1242, 1241, 1240, 1239, 
       1238, 1237, 1891, 1236, 1235, 1234, 1233, 1232, 1231, 1230, 1890, 1229,
        1228, 1227, 1226, 1225, 1224, 1223, 1889, 1222, 1221, 1220, 1218, 
       1217, 1216, 1215, 1888, 1214, 1213, 1212, 1211, 1210, 1209, 1208, 1887,
        1207, 1206, 1205, 1204, 1203, 1202, 1201, 1886, 1200, 1199, 1198, 
       1197, 1196, 1195, 1194, 1885, 1193, 1192, 1191, 1219}], 
      Line3DBox[{1251, 972, 973, 974, 1854, 975, 976, 977, 978, 979, 980, 981,
        1855, 982, 983, 984, 985, 986, 987, 988, 1856, 989, 990, 991, 992, 
       994, 995, 996, 1857, 997, 998, 999, 1000, 1001, 1002, 1003, 1858, 1004,
        1005, 1006, 1007, 1008, 1009, 1010, 1859, 1011, 1012, 1013, 1248, 
       1252}], Line3DBox[{750, 352, 1505, 353, 354, 1506, 355, 356, 357, 1509,
        358, 359, 1511, 360, 361, 1513, 362, 363, 364, 1514, 365, 366, 1517, 
       367, 368, 1518, 369, 370, 371, 1521, 372, 373, 1523, 374, 
       756}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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

    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"Hastings\[Dash]McLeod solution in the complex plane\"", TraditionalForm],
  PlotRange->{{-3., 3.}, {-3.5, 3.5}, {0., 3.1310092089157786`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.484029103446576*^9, 3.484029145568039*^9}, 
   3.484029183953415*^9, 3.48402930594178*^9, 3.484029487587036*^9, 
   3.4840335008370667`*^9, 3.484034448667873*^9, 3.484034786051607*^9, 
   3.484315260580414*^9, 3.487503809730196*^9, 3.487505262055883*^9, 
   3.494227643550376*^9, 3.5054665605624933`*^9, 3.505467914905088*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Computing the derivative of the Hastings\[Dash]McLeod solution\
\>", "Subsection",
 CellChangeTimes->{{3.48386900994193*^9, 3.483869011653343*^9}, {
  3.4839464218300123`*^9, 3.4839464240934267`*^9}, {3.483953715285821*^9, 
  3.483953720426712*^9}}],

Cell[TextData[{
 "We can also compute the derivative of the Hastings\[Dash]McLeod solution.  \
We need to use a different right hand side to the RH problem, since the \
derivative satisfies \n\n\t",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[CapitalPhi]", "x", "+"], TraditionalForm]]],
 " \[Dash] ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[CapitalPhi]", "x", "-"], TraditionalForm]]],
 " G =  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalPhi]", "-"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "x"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalPhi]", "x"], "(", "\[Infinity]", ")"}], " ", "=", 
    " ", "0"}], TraditionalForm]]],
 ",\n\t\nby differentiation of both sides.  First we construct the derivative \
with respect to x of the jump matrix GG."
}], "Text",
 CellChangeTimes->{{3.483869013197392*^9, 3.483869017580845*^9}, {
   3.4839461897835283`*^9, 3.4839462020449877`*^9}, {3.483946372757473*^9, 
   3.483946390812764*^9}, 3.483946944693314*^9, {3.4839469764757547`*^9, 
   3.48394714602002*^9}, 3.483986085899598*^9, {3.483987380941092*^9, 
   3.483987401404345*^9}, {3.4840326402889214`*^9, 3.484032650024782*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]x", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", " ", 
   RowBox[{"2", " ", "I", "  ", "z"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {"0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "1", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "1", "]"}], 
         RowBox[{"\[Theta]x", "[", 
          RowBox[{"x", ",", "z"}], "]"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "3", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "3", "]"}], 
         RowBox[{"\[Theta]x", "[", 
          RowBox[{"x", ",", "z"}], "]"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "4", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], " ", 
         RowBox[{"s", "[", "4", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "6", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], " ", 
         RowBox[{"s", "[", "6", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGx", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "1", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "3", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "4", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "6", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "6"}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.483869020862625*^9, 3.483869129998797*^9}, {
  3.48394622210963*^9, 3.483946230593299*^9}, {3.4839860893718243`*^9, 
  3.483986102731062*^9}, {3.484225538392785*^9, 3.484225538669325*^9}, {
  3.487503109740671*^9, 3.48750311200231*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4835341285876102`*^9, 3.48353430694979*^9}, {
   3.4835343464077253`*^9, 3.48353442182684*^9}, {3.483534510913375*^9, 
   3.4835345145689497`*^9}, {3.483534802707912*^9, 3.483534810938017*^9}, {
   3.4835348429931517`*^9, 3.4835348430703163`*^9}, {3.483535612045465*^9, 
   3.48353561237816*^9}, 3.4835372492972403`*^9, {3.483700379133095*^9, 
   3.483700379364772*^9}, {3.483700420086055*^9, 3.483700420314332*^9}, {
   3.483700645290639*^9, 3.483700645599826*^9}, {3.483700799133174*^9, 
   3.483700827698254*^9}, {3.4837008888982677`*^9, 3.4837008897736187`*^9}, {
   3.4837037656220093`*^9, 3.4837037662987757`*^9}, {3.4837040283461523`*^9, 
   3.483704048140493*^9}, {3.48370504381546*^9, 3.4837050439876003`*^9}, {
   3.483869135628381*^9, 3.483869142640871*^9}, {3.4839462324881973`*^9, 
   3.483946243120829*^9}, {3.483986093379991*^9, 3.48398609738571*^9}, 
   3.484225537131452*^9}],

Cell[TextData[{
 "We need ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalPhi]", "-"], TraditionalForm]]],
 ", which is the identity matrix plus the cauchy transform of U.  The \
function CauchyOperator precomputes the Cauchy matrices for a fixed ",
 StyleBox["n",
  FontSlant->"Italic"],
 ".  The function AddIdentityMatrix adds the identity matrix to a list of ",
 "Fun",
 "s.\n\nAlternatively, we could have written\n\n\t",
 StyleBox["\[CapitalPhi]m[n_, x_] := \[CapitalPhi]m[n, x] =  Cauchy[-1,U[n, \
x]]//AddIdentityMatrix;",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.483946366971883*^9, 3.483946484840274*^9}, {
   3.4839471789875517`*^9, 3.483947186301552*^9}, {3.4839475157159433`*^9, 
   3.483947521636133*^9}, {3.483947846169919*^9, 3.4839478606438704`*^9}, {
   3.483986146184496*^9, 3.483986152390943*^9}, {3.4839862087918653`*^9, 
   3.48398628000203*^9}, {3.483986448193275*^9, 3.483986534282301*^9}, 
   3.487503127284173*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]m", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cm", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cm", "[", "n", "]"}], "=", 
    RowBox[{"CauchyOperator", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"R", "[", "n", "]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]m", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalPhi]m", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Cm", "[", "n", "]"}], "[", 
      RowBox[{"U", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "//", "AddIdentityMatrix"}]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.483986302874404*^9, 3.48398630769308*^9}, {
  3.487503572372519*^9, 3.487503573110272*^9}}],

Cell[TextData[{
 "We now use our precomputed RHSolver.  Specifying a second argument is \
equivalent to changing the right\[Dash]hand side.  We want the new right-hand \
side to be  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalPhi]", "-"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "x"], TraditionalForm]]],
 ".  The multiplication is accomplished using FunListDot, which takes two \
lists of Funs and dots the lists component-wise "
}], "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
  3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483987438170971*^9, 
  3.483987439826622*^9}, {3.487503627030449*^9, 3.487503689244257*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ux", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ux", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Ux", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"R", "[", "n", "]"}], "[", 
    RowBox[{
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "x"}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalPhi]m", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "~", "FunListDot", "~", 
      RowBox[{"GGx", "[", 
       RowBox[{"n", ",", "x"}], "]"}]}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.48394626675776*^9, 3.48394626832169*^9}, {
   3.4839463277241993`*^9, 3.483946328011894*^9}, 3.483946513434458*^9, {
   3.4839468351920567`*^9, 3.4839469045728617`*^9}, {3.483946939312194*^9, 
   3.48394694165464*^9}, 3.4839472386720552`*^9, {3.483960804029976*^9, 
   3.483960810902066*^9}, {3.4839861082006817`*^9, 3.483986118148151*^9}, {
   3.483987470036564*^9, 3.483987471993949*^9}, {3.487503614491884*^9, 
   3.4875036244175043`*^9}}],

Cell["We can now define the derivative of the solution", "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
  3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483947297737791*^9, 
  3.4839473081864758`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"px", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"px", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"px", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], " ", 
    RowBox[{
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{"Ux", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.483869741612471*^9, 3.483869762838874*^9}, {
  3.4838698367287893`*^9, 3.483869843564246*^9}, {3.483947267516725*^9, 
  3.483947274220769*^9}, {3.483947315454978*^9, 3.4839473175028048`*^9}, {
  3.483947374779566*^9, 3.483947374929497*^9}, {3.4839613164353228`*^9, 
  3.483961323199203*^9}, {3.483986119525629*^9, 3.483986121291061*^9}, {
  3.4839874739011927`*^9, 3.483987475397687*^9}, {3.484032712458864*^9, 
  3.4840327282314177`*^9}}],

Cell[TextData[{
 "This gives a value at ",
 StyleBox["x",
  FontSlant->"Italic"],
 " = 0"
}], "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
   3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483947297737791*^9, 
   3.4839473081864758`*^9}, {3.48394742249831*^9, 3.483947423423778*^9}, {
   3.483947478821151*^9, 3.483947551053198*^9}, 3.483947844674869*^9, {
   3.483988495970057*^9, 3.483988505390643*^9}, {3.484032743573892*^9, 
   3.484032748268325*^9}, {3.50546618584053*^9, 3.505466194599794*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"px", "[", 
  RowBox[{"75", ",", "0."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466196877695*^9, 3.505466200585609*^9}}],

Cell[BoxData[
 RowBox[{"0.29537210544817033`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505466561675634*^9, 3.5054679158924513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PainleveIID", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], ",", "0."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466205257544*^9, 3.505466212593149*^9}}],

Cell[BoxData[
 RowBox[{"0.2953721054475503`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505466564810946*^9, 3.505467918441044*^9}]
}, Open  ]],

Cell["\<\
We can plot the derivative of the solution (chopping off the small imaginary \
part that is due to round-off error)\
\>", "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
   3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483947297737791*^9, 
   3.4839473081864758`*^9}, {3.48394742249831*^9, 3.483947423423778*^9}, {
   3.483947478821151*^9, 3.483947551053198*^9}, 3.483947844674869*^9, {
   3.483988495970057*^9, 3.483988505390643*^9}, {3.484032743573892*^9, 
   3.484032748268325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"TablePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"px", "[", 
       RowBox[{"75", ",", "x"}], "]"}], "//", "Re"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5."}], ",", "5.", ",", ".1"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Hastings\[Dash]McLeod derivative\>\""}]}], 
    "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.483704223848497*^9, 3.4837042316373177`*^9}, {
   3.483704334952297*^9, 3.483704349013042*^9}, {3.483704383806059*^9, 
   3.48370438391581*^9}, {3.483704535636174*^9, 3.483704536308423*^9}, {
   3.4837046850789623`*^9, 3.483704732261632*^9}, {3.4837050852631273`*^9, 
   3.483705086102219*^9}, {3.483885454205223*^9, 3.4838854562111473`*^9}, {
   3.483946157952426*^9, 3.4839461735197144`*^9}, {3.4839474288361187`*^9, 
   3.483947431705813*^9}, {3.4839475563935747`*^9, 3.483947557192994*^9}, 
   3.4839861222723494`*^9, {3.4839875170604343`*^9, 3.483987518715699*^9}, {
   3.483987863025803*^9, 3.483987866175435*^9}, {3.483988032188925*^9, 
   3.483988039073682*^9}, {3.48398815020989*^9, 3.48398815030072*^9}, {
   3.483988464454267*^9, 3.4839885187454157`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw11QlM01cYAPBS7rsHeABzgU1HPGInhCMw3oNukg1XJ8NFxUEDAXQpDEEQ
twGrggMnDBA5OhlCMCwi5xhzA/k/blqulpbDY4xjnBMHCCLgcNJ+/5c0TfPe
9/v+72u/r7ZBX/qGMBkMRsjr19a7ZlkQkTc1xQtoRZL8rcUlfw+KcpyyW5GD
enFJmp0Vy6O7FfV0by0OWRFmbI/Qa0Oh6sUhj9yc8axXG9J4HJIqY8oV4jbw
2ETAqv7wSEsbeGyyqrWXK9ZvB49FrC7dTS0QtIPHIm7skT9Uee3gsciFd8Ym
A6faId6cmDg2Dyc4d8B5M1K2dNEh7loH5DMlLl/7ZuZPdiA1321CCkMVWc78
TvBMiCGjoaH8did4xsSzaNY6wFQKnhHx3LDKr/pKCp4h+XXvwAT7qRQ8AzLk
d2JoMUwGngH5M1Ho2jQjA0+fbBf1VD6N7AJPj5TMcaXjjG6k5vJ1iXud7fJ6
Xjd4OmTh/Ir3Zdce8HTIrcUUZuV4D3jaZPd7fTU/ZPeCxyTO/tFc46N94GmR
ouuHH04byMFjEHs+9+TbEXLwGMTSWj+ic1AO8ZvU3VdGC4e8FHD+JfW40NYm
vVKBDqnzbVA+gwlhsjf6UZ7aX6N8mYJ6yff94L2g+C8u3ota7QfvOSU7FlD6
XaASvGWqaz2vQtWkBO8Z5XkhUmFnowJvkZo+OKFnKVKBt0DtOmsR61KpQp3q
+CdU+JpZ+o4J+vwsFej+r89nugPojDrfFFXOcypo4g4gntqfoH4mjyKjTQbA
G6WiaqLap+ZVKEMd/4ASFVs8MftNBeeVlFemwb6zYSr0rXpfSgkbUoMNXinh
8+/UpzFTyfkJSrp+DB93fphwuh8RzT6qu1rPPuDWj25p4tFif5jgo28UCGt8
dCc6vCq0XA77DxC/tfbGs+I++vmQqSV+LBjqQS6a50e8xvacDza76PshSdqI
cM8uGcTPouack5dW3TuRXFMfVFqoFAqEdH8soAM34nfx0lrRTU19UYdHinSj
oxk5auqP0i2D5J9bNEH8MkrRZvXmzjVCvudIbx/vFOthPf39opVV+2C/9Xvg
rSG2vbjtxMd14G2goOQ5kzXlL+C9RG9Jspes06vB20Tzp4VJNSsVdP1w0mpF
l8e7ZahX8/vEX8RcEVfISqG/tLBrsn+L0f0SiGfiikDToT5mMeTTxsk/FYTz
9xfS/YFvSmwcl8Yk4Olg35DTB7OscsHTxRGN5olusuvg6eHE8R2iM5MZ4Onj
bdZVYw7N1+j+fR3/18pESArd39h5NuZOanES3N8Qz5nkehwOFYNnhJNlvLRY
z3jwjPHu0cb/WFfi6PmC46XVo5cTz9PzB++Js/uRWJ4DzxQrBmIqa0NF4Jnh
OhfRP9VXw8Azx+8rgxLYscH0/MOSN48mZRoL6fmIxfIZ85DgU3B/Fm4p3NZU
XnIc4tn4k8qZoO7aY/T8xdnHi8aHJ4/Q8xkHSVvuTyV7Q34O9t9fVj64kw8e
Bw+P7BTML3qAx8VRnM7eai1X+v8Bn7Nuur1g7wieBfZI8Muac+Kh/wEAKdUn

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Hastings\[Dash]McLeod derivative\"", TraditionalForm],
  
  PlotRange->{{-5., 5.}, {0., 0.3293308291693034}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483704243425623*^9, 3.483704346499186*^9, {3.483704382667766*^9, 
   3.483704389280013*^9}, 3.4837045647317038`*^9, 3.4837047048521957`*^9, 
   3.483704735205851*^9, {3.483946155085792*^9, 3.483946169055881*^9}, 
   3.483946234996176*^9, 3.483947443972715*^9, 3.48394750477885*^9, 
   3.483947555254313*^9, 3.483947619270499*^9, 3.48394777163452*^9, 
   3.4839875140641403`*^9, {3.483987849535138*^9, 3.483987866574881*^9}, 
   3.483988121689067*^9, {3.483988460613451*^9, 3.483988491936095*^9}, 
   3.4839885363621063`*^9, 3.4839889833288727`*^9, 3.484315502060028*^9, 
   3.487505482180421*^9, 3.494227855298546*^9, 3.505466682560093*^9, 
   3.5054680304563303`*^9}]
}, Open  ]],

Cell["\<\
We can compare this too with the values from [Pr\[ADoubleDot]hofer & Spohn \
2003]\
\>", "Text",
 CellChangeTimes->{{3.483947950239595*^9, 3.4839479865445957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLineLogPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"25", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"50", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"75", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"100", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Error in approximating the derivative of the Hastings\[Dash]McLeod \
solution\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483704899100596*^9, 3.4837049814796667`*^9}, {
  3.483947737190786*^9, 3.483947737740926*^9}, {3.4839477918368607`*^9, 
  3.483947794920754*^9}, {3.48394786686578*^9, 3.483947909922564*^9}, {
  3.483947992932021*^9, 3.483947994607346*^9}, {3.48395353774935*^9, 
  3.48395361223071*^9}, {3.483953692761897*^9, 3.483953692945444*^9}, {
  3.483986123434526*^9, 3.483986124598263*^9}, {3.484040291281361*^9, 
  3.484040295973773*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw10QtMU1cYwPFb+gzOBXkEREQQwYFFSRiyMeDcNkGYQESmgVQmA3mIDF0Z
YXPGtVSpXRGQLRAckiAOAnYPFx06HjunQxgDLSzpCIwSHiOA4BgVpNAK7OH5
bnJz88v/5txzvuudfi4x045hmLR/7/+eLy8RSSiOlFj3O5D/qRQSP3u35MHQ
bS/NCIlHo+SGNN6RdgHJCLQE6eVOtAuIk3tj+2STM+18MmQa2Pjb4kI7nzz8
lIl6PduVdh7RdRiXe3nbaecReUzgSOu8O+1cIta7K2yynbRzydLvt6b7q7xo
tyO9GgOJP7uHdjui2IrLP2iBziHy4/hyQtMu2jmk5MnP11VjnrQzRDYuKlAU
UzMMqVn2Cus4A97E2/Lq9EnnwRu42mPSLbsBvI5H1ZF3H8yAX2Bxaa+69i34
ng0XeQnvjNaCrTjt63q1i4Duj1nD33bJKk5Lwau4zbGwWnoJbMHae50he3rA
Kzil+nTRbQdv6ufYqsnf0KSAl/ElMae7WAdewg/zPMM/Wgc/w+8dih+WJu6m
NuMrOYMtpmbwIu6+8VttNM+HegGXacZSK9PAT3Fy/VLkjB48hz9W7Nh11hfm
P4t/mYnwO3MVPI23R2yR+lvAU9i5itPOzfKlnsS3jpnyjw+Dx/HnO/MS5Uf9
qE14TZO8pDWAh3CSbqyuPGEvtRHbj3yRNTUIHsC8/r6/bKmvUffgsNyCqbZZ
MMGGyYOf/JrrT30Hl+Q0fxY4AWaY+83RTVEoADryHay9a7oIJmi6ouGHI1+C
e1CZQ2j24evgAfTYJrbGXwYb0U8Vp1y1meAhtHUhti00CmxCby8qDov8wePo
nQMZRTpn8CRSd44OXbMHT6GqHB4qewU8jWT3zDczPMCz6OajLumb4eA5FP+k
aov4HPgpSsnm305qBS8grn4jnLN3H/Ui6iM939f3gM2oSt33TZxRTP0MrWec
P6bNPUC9hGrSe81fJe2nXkYh5Y/kpwrg/edoIrUx9lUNrLeCAholpQ5m+L4F
CUvz5/ga8CqyaEtFQRHgNRRaXbn+WAS2ouJG1f2GafhfNlQYffLoCSP4BQq+
Iu9tHwCvox9F/fsKR8AbaNgQ/MfmMngTCS7GqDo8YX2G5eZG60+eoFYybN1E
7AP8HXQO2+yq8hX60vMoOawkzsdBZ4Dz2bHvsiGd8xP0/Eo7NqZbK5pQwby4
7Ic181FheXReSi67suON9xXXYF481qkrKrO1CdbnsRdWJX+mu8D6fNaZt+oT
BvtR8lnOBb8jJVmwPwFruHpQURkMXcAeSqx0d3OELmRjZN51zZv0/EohWxTU
YmVsMA8Rq47jihq4AeQfjrnqBA==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxF0XtQVFUcwPG7d3fZrYVMA0t5bEShgBQg4ULouYWk8ZA0eS5YhFKxLTsT
QYBFF2TCEmVqtdEt+ENqbVzRhWBrZrVzCIfXTMOSRA5pLgzPTWB5L+8ent90
Z87c+cz33nN+M8f7Tc2hYyzDMJn/rH/fDx4pSWkc/87Z8jT5j7yEOO65St8R
P/PAjIQoSzYXPhZFzTuR/abKM3croDuRgaGDCvuv0MXEcDNeb/TxpV1MSi97
XbhWRM2LiCxlZ2tND3QRiZ7peigmdBvtQnJKbfbUnqdmhOQ301/uGsF22lmS
NJugGsqlZliSH0EmN/RDF5BaneYTjxQ/2gUkp1bh/GoPNc+QYJVZLUvyp50h
qvWNhlt3wev44x3F6iPvBlCvYdOIh5ee3UG9ioMTtrrILoJX8JV8/o/KuEDq
ZZx8rEAXKn6WeglHjqUP2SzgRfy9sP7C6z8+R+3Al/drT1dnB1EvYLlo35c6
r2DqeSysmjYk5YZQz+HTYZVx52rBs9h/91RT+c/w/QwuGW+4kV4InsZpDQqd
XgmewqNeVZaaRLAd17ImZUkGeAJvmYltXc4F38fsvbq1pgqwDScHrea9pAeP
Yv4taXNLB3gYj/A/FZqmwIPY26fF3OsJ8w7g4wGuhk0HwFZcdNWzvrwMfAe/
YUhryjODb2NXx9tZqYvgHmwn7nX2yJ3UFlxkdPE/VAFux+cScEJAH5jg3Zvj
2WBFKLURTx4NWfXTgxmmeENmV2/g89DR9W9/qHEbAxN0TZfwzQtHdsH+qLRY
qd0bCLagppwsnVIdBvOhzojuvIAg8G3k3Dh//tMnwXeQvm/Xlk5/sBVpTnqn
duwDD6D2zm5+7H3wIJL8aZe7N4CHUc28tq9FAOePolOc7L3UHLANTWcldvSv
gO+jRIukzbakoJ5Aj0iZqxlBEdR2lCxaKEtrhz6FrOrQm2FHwdNoY/2jqWcj
wTPoq5PDrXMh4FlUZwm99H+fQ2uJLVMHDoPnUelrI3keH4AXUEjJdmy8CHag
MwEvZht7wIto/NbLnwsfDqdeQoOxruiVPeBltGeic6xZBV5BT3XHHS+oBK+i
36s0Ede/Bq8ha7nz4Yxq8Dr6zLx1wkULZri9HdFy6wlqnuE4D7cyt3zoAq6h
QNv7UQ50Adf+RLy2ORs6y0mjHb7LMA/PcgXG2PD0D6ELuab+tm0rOuhCbnTQ
ID74C3QRJ/bxbURyeh+8iAurXriS3Qj3I+bKzqKkjtZI2sXckKpLVjIJ3Ym7
wcZEYT/434krymyLeRzD/hLOMb74hbkIzpdwl2xR8vAY6FJO7evdtsk/nPwN
sU3ryA==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJw90AtQVFUYwPG7b6CiQAOdBlxZeeyIvIQU0M4FJFYsFQRK87U6AmVlDsGU
Aq0DDI8IH2tMAcJi8ZgGkVAaFNZzQCRmBCIhEMJgmEUeu7M83RXYXXp4vu7M
nTu/+c855zt344kz0ae4DMPI/3n//b54rEjK+qrB4BJv8h8VIpKxWCVOnaVm
RMTOf0vnlKsP7UIiPR0fPRxHzQhJsUtx7lQedAExtJjfWWqBLiANmnYt3wSd
T1RN3TEOgb6088nBcIla9iW1gkditHz+w2boPOJs5eqg4fnRziVrk6tLlvdS
M1zybskXP5eXQucQvbf2Ue0CdA55JNF6yPdtpZ0hY4eCmNpb1AxDLj5cCdZI
/KlXsTEtJyWsEmzB4U7rNhhkAdRm/N7vDRmeQW9Sm7C42D7ul+uB1Cu47NK9
c9+WQl/G6vj+XTU+4CXsc7KRk20Dfo4Pp08Mu/HARhw5sxr4+StgA85SDyRf
loCf4bD8qcHDoeBFPOOgdF1KAC/gD2ebi3yV4HmcWGrf6XcfPIfX11uMciN4
Fh+RjttHeG+j1uOCtqnX0z8C67A4ee3R2mrwNE6x2LpnTIEncdzBmsVqz+3U
T3HFCd3JzrNgDZ68Xuhc3AgewxWpI+5dDPyvUex84Oy1LZHgYVzeHdpx8yr4
MW7zd5pOHwX34TnenlixVxB1D456TV7zYzq4A7d5dqDhXjDBscd3p7b4BFPX
4dtR2yrPF4EZZmN7Yfavb+yAjqys9V/79YAJClg9VVmx7y3YH/W69e1xfLIT
zke98+eOjKwD9yGr4/jBxU5Y/xjVpxRkN/wEHkZdMp50vwo8ij6QZFqbK8Bj
qL3LJVbeCNagWH33+4H94KdIci1w4pIFPIku1zWnhfjB+dPIPUf+3ctJYB3y
1c3kZNwH61G29Ek8bzPcZxaZPkksaL4DnkN5HuoziTcQ9TxSr3lQeiyXpV5A
V7RN9hOZ0BeR7HTjYIkj+BmKsPsz4sIk7GdA0TG7lON/gI3I7q/Wopv94OdI
kH90f9E4eAntdBq6fYOB/ZaRLCzLQ+wOXkE66dua84fAJkTCBxIulIDN6Juh
rYLeBbAFXdF9xQvdDvOvIo86r4H6H8AMGzDjVStMC3lhBcMaun1tbuVD57B7
p+3xXRm1gsOyyvKyVzdB57JXw9ZU5dtC57IjPZWJJg50HrvBbUXZZKTzKHhs
YWvUZzYGmI/PaufLhhIs0PnsS62fDhlEsF7AZrXds01ygP0FbGumynxgM3Qh
K7qrd9nx/3xCduzj1u8jk6CL2N0jg7/F3oEuYrP8clXH4ul9GSvWcZPKOs8x
hPwNIAn1iA==
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxdz3sslWEcwPHX4YStOH+ohMptawiVOCGeXCqZW4zJTkhM7jW5VJikmGGa
k8uZIlpYCuWuep7oIouwMzG003HJTiaOy3GOWxfvrz96t2fvPvv+nvd5H52g
GM8QBkVRzr/Xn/fWo0RmrE33OCRZkL9MVSQuDb2btmz2lilFEujTlce6eYzu
28julg/qet9oU9tI47t9iqoyej6VSdRZY1+yGmA/k7S9N+zmPICuQPZ3pMT3
lkJXIM+M6kR9tdDliU+TKkuuG7o8YRizBRM/oDPIoddlEjk1OJ9Bwt1CFYLs
4P/kyEpROvNSLHQ5IrXys6ivhk6R6Mx6x/lx6BRpc4o0U9O1pL2Jr0+6O+wI
Bm/gzNVW5no1eB2zY8/4qSyC1zDvVKNytr0V7VVc6FaTI7kHluEpTZMRxZ9g
Kd6eozS46mZNewXnempfTmsGS3Dup/Mq8UbHaS9jvhnfN6sOvIS5ZhfCTL1s
aC/i0JcFvAILW9oL+K1osmf63AnaYrzXVeDtvwZ9Hnuo9j8aSwbP4RCNx5r+
PuBZbDgQl1zrAZ7B+owwUY8/WIQ7bpdHtCeAp3F++J2CRB54CnP1eX5eneAJ
nKQ35twlBgtxcmmCcFgf0RbgdoPM6GwOeBTHmDv2ahSDh/CG/Hhx4QiYjwvu
Jsebs+B+fXhF4zNDZgbuws68gV6tIDDBsycrbbTywHV4UCo+fKQbTFEHVXjl
Nzb/ddRfwu4M4NjBfjSn2/rR8Kw9fB/1FF+raOSA+9DVoy1ju9Jhno9kU96a
kkTwEBq2sXpiEgIeRU7mWabajWABqjTIYl9MAQtR16BN3WIDeAKd7tcp+voK
PIUioyai3ijA+dPINJ7BD08Di5C4fLyi7Cl4BqFlTa5HKngWZcTpazxsAs+h
mHwXYw4TPP/fvBjVzAbuXJWCF9C4u21w0gvwIhJq62UoNYOXUNUMN9g1yIH2
Mgq8H3AL20GXoJKIK+0HVKCvoKTn9pZV36FLEZEv9uUqO5BfvzeGbw==
     "]], 
    LineBox[{{1.6875, -37.42994775023705}, {1.75, -36.86929914012913}, {
     1.8125, -37.695606242805574`}, {1.875, -39.50938929191688}, {
     1.9375, -38.04807065509513}, {2., -37.719592670508476`}, {
     2.0625, -39.339269321761975`}, {2.125, -39.26782481664639}, {
     2.1875, -37.89995137948278}}], 
    LineBox[{{2.3125, -38.410777003248775`}, {2.375, -38.74121783565508}, {
     2.4375, -39.196115640232705`}, {2.5, -40.20253647247683}, {
     2.5625, -40.20253647247683}, {2.625, -38.829213598790446`}, {
     2.6875, -39.103924183808715`}, {2.75, -38.33934682279253}, {
     2.8125, -39.72073200618658}, {2.875, -38.47778790645366}, {
     2.9375, -38.73735161256317}, {3., -39.72073200618658}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-3., -40.20253647247683},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-39.14394658089878, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-34.42544770960368, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.73677480943866, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.332805587922074`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.04587229873253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.823178286648194`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.64115653498315, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.48722005672038, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.35384934538487, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.517692430621544`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.82901953045652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.42505030893994, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.1381170197504, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.915423007666057`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.733401256001017`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.57946477773825, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.446094066402736`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-39.14394658089878, 
       FormBox["\"\"", TraditionalForm]}, {-32.23619130191664, 
       FormBox["\"\"", TraditionalForm]}, {-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-34.42544770960368, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.73677480943866, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.332805587922074`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.04587229873253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.823178286648194`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.64115653498315, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.48722005672038, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.35384934538487, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.517692430621544`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.82901953045652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.42505030893994, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.1381170197504, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.915423007666057`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.733401256001017`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.57946477773825, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.446094066402736`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Error in approximating the derivative of the Hastings\[Dash]McLeod \
solution\"", TraditionalForm],
  PlotRange->{{-3., 3.}, {-40.20253647247683, -4.045876521531071}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, {{-39.14394658089878, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-34.42544770960368, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.73677480943866, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.332805587922074`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.04587229873253, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.823178286648194`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.64115653498315, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.48722005672038, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.35384934538487, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.517692430621544`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.82901953045652, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.42505030893994, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.1381170197504, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.915423007666057`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.733401256001017`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.57946477773825, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.446094066402736`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.609937151639407`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.921264251474383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.5172950299578, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.230361740768263`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.00766772868392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.82564597701888, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.671709498756112`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.5383387874206, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.70218187265727, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.013508972492247`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.609539750975665`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.322606461786126`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.099912449701783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.917890698036741`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.763954219773973`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.63058350843846, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.794426593675134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.10575369351011, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.701784471993528, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.414851182803988, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.192157170719646, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.010135419054604, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8561989407918364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.722828229456324, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{
  3.483953693143484*^9, 3.484040781136764*^9, 3.484315961299335*^9, 
   3.4875059086272583`*^9, 3.494228261327264*^9, {3.505466740718301*^9, 
   3.505466763500111*^9}, 3.5054668614024773`*^9, 3.5054669386939783`*^9, 
   3.505468272607885*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Homogeneous Painlev\[EAcute] II equation\
\>", "Section",
 CellChangeTimes->{{3.4840343960415688`*^9, 3.484034418398766*^9}, 
   3.484034605072867*^9}],

Cell["\<\
To speed up the algorithm, in the Hastings\[Dash]McLeod solution we only used \
4 of the 6 rays.  There is no problem with adapting it to the full six rays, \
as the following example demonstrates:\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
  3.483705035021916*^9, 3.48370505871178*^9}, {3.48386865553936*^9, 
  3.483868664306522*^9}, {3.483945868466632*^9, 3.4839458976675*^9}, {
  3.483946948265936*^9, 3.483946966226915*^9}, {3.4839859710810966`*^9, 
  3.4839859847064037`*^9}, {3.483986567458593*^9, 3.4839870685762787`*^9}, {
  3.48403445986523*^9, 3.484034531652897*^9}, {3.4840346092751503`*^9, 
  3.484034612087191*^9}, {3.487504015129738*^9, 3.4875040184713373`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"1", "/", "3."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "4", "]"}], ",", 
     RowBox[{"s", "[", "5", "]"}], ",", 
     RowBox[{"s", "[", "6", "]"}]}], "}"}], "=", 
   RowBox[{"-", 
    RowBox[{"Array", "[", 
     RowBox[{"s", ",", "3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483534098191519*^9, 3.483534121288732*^9}, {
  3.48353417333419*^9, 3.483534197611909*^9}, {3.483534240389817*^9, 
  3.483534336682715*^9}, {3.483703230389113*^9, 3.483703230749571*^9}, {
  3.48370501565246*^9, 3.483705015970914*^9}, {3.483868794234153*^9, 
  3.483868795550787*^9}, {3.483885462418798*^9, 3.483885470030558*^9}, {
  3.483985987215592*^9, 3.483986004481682*^9}, {3.483987074007008*^9, 
  3.483987077156212*^9}, {3.484034519014134*^9, 3.484034522062389*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", "I"}], "3"], 
     RowBox[{"z", "^", "3"}]}], "+", " ", 
    RowBox[{"2", " ", "I", " ", "x", " ", "z"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "1", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "2", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "2", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "3", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "3", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "4", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "4", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "5", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "5", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "6", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "6", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "1", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "2", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"\[Pi]", "/", "3"}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "3", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "4", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "5", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"\[Pi]", "/", "3"}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "6", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "6"}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4840345426884813`*^9, 3.484034557571624*^9}, {
  3.484034597436372*^9, 3.484034597685257*^9}, {3.487503130269346*^9, 
  3.487503132255534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "[", 
   RowBox[{"50", ",", "0."}], "]"}], "//", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.4835343005342073`*^9, 3.4835343022501717`*^9}, {
   3.4837040504538183`*^9, 3.483704052479437*^9}, {3.483945933997724*^9, 
   3.483945934229574*^9}, 3.483986011765085*^9, {3.4840347523109083`*^9, 
   3.484034752421955*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], 1}}, {{0, 0}, {
       1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], ArrowBox[{{0, 0}, {0, 2}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], 1}}, {{0, 
       0}, {-1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], -1}}, {{0, 
       0}, {-1.7320508075688772`, -1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], ArrowBox[{{0, 0}, {0, -2}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], -1}}, {{0, 0}, {
       1.7320508075688772`, -1}}]]}},
  Axes->True,
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.483534302436573*^9, {3.483534349730088*^9, 3.4835343708384733`*^9}, 
   3.483534424854615*^9, 3.4835345181039867`*^9, 3.4835348125478687`*^9, 
   3.4835348444325247`*^9, 3.4835356142140913`*^9, 3.483537252771473*^9, {
   3.483700374056423*^9, 3.483700380484953*^9}, 3.483700421500204*^9, {
   3.483700802364541*^9, 3.48370083141947*^9}, 3.4837040529132013`*^9, {
   3.4838687526468143`*^9, 3.483868762739881*^9}, 3.483868802336193*^9, 
   3.483885483166663*^9, {3.483945931971674*^9, 3.483945934759091*^9}, 
   3.483987208142911*^9, 3.484034872979195*^9, 3.484036636918849*^9, 
   3.484041250493285*^9, 3.484313235304688*^9, 3.484315961462469*^9, 
   3.4875059088242693`*^9, 3.494228261497707*^9, 3.505466938877699*^9, 
   3.5054682727367477`*^9}]
}, Open  ]],

Cell["\<\
Since we don't need derivatives, we only need the top row of the RH problem \
(which takes less time to compute).  This is accomplished using the \
RHSolverTop command.\
\>", "Text",
 CellChangeTimes->{{3.4840349105633783`*^9, 3.484034949753427*^9}, {
  3.484035120154709*^9, 3.484035178048407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"R", ",", "n", ",", "x", ",", "U", ",", "p"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", "[", "n", "]"}], "=", 
    RowBox[{"RHSolverTop", "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "0."}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{"R", "[", "n", "]"}], "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "x"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], " ", 
    RowBox[{
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{"U", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", "2", 
     "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.483704059473811*^9, 3.483704084796417*^9}, {
   3.4838686818317337`*^9, 3.4838686877682533`*^9}, {3.4838688055309353`*^9, 
   3.483868807893404*^9}, {3.48394593885419*^9, 3.483945939253743*^9}, {
   3.483945970689331*^9, 3.483945972508366*^9}, {3.483946530550324*^9, 
   3.483946532556075*^9}, 3.48394673502254*^9, {3.4839860129058733`*^9, 
   3.4839860335919247`*^9}, {3.484028855902452*^9, 3.484028861435276*^9}, {
   3.484034634440394*^9, 3.484034655074279*^9}, {3.484035147441305*^9, 
   3.484035151232192*^9}}],

Cell[TextData[{
 "We can evaluate at ",
 StyleBox["x",
  FontSlant->"Italic"],
 " = 0"
}], "Text",
 CellChangeTimes->{{3.4840349105633783`*^9, 3.484034949753427*^9}, {
  3.505466731234644*^9, 3.505466735234241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"50", ",", "0."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466747348028*^9, 3.5054667500831203`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.5006840381245092`"}], "+", 
  RowBox[{"0.11748452466946915`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505466943518579*^9, 3.505468277206233*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PainleveII", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], ",", "0."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466752325395*^9, 3.50546675986697*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.5006840381969555`"}], "+", 
  RowBox[{"0.1174845247765111`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505466945089212*^9, 3.505468278730398*^9}]
}, Open  ]],

Cell["\<\
Here's the solution (real part in blue and imaginary part in red) for the new \
choice of Stokes' multipliers\
\>", "Text",
 CellChangeTimes->{{3.4840349105633783`*^9, 3.484034949753427*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"ReImTablePlot", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"25", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3."}], ",", "3.", ",", ".01"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<A solution to Painlev\[EAcute] II\>\""}]}], 
    "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.484034876859997*^9, 3.4840349089170227`*^9}, {
  3.484034951668895*^9, 3.484035038167687*^9}, {3.4840352182174463`*^9, 
  3.484035269663251*^9}, {3.4875060973259068`*^9, 3.487506106643457*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
7fcdW7+koEcxlLoH34qQp6BHMeQ53IUPJqnoUQRHtcwVO1xT0aMI9vZp25H2
MBU9iuBYXo6VLD0VPQph1s//4mL1JehRCJEh9yxXW0nQoxA0i48p73hJ0KMA
Jrs4ufuFSdCjAIqSPYS2NRL0KIC3DyrnpoyUokc+eM+79VbXTooe+ZD9XbOG
f0WKHvlgZTr7dtQ3KXrkQ1Dl961zFVKwVcU/Dxb4OBucm5iG8c6FT0v6evlu
TgN9VXxzweCG2hb3O2kYzxzo2Ggd2ic5DWJV8cuGzYv72Z/U+IXxyoaQbwtW
x5j+gjOq+GRBSdjtAKnbL4xHJryZeGDzxwe/gFH1PxNsvcsD96b+wv5mQN+v
3gECYTq0qi6YDqLtbuf+m5mO/UmHJu2RNz/uSIc3qvH0C/b8eNi/4GE6jp9f
cEcxZWN5ajrO3zRo+tsrN0WQAaxqfEhhV4i7/PGMDBwPUohjLAzXb88AD5W/
BG4p1ld33s9A71To9DyZe1GcARNVvqnQ/2vwjR6ameiZAjd/9o3wmp4J5So/
MWy4NL2l1DUTvcTQxzev1wK/THioCqAIHIsnxD1IzEQPEYyTPGyTd3XHRRX/
JJhjNeSI9eQsjHci2MsVli82ZcFwVXwTIElz7DSdW1kYzzhwbx/pvPdnFlxR
xe8nkN7DRJWKLIxXLIxo7+vnPiEb9FXx+QHFw4tKtZyzMR7f4KTXluKw69lw
VNX/GMjX9xMd+Z6N/Y0G/8YvMqe2bKhX9S8S/lv437ON43OwPyz8U1m+8OyG
HGBV7f8KpnxdK+m1HGzvZ7hyL2DE4u/d31e17wNk/+3vVNuWA2qq9oTDPsuJ
vlHGufj334PsYMf2eOdcyFf9vRDY77/3it7NXLx+MEyY2Rl5Nq77+6rrvQDj
TVOTF3TR3/tDzJHpPgun5sFR1ffvwwRSqri8NQ8/94F/A8zUDB/kgZrq/UnY
wJ58KZTmAX2CtSqo6uwDfj6o9VN9Tgp3Pp1cNjyf/p5YPJtUbW/e/blqg7tP
/lgWnsWzpZ/7E4MfsglZe/KB5dpHbE7sHVp+OZ+2nzw0jCkaF9j9e9WGFkIs
1YITn8fS378nD032jXcuyafxIQEWfe3X8gpo/Mi5055RF4cV0PiSb67FyQKL
Ahp/orO4XRljV0B9yON3c6RxHgXUjyRtXV80+FYB9SVmKUu/hYcWUH/ica9w
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
V4vZ+nZ2/A82EP4POC8/Zg==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw92WdYE0sXAGBIIVgQUVSqyrWgqNjFgpxVFDv2Cyoi9i4o9msBe+NKs3MB
wYKIFAEBIcwCgST0KoiCdFEQ6b18MXv2yw998iw7mTnv7MyZPXq7bDfs5Sgo
KGyR/fPnf+ajTLfGC57MsBCS2vWRI6/XCGilVmfTgd9iSL6v3cL++QL6h1r6
yO97YkhCywSr+/EC2r/qn6iM6mgSuKz0vHqggA6zzffOPhRNnj758xHQC0xt
rLt/fiTXa/40KKA3iANPbTn4kRyXteZrJ6Anhlrvaq2MIrLGZC0KaMVNgx5+
s4kiy/80t0xAv+86cVqvMJLMlH8EtGndlW2S9ZFklLxBAc3RCHcqEUeQ/vIO
CuicuL+XnDaOIK1/uteiRH8+2ub7IOgDkTdXqkTrt/6MWan3gaSl/vko0S6d
pbefu4STP6NdH6lEv3/6uO6lQjh58We4vkp0u+2zD7uPhRF59+4r0aZv/nKv
Kgwl//xp7rwSXTuGO2q+WSjZJ//Irq8KzzkY/J5skDeoRIdfPT7EUfM9kQ93
oRLtk7dz5F3HEDJRPmAletXNah236mAib05diR5u1qX+wjyYMB6y/naPLXLZ
H4QefLqt0LJCY1ogevDpJI7YubE1gMi7F8+nI7sMm2bGvEUPPu32Zf2Xhsv+
6MGnOb738qnFb9CDT1e1us+azfVDDz7NHWLRUxb/Cj34dEBkU+d2x5fowad9
Wr+GRZm8QA8+/X7/4OP9unzQg09Pjz86y+bDc/Tg01ssJiRk2nmjB4+2OfVi
8ZdNnujBo4+d6RvvmvQMPXh0SDgXfs55gh48+mLiES3Bq4fowaPVHxakD1B3
Rw8efUTjQ4eWowt68Oh3hoHX3hU6oQeP7q+2NDIu5BZ68Gi1g1K18JtX0YNH
Oyn+POIadQE9eHSTwuaKi7tOoAeP3rrbt9FymA168Og7Z/zVdA4vBsaDS/fU
l/13aOVBYDy49FxNhfA13aeB8eDShy4vvaD5xgEYDy7dUay3f07OdWA8uPQy
l1L9xd13gPHg0tdut3QpDHEG+XDtuLT93uAvui9dgfHg0smbnjdtNXoAjAeX
1lVMznomeQSMB5f+UiEyF1k+BcaDS4eFl92J/O4BjAeXHjd6XY3VKS9gPDj0
1WKfASkKz4Hx4NCjRvicH2vmA4wHh36tMXXTuzu+wHhwaPvZUjPL9BfAeHDo
y+bPdDTUXgHjwaF/t8z/+G3Da2A8OLR78XFdHzc/YDw49KctQ6w25LwBxoND
L3mS71Ou9hZM5B3k0M67NsxasTYAGA8O/fNz2f7Td98B4yG7v5f4WScFAuPB
oYuPqZxq6QtCD0X6ftdlwxEeweihSPOjlR0vGYWghyJdsuivuwbZIeghuz4h
ZsqwI+/RQ5Euctq3fi4/FD0UadOcgVVO/4WihyL9timyTHV2GHoo0rP9dyyN
TAlDD0Xa+HL4EMed4eihSOd/Hvj3ntZw9FCkcw0W6lnd+YAeinTAUrd7u3Qj
0EOBTmhI/nA8KAI9FGi/WLXEq1QkeijQDbpDy10zI9FDgY6KVzF9siMKPRTo
cKpR1+VXFHoo0MvL7oSePP8RPRTo3BcBK02UotFDgb6x8vj0audo9FCgQw6c
Fx7RikEPBbr374Wrk3xi0EOBTi62MP09UYgeCjTc+DW4LEiIHrL716hMfjIr
FuPfR+xDRg1TjYzFePcRQ2L1t8l8gvHtI1rKK6/pRROMZx+5oj3aa4sujfHr
I1/4F0acsaIxXrK/X3j/RtVTGuPTS8bmtq15WUBjPHrJRqo2L3hYHI6/l3SY
3XdS2hCH4+0lZt/Nanyd4oB5/nvJveHDj96QxOF4eon9mI7HbznxIO9eTQ/x
clvSM9g4HudPD1mwRml62Ml4kE+XJz2EV3Qg1zUgHpj1s4dsf63h4l8ej/Oh
hxjn+Gt1aCagfw9J+cifemFtAnp3kw2ByQ+nX0tA327yLIceNyIyAT27yfZa
KtqgJgH9usnItOeLD+mK0Kub+K1+GZpjLkKfbmJwqnLI3ssi9OgmF2MXndAJ
EqFHF+Fprm5oKxKhRxcZ7hIubBmQiB5dZOSGj0PV5yWiRxcpyLxnsn5vInp0
kQ8V5PFb50T06CKLHgfd04tORI9OwjlX7R5SkYgenaRiqpPxVpUk9OgkEyZ/
HKU1Owk9Oglt8L3m97Yk9Ogkp/eZ2RQ6JqFHJ7lkrGde8CoJPTrIraEznlQn
J6FHB7HY1GXUvy4JPTqIv6n2LOPBYvToIDH3PfwvThejRweJ2mOamrZejB4d
xPXrp6JJx8Xo0U7anu+b++i+GD3ayVnPeytU34nRo530u+/v5iYVo0c7mbZt
TOCYSjF6tJNVg5yXkj4xerSTjI312vs0JejRTiRbPilrzJCgRxuR9jl15K6Q
oEcbaZgHDR42EvRoI3puA/rZnZagRxuZGz3ezvyuBD3aSN3gn4fneknQo420
aJZbGL6XoEcrOVv09eU0kQQ9WskyzYoiyJOgRytJXmnmaVUpQY9WMuL23Wc3
myXo0Ur4Uw97x3Gk6NFKNlpEOw0YLEWPFrJ+6rat+3Sk6NFCosZrDM3Rl6JH
C8lT+rdwwwwprp8t5Ey34o+qBVL0aCF/+86957xEih4tpHfMMv31q6Xo0Ux0
z+yYYbBRih7NpKr80XzdLVL0aCYlme9KJ1lL0aOZhCqKiix2SdGjmYRZ6XT4
7JWiRzPp/TtNTfWAFD2ayc7x9pqeB6Xo0UR2FH5V33BIih5NZKFDuPYU2XfG
o4n8OjXRcrrs7xmPJpIx5JbSzv1S9JB9Tys9GbtHih5N5HE/X87qnVL0aCTT
QyaNHrhdih6NZErmbnNFSyl6NJK7G9aMNNwgRY9GMl7TbdqDVVL0aCRJzsNm
z1vCejSS2I6TP3WMWY8G0vTvE13TmaxHAxkTM+9N4ETWo4E0u1if2jWK9Wgg
5/yqTu9UZz0ayDwvQVCgMuvRQGoOpRus6ZagRz1Z5u3JoX5L0KOerKoJ3nKn
VIIe9WR3mfP2qTkS9JBd3/106QzZ/GM86kmg3+kND8Mk6FFPni19kmb9gn0+
6snimULl+24SCJDH/zfRHLlru8EVdv7/Jpd1Vk6eZScBZXl8fxP1zravQdvZ
+V1HoinDIu+VEjggj18dydG39e5vJMF41ZFHzhe96v+SgEgen1/k4JxvFn8P
kmA8fhEjI5tV0CGG0fLx/yKWGo/7AsvFIB9uai3JPmjX45cmhgvyBmvJ44nv
MqdFiEEengm1ZIrSGcFKbzEUyOdTDXnm9X16+y0xXGOAyIDyR6UmsvVmlny+
1JCC/6a90dsihhL5/PhJRuzs0X5BicFZDviT7MhwTJPqi8FY7v+TqB9RW/9w
kBjznR8kUPHQPJWWJHgs9/1BLoat05jxJQk9f5DtudMvKcclQbO8g9Uk4nJC
h5tsPWW8qkmy/tsRBXeTYJ08gNXEgz9+V4FdEnpUk7lOYTaPNyehx3fiXiN5
pD0/CT2+k+NPz97aOzIJPb6TF0OnB5/jJKFHFRG8s721rSoR9sg9qki774Ub
g5IT0aOKiKwnaj98l4gelcT1h8v7Ftn+wnhUEvP3paHTTiaiRyWJvqHtuNIi
ET0qCORXnDabn4geFeRfk021+rqJ6FFBlNcmzGjsE6FHOTF46fvAr0yEHuUk
wNhiq3miCD3KyTTBQLrqtQg9yshp+mnfyTsi9CgjRj0HVnUfEaFHGfG2Nc+4
vFaEHqWk2upiMGeGCD1KiZfJMZVb6iL0KCUFt9N7hrQloEcJmfnghOurz+x+
X0KWPV6ZtzQmAT1KiEbMVmmTZwJ6lBC7OR8OhTomgKU8/t/I2f0XA2/uScB4
F5OMxuIr9ssSYLA8vsXkRop2xjmDBIxnEbk36V/7/1QSQCKP31eicyx0RWl9
PMbrKwlOnDt2eW483JLH5wsRi/pn5EbEYzwKicP7/ap3nsUDJR9/IQnxafY9
dDkex/uZjFuZt+Tc7nholzdYQKQ3k3wjl8XjeAqIy7MFRyZNjodg+XzKJ3d5
l0xzB8fj/MknJ/syJOEtcfj8fiIHvF0eZBfGAS2fH3lks+OBhVPoOJwPeeST
wiFzycs4OCv3zyUhA5evf3U3Dr1zSJ69g1R6PA6myX1zyLOYf2fPtoxDz2wi
ujBatcYkDqrlflnkw7TVKb/GxaFXFjFySS4ElTjwlgcwkxzdN8O/vJlGj0wy
//Mcny9faQiWxz+dLDOt1jdIpDHeaeSQQ5tH1jsaRsvjm0qECV07ch/SGM9k
Imj5mDrLgQZnefyk5PPTk8YtB2mMl4SkW0xV0thEw2B5fMSkSrHfZS8TGuOR
SM5Z3e50mkiDg3z8ImJzqS25Up3G8SaQvrqQRW9kaXq9fHxx5IDK0B3hnwmO
hyYalEly+3sCtLz/saR7/a19ek4E+xtD1FbEfJp5QPb38v5FkRjrp2TWEgIK
8v5EEIfZbyUT9Aj+fhgp3K/5n3pfLJTIfy+EZPznUttdFIvtB5JFVhOPVAlj
wUHe3huyMHF1fp5nLN7/gthfCa3PcJB9l/+9J3mmtf3q593sdXei3ey+u21Z
LCjIv18j4817bQ2nxLLnD4UFF/1crw6VfR8mvw7hwknxXZ1C9n5obU7neJTL
zivyDc4TbsR+2H8wjb3+AgonjlQ/GCkEmukfrHB9Yuz9Qsj2H3y4eyaou8ru
l29oIaDqEzEj2YG9PwxED6eniu2EbHygTbD4wpBdQjZ+kPzWryxok5CNLxQ7
90a+XM62HwsN0WtyOxYKWR/QXREx/v0sIesHAaIJcbmThawvHL2kl7d/PPv7
IujxvfXhuJ6QnR9Q1Ole1K4rZOcP+OmJq7k6QnZ+ge+qNs8n2mz/pEDOn2mg
ZddxfkL7ilW9DqNkv8fMX0g9fHpI6RghO7+BVtsdUD2R7X86CK7vvOQ1nT0P
ZgJZtfi4ygIh+DHPD1xePfD1fDMh+3zBjLOZF6duZMeXBfOferg27xSyzyfw
+t0XuZ4Qwlzm+YV9Kipzh14Xss83JDXqbr38hB1/LkTn1JaXyM6juD7AWAv7
4kUSNh558Cx87auAMiG7voDtDcnvSX1Cdv2BgC6FlGTdWHZ9gsKdNn7uJrHs
+gUfKqduf7Azll3f4Man4xM+34hl1z/Yl9UScSQwll0fYcY/76ZsL4hl108w
C1o6LpJH2PUVHqxU/nh3JmHXX/jGHeBUtYdAJrM+w0PV4JT8x4Rdv6H/84tz
bDMIaDDrO8wsnOBuzWPPv8VwuK3L/OBfNNgw+wM8rRjqVbKIXa9KICSvPTht
Fw2bmP0FLgzIGjT/Os3uP9CySO3l1Dc0jq8E+Kp24sh0mt2/wPLh6DklLTR4
MPsbcFZsGRMyMo7d/2BL3KR5RivicPxlsHpyqNelU+x6WwYrtLy47r5x7P4K
f3H1/ruWE8fuv2C4xNTImh/P7s/woyLYaOq8eHb/hjkKra+UbNn9qgJmr1k0
r/lVPLv/w9TfQRbKpfFsfgDXjk4x2KSbwOYPYO3Q+PzHNnY/rIQPCwKvffFI
YPMPMBm67+zCkgQ2P4GXc7UGjx0vwvlSBYYtxp9fHBOx+Q1wCwYe+hQlgoFM
/gPOP8vsMgXs+fk7ZLvcFL21TMT59B0OWvucuhKQyOZX4JW+tdSWm4Qe1aDb
uCjRefv/8zNo6fTcxI1OQo9qeKi1YO13bfY8+wPmuqVoWjuI0eMHrAvXLrhT
/f/8ECrdtG+7bpKgx084+LxrrIcsH8f8EkaNcRRmzpWy+ScsvpvgvS1Eyuan
sMPy5qVDhsls/gplenbOU4KT2fwWUgeuSMyfk8Lmv7BM5c1vz/gUNj8GzjRo
j96YyubPMDVKS/3wz1Q2v4ZX61b11dxIY/NvaJCYGF+ZmM7m51Blv9ryVHY6
m7+D67Ufs9WuZLD5PZjY3TTcqJPJ5v9wx2nmxKX/ZKLHb+gIbOkcUJzJnh+g
uj6nOX9JFnr8BqN1Hx2+BmWx5w+o9l1svW5UNo6nHvyXVlUcdctGn3rYd23c
avuBOTi+erCMozp97uSw5x9QSJ9WaDooF8dbD30C76jnj3LRrx5MhscEqejn
4fgboMgmy6k4Jo89f8F8iXDr8S2f2PMZHJhwoHBizydcXxpAZ9e/f9n75WN8
GuDp6T0m9LYC9G6AnYfeld0b8Zk9H8LMTINZ1l8/Y77aCFXfzvsk+Bdi/Boh
T0w+W1z9gvOhEW6e/5AWt+8rez6FtJS5peGbi3B+NILi1ZtT2tYVY3ybwNtj
/C/LLd9wvjTByLrlghKjEvZ8DHt+pJ1zTS7B+dMEuTH2ISv3lmL8m4BrmmH5
TLkM51MTHNikP3xseBl7Pgf/4VblrofL0aMZ3lu8cXo5uQI9mmHwxum7JnVU
oEczpLh9GijIrmTfD4CHhVvQNNlzyng0w+oBM+ZFBnxHj2aImjmAKwmuRo8W
eH1oduzrxB/s+wnod3V7FKn9yb6/AFGN8W0P/Vp83lpg0aBVI5vO/EKPFlgc
Fr3h5bc69GiBmx96L+6eVs++PwETi8WJWb316NEKO82Eo3d9bUCPVlCPibnx
T3IjerTC7dOve/2Tm9j3N1C5/HzA6+Jm9GgFJ4HpWAvlVvRog4TRIa1ZK9rQ
ow1+uhyxOvCynX1/BN7XL+e90u1EjzbYEFF+fmt4F3q0wcA3iV7utj3o0QZ7
phjOfLe2j31/BZv/SrvzPECBYjzawSuv47mORJFiPNpBXefRK4tuDsV4tEOf
Flw6t4pH4fszGLZ8xPywCD7FeLRDypG3rjNMBRTj0Q428Xvdu38rU4xHB6w2
60zJJP0pfH8Hd/5yqakLHUgxHh2g+VqvIDN1EMV4dEDqoujM79cGU4xHB4y8
YZi4JUyNYjw6YLu/OOlx4xAK3y+CWb8I/anG6hTj0QnLStcuGnpvGMV4dILH
0dLL9l+GU4xHJ2zO9vN9oadB4ftNGJqkW7tskybFeHQC9c1zq3C/FsV4dIFl
rfBt7VptivHoggNtqyOsFHUofL8KDWcfHztzQodiPLqgTKxYS3voUIxHF4QU
jbYTXtShGI8uGPpk16U1I3QofL8LC4IWcg7YaqNHN/x79n3Okvta6NENNv0M
Gydf0USPblDdHGs3a5MGenTDg+6vk7TURqBHN4TUV8WdSBiGHt3Q+4lna3BS
HT16oFxfc/lmg6Ho0QPa2YNPzq9RQ48eCB0feuPax8Ho0QPPXD07BLNV0aMH
Qh7m/KrRUEGPHtAt+97PSW8AevRCQc4CbXfzfujRC7+vzX9Q4ClAj14YyV8y
23+wEnr0wqaP7a+VfXjo0QtTn/9tlLqOix69MPP1JOd4LQ569MHMVH3r+B4F
9OiD2//80rT73cfWH0DlWJ3qNpVefD764FbEqkwPWRwZjz7454tkdY7MnfHo
g8OvblPl0MGePyitkcL+reVtbH2ECr3XM+20TysYMPUT6rX9vNEDzrWw9RXK
zFHV3X1vM1t/oWwLL/8ct6+Jrc9Q+cWnXBTPNeL6pkANfHPC392jAdcHBcpp
gGfziYx6tv5DLZ23nL9xcD1bH6Ku2xCfYTF1kM7Uj6jxl26paNr+gjKmvkR9
dl64R2xUy9afqP/69LfsVa9h61OUWWvLIxvuTxjJ1K+oews43qu4P3B9UaQu
KW5TKRxSzda/qFy//KVF076z9TFq0jtDh0VWVWz9jLqw96P2APdKuMHU16hF
PbupTfkVbP2N2vK7OXbluAq2PkcpLM8yMLxYztbvqIrKnPHmxex+oUgdvhv0
TXl5GVv/oxZVZQdKo0rZ+iAV4be1VDCzlK0fUi152l5LQ0vQg0PZw+K6QfNL
2PojpRsm9W5w+sbWJ6k7Qx/XUqHFbP2SsgisVd1cXoQeHCrhgHXPNd0i9OBQ
re3uI2ft/MrWR6lmfc+lWe++sPVTao6/RmQe5wt6cCj3uivrRTsK0YND2UxZ
8XGC6DNbn6Wo+uMhD6d+Zuu3VIQVb/+b5wXowaVGPT1bydEqQA8uZesTcmvV
43y2PkzttJzoOF0nn60fU8GOOrsOvGTzCy7lVvoiym/mJ/TgUlYuqSFBSXls
fZry2UqiTKzz2Po1pe65eY52Zy5b36bUnZbPG/Q0Fz241GKH4yYVC3PZ+jg1
x/hG3ZHKHPTgUZkm2VXnnXPQgycb37nr5SY56MGjHOu/RV2qz0YPHtX/R3rB
+JfZ6MGjrlgPPRlplY0ePGrD+Hmzh4zIRg8eJbDVj1bPzUIPWXt5Vud93LLQ
g0cNL3P18tqchR48SuzyoLlBMws9eFSc+WixQ0kmevAodd7DrFlvMtGDR9FZ
R8e122eiB5/y3T19xAcqEz34lLHqr0nbVDPRg0+1Hvyh6k8y0INP9VUkCsfu
yUAPPmWockrKH5iBHnzqa4q+g2FEOnrwqafJ1zsd96ajB59yBxGvcng6evCp
WV77lE1S0tCDT6XfvNN28koaevApXqHPPHvjNPTgU5PX3XoypiMVPZSoaB3J
rBORqeihRO0Zon1k9flU9FCi+gU35HqbpKKHEtWqzp28g5+KHkqU+bH05WfT
U9BDiSr/1KdW/ITN/5Wo2kb/E1f3p6CHErU73nydlVEKesiuL37kuL1fCnoo
UTscsxMvFCWjhxLVE6wqDA5NRg8lCsi3kvq7yeihRHHDgi7O3peMHgIqpz48
4MziZPQQULmjj5iHjE5GDwE1w8KZX6SQjB4CSvOa34zWMraeI6Cy+Lz69iS2
PiKgnocYDSoLkKKHgLpoqqYW5C5FDwEVHtA32foSWy8SUK+W1S2pO8jWX2T3
n3SptraQooeAev1mzMZgMyl6CKht110PlRux9ShlSlylTToMpPA/S8Gh4Q==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"A solution to Painlev\[EAcute] II\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.484034898273226*^9, {3.484034974039329*^9, 3.484035051858007*^9}, {
   3.484035208984539*^9, 3.4840352659947443`*^9}, 3.4840354149083433`*^9, 
   3.484037246132744*^9, 3.484316154687765*^9, {3.487506095116729*^9, 
   3.4875061230866823`*^9}, 3.494228452338524*^9, 3.505467037312683*^9, 
   3.50546836068113*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Painleve III", "Section",
 CellChangeTimes->{{3.483792607173275*^9, 3.483792609054174*^9}, {
  3.483964015241271*^9, 3.483964030943122*^9}}],

Cell[TextData[{
 "The Painlev\[EAcute] III differential equation is\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "''"}], " ", "=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"u", "'"}], ")"}], "2"], "u"], "-", 
     FractionBox[
      RowBox[{"u", "'"}], "x"], "+", 
     RowBox[{
      FractionBox["4", "x"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalTheta]", "0"], 
         SuperscriptBox["u", "2"]}], "+", "1", "-", 
        SubscriptBox["\[CapitalTheta]", "\[Infinity]"]}], ")"}]}], " ", "+", 
     " ", 
     RowBox[{"4", " ", 
      SuperscriptBox["u", "3"]}], "-", 
     FractionBox["4", "u"]}]}], TraditionalForm]]],
 "\n\nThe following example is based on an example in [Olver 2010] \
constructed from the RH problem in [Fokas et al. 2006]. "
}], "Text",
 CellChangeTimes->{{3.48395373459581*^9, 3.483953799439085*^9}, {
   3.4839640339149103`*^9, 3.4839640342561493`*^9}, {3.487485930076388*^9, 
   3.4874859593117313`*^9}, {3.487488611519506*^9, 3.487488613117949*^9}, {
   3.487489744965104*^9, 3.487489758318638*^9}, {3.487489905005719*^9, 
   3.487490018580587*^9}, {3.487491238181477*^9, 3.487491238695202*^9}, 
   3.48750408598372*^9, {3.4875042077297907`*^9, 3.487504220230197*^9}}],

Cell[CellGroupData[{

Cell["Setting up the jump curves", "Subsection",
 CellChangeTimes->{{3.48750409352287*^9, 3.487504097130541*^9}}],

Cell[TextData[{
 "We choose an arbitrary choice of Stokes' multipliers, and the constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "\[Infinity]"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "0"], TraditionalForm]]],
 ".  (In case it seems odd that we have 3 degrees of freedom where the ODE \
with initial conditions only has 2 degrees of freedom, note that there is an \
equivalency class for the Stokes' multipliers.)"
}], "Text",
 CellChangeTimes->{3.487504102477817*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalTheta]\[Infinity]", "=", 
   RowBox[{"1", "+", 
    RowBox[{"123", "/", "1000"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTheta]0", "=", 
   RowBox[{"3", "+", 
    RowBox[{"43", "/", "100"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"1", ",", "0"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"2", ",", "\[Infinity]"}], "]"}], "=", "3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"1", ",", "\[Infinity]"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "\[Infinity]"}], "]"}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", "\[CapitalTheta]0"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "0"}], "]"}], 
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "0"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "\[Pi]", " ", "\[CapitalTheta]0"}], 
           "]"}]}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", "\[CapitalTheta]\[Infinity]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "\[Infinity]"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]\[Infinity]"}], 
           "]"}]}]}]}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], "]"}]}], "//", 
    "First"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.483793009602326*^9, 3.4837930760202723`*^9}, {
   3.483793106073081*^9, 3.4837932730878143`*^9}, {3.4837934926722727`*^9, 
   3.483793507619803*^9}, {3.48379397995684*^9, 3.4837939804602747`*^9}, {
   3.483794014743149*^9, 3.483794042638172*^9}, {3.4837940917858343`*^9, 
   3.483794102845787*^9}, {3.483794136540511*^9, 3.4837942020504093`*^9}, {
   3.4837942322848663`*^9, 3.483794234728747*^9}, {3.483794280304882*^9, 
   3.483794345637453*^9}, {3.4837943800446863`*^9, 3.4837944654101458`*^9}, {
   3.483794517714616*^9, 3.483794571270279*^9}, {3.483795861714726*^9, 
   3.483795891983179*^9}, {3.483860879483436*^9, 3.483860895420171*^9}, {
   3.483953805960238*^9, 3.483953819116086*^9}, {3.483960307806177*^9, 
   3.483960616695137*^9}, {3.483964088628352*^9, 3.4839643624376183`*^9}, {
   3.4839645133113003`*^9, 3.4839645690534153`*^9}, {3.483964631784286*^9, 
   3.4839646457322283`*^9}, {3.483964699093856*^9, 3.483964766546376*^9}, {
   3.483965127481391*^9, 3.4839651356533203`*^9}, {3.483966044205883*^9, 
   3.483966061844757*^9}, {3.483969416605899*^9, 3.4839694335518703`*^9}, {
   3.4857612090469503`*^9, 3.485761209973154*^9}, {3.485761293676112*^9, 
   3.4857612943000793`*^9}, {3.485847802633506*^9, 3.485847825487997*^9}, {
   3.48611579317172*^9, 3.486115793851317*^9}, {3.486115851712677*^9, 
   3.4861158519287558`*^9}, 3.486196830804933*^9, 3.486202217689258*^9, {
   3.486202703228278*^9, 3.48620272219947*^9}, {3.486202754708049*^9, 
   3.486202827321539*^9}, {3.4862066073228407`*^9, 3.486206608667966*^9}, {
   3.48657131487991*^9, 3.486571314976543*^9}, {3.486571345380213*^9, 
   3.486571345557633*^9}, {3.487490149889411*^9, 3.4874901509019423`*^9}}],

Cell["\<\
We require a matrix EE, which is similar to an eigenvalue matrix.  We \
determine this matrix by solving a system of equations, where we impose that \
the bottom row of EE is (1,1) (which may break down for other choices of \
Stokes multipliers and \[CapitalTheta] constants).\
\>", "Text",
 CellChangeTimes->{{3.48748555370363*^9, 3.48748561178929*^9}, {
  3.4874856503659687`*^9, 3.487485667347102*^9}, {3.487485828221442*^9, 
  3.487485877483302*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EE", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"e1", "e2"},
        {"1", "1"}
       }], ")"}], "/.", 
     RowBox[{"First", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", GridBox[{
                {"e1", "e2"},
                {"1", "1"}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"1", "+", 
                  RowBox[{
                   RowBox[{"s", "[", 
                    RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
                   RowBox[{"s", "[", 
                    RowBox[{"2", ",", "\[Infinity]"}], "]"}]}]}], 
                 RowBox[{"s", "[", 
                  RowBox[{"1", ",", "\[Infinity]"}], "]"}]},
                {
                 RowBox[{"s", "[", 
                  RowBox[{"2", ",", "\[Infinity]"}], "]"}], "1"}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"Exp", "[", " ", 
                  RowBox[{
                  "I", " ", "\[Pi]", "\[NonBreakingSpace]", 
                   "\[CapitalTheta]\[Infinity]"}], "]"}], "0"},
                {"0", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", " ", "I"}], " ", "\[Pi]", 
                   "\[NonBreakingSpace]", "\[CapitalTheta]\[Infinity]"}], 
                  "]"}]}
               }], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"1", "+", 
                  RowBox[{
                   RowBox[{"s", "[", 
                    RowBox[{"1", ",", "0"}], "]"}], " ", 
                   RowBox[{"s", "[", 
                    RowBox[{"2", ",", "0"}], "]"}]}]}], 
                 RowBox[{"s", "[", 
                  RowBox[{"1", ",", "0"}], "]"}]},
                {
                 RowBox[{"s", "[", 
                  RowBox[{"2", ",", "0"}], "]"}], "1"}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", " ", "I"}], " ", "\[Pi]", 
                   "\[NonBreakingSpace]", "\[CapitalTheta]0"}], "]"}], "0"},
                {"0", 
                 RowBox[{"Exp", "[", " ", 
                  RowBox[{
                  "I", " ", "\[Pi]", "\[NonBreakingSpace]", 
                   "\[CapitalTheta]0"}], "]"}]}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {"e1", "e2"},
                {"1", "1"}
               }], ")"}]}]}], "\[IndentingNewLine]", "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"e1", ",", "e2"}], "}"}]}], "]"}], "]"}]}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.486202234687614*^9, 3.486202342451496*^9}, {
  3.4862023967873163`*^9, 3.48620240091542*^9}, {3.486202866912347*^9, 
  3.486202868623308*^9}, {3.486291620030908*^9, 3.4862916203410587`*^9}, {
  3.486292461571754*^9, 3.486292462076357*^9}, {3.487485676339238*^9, 
  3.4874858392143173`*^9}, {3.487485887461132*^9, 3.487485893012843*^9}}],

Cell["We can now construct the jump curve functions", "Text",
 CellChangeTimes->{{3.4874859114430933`*^9, 3.487485917480802*^9}, {
   3.487488639814295*^9, 3.487488695586135*^9}, 3.4875040499669647`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"I", " ", "x"}], "2"], 
      RowBox[{"(", 
       RowBox[{"z", "-", 
        RowBox[{"1", "/", "z"}]}], ")"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{"_", ",", 
       RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{"_", ",", 
       RowBox[{"_", "?", "ZeroQ"}]}], "]"}], ":=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"3", ",", "2"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}]}]}
        }], ")"}], ".", "EE", ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}]}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
        {"0", 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"4", ",", "0"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", "\[CapitalTheta]0", " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
        {"0", 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"1", ",", "4"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"s", "[", 
             RowBox[{"1", ",", "0"}], "]"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]}
        }], ")"}], ".", "EE", ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{" ", 
           RowBox[{
            RowBox[{"PowerBranch", "[", 
             RowBox[{"z", ",", 
              RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ",", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{"-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}]}]},
         {"0", 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}]}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", 
             ")"}]}]}]}
        }], ")"}], ".", 
      RowBox[{"Inverse", "[", "EE", "]"}], ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{" ", 
           RowBox[{
            RowBox[{"PowerBranch", "[", 
             RowBox[{"z", ",", 
              RowBox[{
               RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}],
              "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]0"}], "-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], "0"},
         {
          RowBox[{
           RowBox[{"-", 
            RowBox[{"s", "[", 
             RowBox[{"2", ",", "0"}], "]"}]}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
            "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", "\[Pi]", "\[NonBreakingSpace]", 
              "\[CapitalTheta]0"}], " ", "-", " ", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ",", "0"}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}], "-", 
             RowBox[{
             "I", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]0"}]}],
             "]"}]}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"3", ",", "4"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}]}]}], 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"s", "[", 
             RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], "  ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}], " "}]}]},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", 
             ")"}]}]}]}
        }], ")"}], ".", 
      RowBox[{"Inverse", "[", "EE", "]"}], ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"2", ",", "0"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "0"}], "]"}]}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"-", "\[CapitalTheta]0"}], ",", "0"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.485761492092494*^9, 3.485761503561166*^9}, {
   3.485761576281866*^9, 3.485761702013373*^9}, {3.4857618541789303`*^9, 
   3.485761866374658*^9}, {3.4857619239315*^9, 3.485761948506217*^9}, {
   3.485761986800727*^9, 3.4857620300110607`*^9}, {3.485762095872529*^9, 
   3.485762128074883*^9}, {3.485762248207458*^9, 3.485762321636221*^9}, {
   3.4857623664903917`*^9, 3.485762412855248*^9}, {3.485762469876068*^9, 
   3.4857625059072123`*^9}, {3.4857625522050858`*^9, 3.485762555583623*^9}, {
   3.485762612252857*^9, 3.4857626458195066`*^9}, {3.485762765657028*^9, 
   3.485762767676353*^9}, {3.485762824768569*^9, 3.485762844404627*^9}, {
   3.4857634905197783`*^9, 3.4857635630720043`*^9}, {3.4857638619167433`*^9, 
   3.485763872143361*^9}, {3.4857733676601667`*^9, 3.485773405269556*^9}, {
   3.4857734423597937`*^9, 3.485773492172261*^9}, {3.485774883151413*^9, 
   3.485774899144347*^9}, {3.485774955033268*^9, 3.485774972541909*^9}, {
   3.485775030670403*^9, 3.48577503607489*^9}, {3.485775075742154*^9, 
   3.485775086437928*^9}, {3.4857751224687777`*^9, 3.485775125704262*^9}, 
   3.485775177680366*^9, {3.485775428521337*^9, 3.485775453044413*^9}, {
   3.485775855748686*^9, 3.4857758754019747`*^9}, {3.485775994710734*^9, 
   3.485776011766486*^9}, {3.486115980739867*^9, 3.48611610511839*^9}, {
   3.486116136733714*^9, 3.4861162084057617`*^9}, {3.486116287674693*^9, 
   3.4861163258964376`*^9}, {3.486116491995373*^9, 3.486116879768591*^9}, 
   3.486117167970155*^9, {3.4861201612804403`*^9, 3.486120166520549*^9}, 
   3.486126311110031*^9, 3.4861264596121902`*^9, {3.486208457427186*^9, 
   3.486208703812707*^9}, {3.4862089376922293`*^9, 3.4862089413091803`*^9}, {
   3.486292479913151*^9, 3.4862924822400417`*^9}, {3.486292589101178*^9, 
   3.486292590420898*^9}, {3.487504057530204*^9, 3.487504060264277*^9}}],

Cell[TextData[{
 "We also need the derivative with respect to ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.487504063004365*^9, 3.487504070131681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Gx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]x", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{"z", "-", 
      RowBox[{"1", "/", "z"}]}], ")"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"ZeroMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "ZeroQ"}]}], "]"}], ":=", 
   RowBox[{"ZeroMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"3", ",", "2"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "  ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}], 
          " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "   ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], "  ", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
        RowBox[{"z", "^", 
         RowBox[{"(", 
          RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], " ", ")"}]}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
      {"0", 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"4", ",", "0"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], "  ", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "0"}], "]"}], " ", 
        RowBox[{"z", "^", 
         RowBox[{"(", "\[CapitalTheta]0", " ", ")"}]}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
      {"0", 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], 
         RowBox[{" ", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}]},
        {"0", 
         RowBox[{
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Theta]x", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], " ", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
            "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]0"}], "-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], "0"},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "0"}], "]"}]}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
           "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "I"}], " ", "\[Pi]", "\[NonBreakingSpace]", 
             "\[CapitalTheta]0"}], " ", "-", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ",", "0"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "-", 
            RowBox[{
            "I", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]0"}]}], 
           "]"}]}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "  ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
           "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]0"}], "-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], "0"},
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "0"}], "]"}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
           "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "I"}], " ", "\[Pi]", "\[NonBreakingSpace]", 
             "\[CapitalTheta]0"}], " ", "-", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ",", "0"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "-", 
            RowBox[{
            "I", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]0"}]}], 
           "]"}]}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], "  ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}], " "}]}]},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], "  ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}], " "}]}]},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {
       RowBox[{"2", " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], " ", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "0"}], "]"}], " ", 
        RowBox[{"PowerBranch", "[", 
         RowBox[{"z", ",", 
          RowBox[{"-", "\[CapitalTheta]0"}], ",", "0"}], "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {
       RowBox[{"2", " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], " ", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], " ", 
        RowBox[{"PowerBranch", "[", 
         RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}]}], "Input"],

Cell["\<\
We construct the list of Funs corresponding to the jump curve, with the \
number of points chosen adaptively to obtain an accuracy of tol.  Here we \
demonstrate that we needn't only use lines, but can also use arcs.\
\>", "Text",
 CellChangeTimes->{{3.487488706321376*^9, 3.4874887489195232`*^9}, {
  3.487488785068836*^9, 3.487488803533421*^9}, {3.487488883058488*^9, 
  3.487488884466282*^9}, {3.487491420112252*^9, 3.4874914206693077`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GG", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"x_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"3", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"4", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"3", " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"1", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"5", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"2", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "  ", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"3", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGx", "[", 
    RowBox[{"x_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"3", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
       ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"4", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"3", " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"1", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"5", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"2", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "  ", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"3", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
       ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.485761356731779*^9, 3.485761362182665*^9}, {
   3.4857614735555143`*^9, 3.485761480141344*^9}, {3.485761708850906*^9, 
   3.485761713826528*^9}, {3.485761785085877*^9, 3.485761816125149*^9}, {
   3.485761904982132*^9, 3.4857619342868423`*^9}, {3.4857619664481153`*^9, 
   3.48576196786344*^9}, {3.485762041572873*^9, 3.485762071696319*^9}, {
   3.485762129450769*^9, 3.485762130957165*^9}, {3.485762172372815*^9, 
   3.485762198726289*^9}, {3.485762329220106*^9, 3.4857623602123203`*^9}, {
   3.485762416017398*^9, 3.48576243680163*^9}, {3.4857625107372427`*^9, 
   3.4857625424675293`*^9}, {3.4857626539632463`*^9, 3.485762675231332*^9}, {
   3.485763241192918*^9, 3.4857634526164923`*^9}, {3.485763573564083*^9, 
   3.48576359698658*^9}, {3.485763726325634*^9, 3.485763848500395*^9}, {
   3.485773419255393*^9, 3.4857734306537867`*^9}, {3.485773496815475*^9, 
   3.485773519695578*^9}, {3.4857735604832478`*^9, 3.48577370485777*^9}, {
   3.485848811299396*^9, 3.485848821260841*^9}, {3.4858489072156076`*^9, 
   3.4858489117912817`*^9}, {3.4858489820700197`*^9, 
   3.4858490204802923`*^9}, {3.486116907741741*^9, 3.486116908032866*^9}, 
   3.4861174206268673`*^9, {3.486117491108941*^9, 3.4861175028493147`*^9}, {
   3.486121551304685*^9, 3.486121577528928*^9}, {3.48620871258302*^9, 
   3.486208729769105*^9}, {3.48620881465942*^9, 3.4862088291261806`*^9}, {
   3.48620886389688*^9, 3.4862088745158787`*^9}, {3.487488751656217*^9, 
   3.4874887707325363`*^9}}],

Cell["\<\
For speed, we want to reuse the RHSolver for multiple values of x.  This is \
only possible if we ensure that the lengths do not depend on x.  Therefore we \
fix the lengths of each curve.  Since we will evaluate the solution in the \
interval (3,5), we take the maximum of these two points as our lengths.\
\>", "Text",
 CellChangeTimes->{{3.4874888329891233`*^9, 3.487488975918322*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tol", "=", 
      RowBox[{"10.", "^", 
       RowBox[{"(", 
        RowBox[{"-", "8"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"lngs", "=", 
     RowBox[{"Max", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "/@", 
           RowBox[{"GGx", "[", 
            RowBox[{"5.", ",", "tol"}], "]"}]}], ",", 
          RowBox[{"Length", "/@", 
           RowBox[{"GGx", "[", 
            RowBox[{"3.", ",", "tol"}], "]"}]}]}], "}"}], "//", "Thread"}], 
       ")"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.486121616063117*^9, 3.486121616141993*^9}, {
   3.486121648407321*^9, 3.486121683149433*^9}, {3.486193616172421*^9, 
   3.486193631707151*^9}, {3.486202954795515*^9, 3.486202955081759*^9}, {
   3.4862040036033382`*^9, 3.486204003879485*^9}, {3.486206413822317*^9, 
   3.486206429434413*^9}, {3.486206534072114*^9, 3.486206553070509*^9}, {
   3.486208967643529*^9, 3.486208969545773*^9}, {3.486209063054384*^9, 
   3.4862090642937803`*^9}, 3.486292581718381*^9, {3.486292643550961*^9, 
   3.486292643963415*^9}, {3.487488982379719*^9, 3.487488999024117*^9}, 
   3.4874891577008343`*^9}],

Cell["\<\
We can now construct jump curves with the fixed number of points.\
\>", "Text",
 CellChangeTimes->{{3.487489004157441*^9, 3.487489020028335*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GG", "[", "x_", "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"3", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"4", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"3", " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"1", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"5", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"2", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], "  ", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"3", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "3"}], " ", "I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "3"}], " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GGx", "[", "x_", "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"3", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"4", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"3", " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"1", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"5", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"2", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], "  ", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"3", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "3"}], " ", "I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "3"}], " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4861217092181377`*^9, 3.486121740424041*^9}, {
  3.486209003145423*^9, 3.486209013941434*^9}, {3.4875031330833273`*^9, 
  3.487503138489785*^9}}],

Cell["The jump curve is defined over the following domain:", "Text",
 CellChangeTimes->{{3.487490123744315*^9, 3.487490133175757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DomainPlot", "[", 
  RowBox[{
   RowBox[{"GG", "[", "1.", "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.485849342462214*^9, 3.485849353189301*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.7071067811865476, 0.7071067811865475}], 
    PointBox[{0.7071067811865476, -0.7071067811865475}], 
    ArrowBox[{{0.7071774883290145, -0.7070360669730128}, {
     0.7071067811865476, -0.7071067811865475}}], 
    CircleBox[{0, 0}, 1., {-0.7853981633974483, 0.7853981633974483}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      0.7071067811865475, 0.7071067811865475}]], 
    ArrowBox[NCache[{{3 2^Rational[-1, 2], 3 2^Rational[-1, 2]}, {
       2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{2.1213203435596424`, 
      2.1213203435596424`}, {0.7071067811865475, 0.7071067811865475}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[
     NCache[{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {-0.7071067811865475, 
      0.7071067811865475}]], PointBox[{0, 0}], 
    ArrowBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {0, 
       0}}, {{-0.7071067811865475, 0.7071067811865475}, {0, 0}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.7071067811865475, -0.7071067811865476}], 
    PointBox[{-0.7071067811865475, 0.7071067811865476}], 
    ArrowBox[{{-0.7071774883290145, 0.7070360669730127}, {-0.7071067811865475,
      0.7071067811865476}}], 
    CircleBox[{0, 0}, 1., {2.356194490192345, 3.9269908169872414`}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[
     NCache[{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      0.7071067811865475, -0.7071067811865475}]], PointBox[{0, 0}], 
    ArrowBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {0, 0}}, {{
       0.7071067811865475, -0.7071067811865475}, {0, 0}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.7071067811865475, -0.7071067811865476}], 
    PointBox[{0.7071067811865476, -0.7071067811865475}], 
    ArrowBox[{{0.7070360669730129, -0.7071774883290143}, {
     0.7071067811865476, -0.7071067811865475}}], 
    CircleBox[{0, 0}, 1., {-2.356194490192345, -0.7853981633974483}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.7071067811865476, 0.7071067811865475}], 
    PointBox[{-0.7071067811865475, 0.7071067811865476}], 
    ArrowBox[{{-0.7070360669730126, 0.7071774883290147}, {-0.7071067811865475,
      0.7071067811865476}}], 
    CircleBox[{0, 0}, 1., {0.7853981633974483, 2.356194490192345}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[NCache[{-2^Rational[-1, 2], -2^
        Rational[-1, 2]}, {-0.7071067811865475, -0.7071067811865475}]], 
    ArrowBox[NCache[{{(-3) 2^Rational[-1, 2], (-3) 
        2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
         Rational[-1, 
           2]}}, {{-2.1213203435596424`, -2.1213203435596424`}, \
{-0.7071067811865475, -0.7071067811865475}}]]}},
  Axes->False,
  ImageSize->{Automatic, 458.42560000000003`},
  PlotRange->All]], "Output",
 CellChangeTimes->{{3.4858493448643227`*^9, 3.485849353650868*^9}, 
   3.4874901617965612`*^9, 3.4874923761887007`*^9, 3.4875061256365223`*^9, 
   3.4942284550163383`*^9, 3.505467041286702*^9, 3.50546836317237*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Constructing the solution", "Subsection",
 CellChangeTimes->{{3.487504115290043*^9, 3.487504133985238*^9}}],

Cell["\<\
R is the RHSolver, which we construct once for one choice of x (arbitrarily, \
x = 3).  U is then the solution.\
\>", "Text",
 CellChangeTimes->{{3.487489031974717*^9, 3.487489073538479*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"RHSolver", "[", 
    RowBox[{"GG", "[", "3.", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{"GG", "[", "x", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.486121743149794*^9, 3.48612177831146*^9}, 
   3.486209190568563*^9, {3.487492380879369*^9, 3.487492381145381*^9}}],

Cell["\<\
To evaluate the derivative of U (with respect to x), we need the minus values \
of \[CapitalPhi] = I + C U\
\>", "Text",
 CellChangeTimes->{{3.4874896529471416`*^9, 3.487489680266054*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cm", "=", 
   RowBox[{"CauchyOperator", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "R"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPhi]m", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"\[CapitalPhi]m", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cm", "[", 
     RowBox[{"U", "[", "x", "]"}], "]"}], "//", "AddIdentityMatrix"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ux", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"Ux", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Ux", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{
      RowBox[{"GG", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalPhi]m", "[", "x", "]"}], "~", "FunListDot", "~", 
       RowBox[{"GGx", "[", "x", "]"}]}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4862092271770563`*^9, 3.4862092274228992`*^9}, {
  3.486209322900364*^9, 3.4862093231644*^9}, {3.486209425664197*^9, 
  3.4862094260613613`*^9}, {3.486209658845689*^9, 3.486209674276226*^9}, {
  3.487489581825473*^9, 3.487489609735515*^9}, {3.4874896886529408`*^9, 
  3.487489688871664*^9}, {3.4875041545525503`*^9, 3.487504160638308*^9}}],

Cell["\<\
We can now convert from U to the value and derivative of a variable y\
\>", "Text",
 CellChangeTimes->{{3.487489703227069*^9, 3.487489726648142*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]"}], ")"}]}], 
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"U", "[", "x", "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yx", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"yx", "[", "x", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]"}], ")"}]}], 
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"U", "[", "x", "]"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"x", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]"}], ")"}]}], 
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"Ux", "[", "x", "]"}]}], "]"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.4861186708918867`*^9, 3.4861187140692873`*^9}, {
   3.486118819588092*^9, 3.4861188228637753`*^9}, {3.4861217969838123`*^9, 
   3.4861217986473494`*^9}, {3.4861228126018887`*^9, 3.4861228148579817`*^9}, 
   3.486196614858274*^9, {3.486204258344925*^9, 3.4862042794192953`*^9}, {
   3.486208983230133*^9, 3.486208995346046*^9}, 3.4862090787177887`*^9, {
   3.486209737649621*^9, 3.4862097433870573`*^9}, {3.486209795036072*^9, 
   3.486209795233889*^9}}],

Cell["\<\
u is the solution to Painlev\[EAcute] III\
\>", "Text",
 CellChangeTimes->{{3.4874897309781313`*^9, 3.487489738311674*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "x_", "]"}], ":=", 
  RowBox[{"2", " ", 
   RowBox[{"y", "[", "x", "]"}], " ", 
   RowBox[{"x", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"yx", "[", "x", "]"}]}], "-", 
      RowBox[{"\[CapitalTheta]\[Infinity]", " ", 
       RowBox[{"y", "[", "x", "]"}]}]}], " ", ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.486209751957507*^9, 3.486209778409738*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting the solution", "Subsection",
 CellChangeTimes->{{3.4875041402172117`*^9, 3.487504142504753*^9}}],

Cell["\<\
We construct evaluate it at several Chebyshev points x to construct an \
approximation.  The numerical approximation is badly conditioned near 5.\
\>", "Text",
 CellChangeTimes->{{3.487490292689237*^9, 3.487490319456086*^9}, {
  3.487491051070054*^9, 3.487491074217731*^9}}],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{
    RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uf", "=", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "=", "#"}], ";", 
            RowBox[{"u", "[", "#", "]"}]}], ")"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{"3.", ",", "5."}], "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"2", "^", "6"}], "+", "1"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", "x"}], "]"}], ";"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.486209080572691*^9, 3.486209089893503*^9}, {
  3.4862097037042837`*^9, 3.486209736899102*^9}, {3.4862098080236893`*^9, 
  3.4862098624849577`*^9}, {3.4862099310748777`*^9, 3.486209931306849*^9}, {
  3.486210179085312*^9, 3.486210179615728*^9}, {3.487490218066106*^9, 
  3.4874902893894873`*^9}, {3.4874903322613783`*^9, 3.487490332971571*^9}, {
  3.4874909370358477`*^9, 3.487490938427292*^9}, {3.4875061599864817`*^9, 
  3.487506161665139*^9}}],

Cell["Here is a plot of the solution", "Text",
 CellChangeTimes->{{3.487490943998785*^9, 3.487490948014348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReImPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"uf", "[", "x", "]"}], "//", "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3.", ",", "5."}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<A solution to Painlev\[EAcute] III\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.487506469724312*^9, 3.4875064804290733`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], Dashing[{0, Small}], 
    LineBox[CompressedData["
1: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
PjGXvSfRf+kYTGA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3., 0},
  PlotLabel->FormBox[
   "\"A solution to Painlev\[EAcute] III\"", TraditionalForm],
  PlotRange->{{3., 5.}, {-2.4966764221283535`, 0.6673196313920846}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4874902590800943`*^9, 3.487490321312312*^9, 
  3.487490398579227*^9, 3.487490930521764*^9, 3.4874910786194344`*^9, 
  3.487506499806603*^9, 3.494228798082432*^9, 3.5054685078667793`*^9}]
}, Open  ]],

Cell["\<\
And here is the relative residual of the differential equation, demonstrating \
that we are indeed solving the Painlev\[EAcute] III ODE.\
\>", "Text",
 CellChangeTimes->{{3.4874909539587717`*^9, 3.487490968693528*^9}, {
  3.487491086546105*^9, 3.487491097376514*^9}, {3.487506258599483*^9, 
  3.48750627198667*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xf", "=", 
   RowBox[{"Fun", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"uf", "//", "Domain"}], ",", 
     RowBox[{"uf", "//", "Length"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"uf", "''"}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"uf", "'"}], ")"}], "^", "2"}], "/", "uf"}], " ", "-", 
            
            RowBox[{
             RowBox[{"uf", "'"}], "/", "xf"}], " ", "+", 
            RowBox[{
             RowBox[{"4", "/", "xf"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalTheta]0", " ", 
                RowBox[{"uf", "^", "2"}]}], "+", "1", "-", 
               "\[CapitalTheta]\[Infinity]"}], ")"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"uf", "^", "3"}]}], "-", 
            RowBox[{"4", "/", "uf"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"uf", "''"}]}], ")"}], "[", "x", "]"}], "//", "Abs"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3.", ",", "5."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Relative error in residual for Painlev\[EAcute] III\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.486209854871789*^9, 3.486209859209035*^9}, {
   3.486210185579576*^9, 3.486210186154552*^9}, {3.486210508607329*^9, 
   3.4862105118144608`*^9}, {3.486210569952359*^9, 3.4862105881048603`*^9}, 
   3.487503139424116*^9, {3.4875064866657553`*^9, 3.487506513701096*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
N42KNE0JtKfuYZUQNxNj1/NpH4HPa8WuJf4y8H4FHB1uBuvTyPy58gcDf51f
8JcwB39RHxId/8bAIdUKxzBwSGrHyuoxBuYLP3HAwYJAI1LibK9hBi7QydX6
B/zjUe/gSqhv1fV9Stf3E4jngDLHuwf8rYNfSvUAgdbs8PpQDnnSOdWQrxf4
Xfa0xwvI94t251YEHvx/f+lzxW/Ar7Y8nRa2JFAJ66C0HfCWLz+HKoC9sj+Z
vgOuvCPfdsCKQL/uuNhsegv+7nv86Q9glaqN5cx3DPxhZ86dZGsCSbz9bMfV
C/pb6rm+1YZAIm8+fM2D9fE08F3sAF6MOHCWgHn+RqxBkJctgT4nnerS+8zA
SiZRrhQ7AvXq3VQ3n2Tg5wI11neBXz+tqGHD/tj1zusa2ROo4abAt/4/4D9Z
cju/AYd17qG5rGLic84utAsO4Fe4PaGdxMQbWNlCzENQ/w5nRMRF4HwrqPMu
jqDnz5cFY+SZOPN7i6uAE5yn9ssDg2pMvECP+1AL3Dyhm+ZmxMRmh3UOuh8G
v5aFpu8AeSCD67XoEeh3JlK7Xb2YmPvtU/Um4JDMH9oropj4EDmo0uco1At9
md9G6LcC4XO5r5yhPkKU/fReMLHn43siAccIxFtB5+R8ZOKXc24J0i4EYmgn
tXMvY2EpDn1VB/DEr6U1tzezcMixT4Ehx6GeDX+tbN7Dwu+ysr8zToCfne1t
vnOYhRV77Jy7gT/rOSqVxLLwBT7RvghXqOfrt2vkHrDwqMFbU3k3Ao1mbQut
+MjC6FxSUx8wb+sy9FGQja89Ndodc5JAzitI/n7GbDy3wHNf2Z1Az4vCYx3i
2dhIsYk2DFw3WGdT8Qb8wjUiM96DQF3f7WNubeHgFfl7+FU8CTQ8ueH0vzMc
bDvwO2YMOOCB2PLmPg5+KFS5dNkL/OHK3p8ue+QwxdT3FPIm0IayaK7cBDl8
IlZ+fALY/shKUcptOVz/bOJQmg/0v4Z7N93D5fDmvwVvtXzBz6NTJDTk5fDp
bUcNZoBpet6Lkm84uMNDoi7zFIHMdgsW/gviYFZh/3Z9P/g8oqlnkcPB54fT
Sn4Caya0n9n+lY2HNxzYkudPoNwnRQblJWysup+aZnIazrch5ZvOaTa+Et9C
+gt8wid9enQfzJdNsZGFAXCeUR9WlG1mY73lOov7Awl052YKeXaBhfN2cXmu
OEOgL1giQLCbhf/5PP10B/jR54378ipZ2LLkjI1NEPjZ9t9eu65D/hvd3r46
mEAdMo760ZEszCs+p10OvDLU/a+eO8zDVveqD4WAXrb9fK4H+Q8nuSmuPwv7
5+Hz2XIf5MVXtIIq4Jpzo18Nd7Cw76pPm5xDIV8qd5xYw2DhFrXsy9Qw4BLv
dW6bWJh22m7tU2DdZ79vH6JCviwVOesaTiBsVFjfvoaF+752zQlFEKgv6+xI
CdTfNqmkE/XA+a/e7xv9BfnQzmjIMxLO+9ClGHfoV1+v8BzYFAX1J1G/X/U7
6KmtsfkFsN9DPTUd8OfMtRF7/c6BHi74xkWPM/Ev9T0Vkufhfdq9N/7+Cv01
6DerFdhZVdA4HT6/86Ai50w0gQ6m/Z50huvXTPkI02IINBYRzbSD+zvR5OPf
AGs8s08OgedXO05whcWCf/syN76G9QmmFwSw4+D+Y3MSBrB+zzdHpt4De8bq
hS2D93u5XuLouQvQj78vL/pOYeFSy3OGshfhc929p11Fob/mjis/B14/OGi6
RpqFz06abD4eT6CKrDc9bfJwHjsfcvMkQP67+8avbTf0r8gNU0XAP2/MR/Ab
sLBSa2i3/iXYj0jP3GIb6N9H9QsuJhLo44tRSemzkN/v3rvESSJQ28T5qq2X
WbhjUSCgFZjzUYyYK2DhKq0zjp6XIY/Vi6ZGY+h3l4Z0iWSYJ1ouiIr2sPD5
Xi3FMuDT85u13/9gYXeZ26LmKQQ6zCBKlvGz8X4vCtcc8HV94+BuJajn6lPj
yVdg3tG1V31gycZbVvd2Kl+F+cm3hHt1KBvzmKHqt8A/Hg9vPnibjacz8vP8
U8GfPolKWfay8bsxnovCaQRivp3Xnqdw8FNFz1NVwAIPr7/yNuTgm8FddtbX
CBR/W0Y/KYmD45/v0v4NnD5gbTU1zMGn+LI4Gekw35RNVFxTl8O29quEdmfA
/vvOhvhWymHNwhNL/cBeEY/aG2nymDnXOhZyHeaX3Xtap1PkMXWPcptYJvTf
4jNp96E5/oq5VomBY96/Vw74rYiH3ixlOd4gkK3XNt50MQXcJHY0ZkUW9Bum
b65AiDy+c+KlVy5wpdJgwf2N8jjlgZy1ZjaBqno1hr3vyOGgZSnqn4Df9nR+
noX1HdZfZJzLgfzgEDP2ZJyD9a448MnmQj/07hWpzeFghQ/1v5uAN5kF0vcf
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
80Id1sD/AcWz3Wc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3., -19.40954003537578},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.618285980628055`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.903487552536127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.721165995742174, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-16.11809565095832, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.618285980628055`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.903487552536127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.721165995742174, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Relative error in residual for Painlev\[EAcute] III\"", TraditionalForm],
  PlotRange->{{3., 5.}, {-19.40954003537578, -7.730345775769791}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, {{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-16.11809565095832, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-17.72753356339242, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.322068455284256`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.034386382832476`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.811242831518264`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.62892127472431, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.474770594897052`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.34123920227253, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.223456166616145`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.424948470398375`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.01948336229021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.73180128983843, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.508657738524219`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.326336181730264`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.172185501903007`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.038654109278484`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.9208710736221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.122363377404328`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.716898269296165`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.429216196844383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.206072645530174`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.02375108873622, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.86960040890896, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.736069016284437`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.618285980628055`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.819778284410283`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.414313176302118`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.126631103850338`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.903487552536127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.721165995742174, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.567015315914915, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.433483923290392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.315700887634009, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.517193191416238, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.111728083308073, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.824046010856292, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.600902459542082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.418580902748127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.264430222920869, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.1308988302963465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.013115794639964, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.4862098463985233`*^9, 3.4862098593929777`*^9}, 
   3.4862099123865423`*^9, 3.486210129738264*^9, 3.48621045146957*^9, {
   3.4862104880351667`*^9, 3.486210512300408*^9}, {3.486210575959155*^9, 
   3.4862105885476847`*^9}, 3.487490401635949*^9, 3.4874910805422373`*^9, 
   3.487506514203463*^9, 3.494228798316434*^9, 3.505468508070108*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXl4r1d13/uLNRxzbDNlbJpS2qclyU2qtrn3afu0NzmIMBWCBYRgBhlw
MAJDBjGjECAVSUBAEgQJEVMEJALMsTEyGGGMPAiMBVgM8iAG2ZZtBLYAGcs4
Agt47/ruvT9rr99wdGQnt391P89rH+3fO+zhu9Ze0177MWe86DnP+v0zXnTW
M8944CNecMb4c8565gsf+PA/fIFV9f1Eq/UTz2m1Wt95YKvf/t3YP+N/VM7S
f9r//az0v75mb2+32dndS3/1l7qm2Wt2dnbsv03rsdy3s91sl/tOpW53x+7L
dY/gWb3PntVfA+F921vb6X19+fNnpv+d3OyszthfQ83k9FQzOXW02Upva5qj
p7aaB7/jwmbcWj00NtlMTkw082s7j0yPHW6a3ZVmZHi6Sd/Z+1ozarfNfm23
WZkdb8am55rpsdFmbm2X23dXppuRqZX05r0b5+yLpzaLZ4/lL09NNhNT83rV
w9LtpzR7G/Mau2Z0cqqZGJ9u1nZyo7529NSm9eC5Znd7pRkfHm/m5qaakfGj
za49dULs1ylpGHZLX7aXJpvR2bX0793tW20Ym2Znu7yz2WjGh8aatb2m9dD0
7L11V7O5vtasrq01a8tzzXBrrFla38rv2ry12d1U88abVLOz1Ay1JprNpnko
n97dbtb16Np6szw3bsM326zrm/baWze3rWk2a7v545vz483o3FqLnueZ9x+b
4dG5Zje3u7l1+45mYazVjC3kpixNDDXjC5v0/NllsrcWJ5qhiaUOQO0208Mj
zfJO6OXeWjOSBtlmd3w0DfjY9GJTPp5GrbwnTfewzZU9nx8fbHbXZtIjmr7x
0WH793AzvbAO5HZXp7wVjwA0e/aWoalmu6FsNZP22GKpWJkealqTy6U/zyo9
2NtaaWYmcvsmFjb6vWN7zer8hFWnyXtYAfzW0nQzlV64mgBaoTHYrE4PN0MF
hfr21NBIs7RTHu1vlqYnmkWhYm26GZ5aoSd726vNhMbJpin35CT79lYzb8Pf
Ynp8jIY1Rj5+w5PLTM9Yed3O+kIzMjQpwBRa7G/Wjk40hV80M8tbDy99URcX
jO4W15eaMevLdujLzrLGd7FzduiLYD05NtOsrcw0I5PLfbxxd62ZGM4fao3O
CMGth/nXdpqj48OlIaPN8taef816Y6NVZ0ojWWfqzPKGndWFZmE9j8f8qEFj
edu7KD4zMjHfbBq4jSwfQTv31ptJNWh4Rt3je3vrc4nCNtNEidoShT2cKTH+
MGzNHJle8Q+o+bOjo83R1U0j/D3Y4erMWDMxvyoWW24dTNQwNyJCSu9PRGWE
1NEbIWRmbKQZTuM11qzuMGED5WMtH6vV3cqAd9X2oTxbNG4Vtjg6YmyxcNG+
Zn1u1AC5XP5ioGYdC6Ozq46F3dVmrFS3RmbFLcvs2G87hR0ezeyw/tb6F+Xd
LET661EgcXsb8KZBYfUobLP1GDpkK89OqXscdbsOe+/43m6a2vTXCd6n3WY7
s1pWnl5NSv99zP/Pv/eVH5avuLH58PlrzdbW90rbW/cv97VaT9R/fuLYbzrl
gHX3/j/Ptt135Nff2nz2Mzf/s38jc+n/M1X/zFP1meWb/ndO1ak96kYOWMfn
x//ww6npy9b0I//7P/+Hf1A+f8WNd/fz6b9wpz/8/fPTe6749I1wp+M+8we/
d6Bnbip1L3rhBT5S/6rU/f7vzae6T19+915hve18xeWXbxzkFS98wQXeaF7x
e88rr/jURuunSt3b3/bZZvjI25p/+PsvtP7T8V/7gud/xDvir31ufu2nPnmD
v/atM59Jde959wqvzeKyaWR5Fdvb3avLWFWg7rvfx8e7P/68sz6U6j65VD8+
87fLqe7d76ofP5xetbYwld48dXQ5K1fdqs599mnA8wsRaA5owHN7NOBv33Ks
Bki0kWC8nBb4vV4ax34NgAo1g50NWOrRgHfNdjdgO+kqS6n7PTWE/RoAHWqu
acBZzzkvN+Cy60MDrigNuHK/BvQW6g+Bi70q3gzs16hC1G2NenZu1GWX1ka9
5W9yo2b/rrtRO2FUekrjg6UZO2tzzejYdLMwP9OMTy0kFaj/AI0TPmjcc8Zy
4y695Dpv3N/8dXfjTkoY2d5cMeF0pIxST+FaQyXpdmdH4r3VLxuWplZzxzTF
1rHUyAG9dqN8Esa2FJr27LEPdjXtr9/86VT3d+/8nDft5NSUtcVZm8ARn8Ae
snKztTLfTE/PnNDMzMy0DumfzfKmjdrWcjMxNmGql0niM8uJ+PcbR/ifUEZj
x56VG3tJbOybcmPf+Q5vrIvfQVzOGDP9d3OhGTLtbnx8rJle2twPZrDPni24
uLbgzW+6vLMF9y3gWZ60LyVgbVjHp5KGuF+nYa1CsX/yzHNT3cWL6/7JN03X
T55c6q695tbmS1/6ZnPXXT9s/Zv2ZmwtTTWj00vNxopN39jccTEMkxUoaMaz
npmbsfiJ2ozpN+ZmvOPtn/VmPO6xf5/qvvWt79GM+5WfdjbWmuWVtaRR7Tfw
cLhLwufP7PX5v/pUqrM1rX5+5D2pTupI+fx+6xu8LH7qmb97Tqr7xCe+1rpX
qfuTV13UPPyh70ykc2Kpe2P5/Nve+hn//GNPzZ+/9dY77tbnL+7+/EUX1c+/
7KULfh+f/6u//GTX50ce8+78+VsO9vnCNAUt//wZ5fMfr59/8Ys+6oPP5//y
L7o/f+pv5c/fcrDPwxb1Wj7/u884muo+fuFX/fPIAZoQ//wb8udN8HD1+Pzz
r22e+uT3N+977xdbrCmPefS77k6TYIexSWc8PTfpwtAkuLxGiSb9xRuWUp2J
I94kE7NSnS1FXre396Pm+9/f0/+97rcelZv5zW/uHKSZsCGNCM18Ro9mwk80
mjTzDa/vbubfv+fzqc44v9e9d+6LXU1/9P+cTXXf+EZ7M09QK2+mcYVhCcA/
U+q++tVvJXSYQOOc5xlP+0C672Mf+4o3GEiojga//nWXpToTcrwhJmemOuO9
Xjf3D3msbWXtbvDm7QcZV5icppWmX331LanOxre76Qu16UBHdd1Nr00yITHV
GfPsgoktZl73qEfmpm8erOln9mj6l774jVR3+ujZ3vSnjZ6d6hY+WpvOjH30
gi/Xpk9d1jX9Jt3lpv/Vp7qgE2fifz7i7w7S9EeXuhtvvK35zeG3pxH+647u
CLl05/Mrm6nuKU96n3dn9CnvT3UXfGTNu8OzF4TuvK5Hd0z0SnXGSbuAFWfn
kQ/P3fn61w/UnY2N29Ltxoq8OzD1C0N3PvfZm1Pdab8z5915ypPfl+o+fH7t
DhxZXaQ7U6+9tAvrJq6lOmON3WALM/bIh78z1d1883cP1J0btru7U5okMqU7
MgSq7gmP/wfvzpNPy905f/5a7w4cXl2kO699zaVd/Mdkm1Rn/KoLgG8M3XnE
w0p3bjpQd24o3bGR9u7A4WN3TLlIdSZQeHdOe+J7U92HzrvGuwPbtcWndufP
L+kiZ5ORUp3RVRcAbS31OkkZqrvpptu6WexvdXbiSbUTkSfRCRNdU52xXu/E
E58wl+rO++DV3omnn56fnf/QNd6QH//4x2mpyn/l//75n3V3TBYF1Rkk94Xi
w37zHT07dox5uu6673R1MfIuumgiUaozTu9dNAimunPOucq7eHp5VnNHk6BU
GxLv4p+9+uIufmYyTqqzee2Cp636pe5Q89CHvD3ViaGpaKlVt9VeLFvGRGQq
SnA95eDDYJTkw3D6U892ds0wmCSQ6oz1+jD89uOyKH70A6t1GMqzmn26sra2
lepMVvJh+NPJxVRnmobfh5HHUNAN69dd1jUMGl6V1xRyEIkwDO+aXXHV4SDD
sJ6H4UlPfK8Pg0Q9+CLDYPw11RlT8GFAJTj77C959yQYabE35uZ1vO+D59ah
ucaUKtDFfZN/8omuJQIT1J/96cVdqKkUf6h5yIPL0NyQrQ12vzPIOjSZK0it
2WdoHlbqVq78ugzMSZykib2GywjJZwGr2x13/CDxiK9+5Vv+rIE13Wez6EOI
XvH+99UhpM50Tq/jG+ca4TEMV61+05HJff/rVd1DiAnp1ZOLXUNYeYuG8G2p
7gaGsBCsCDsP14APofRkE6mb227bTcaVNmaK/xMV4bbb/tEbuL7+7bw2hwF8
UuH+YpKHS92dd97V/OAHPyx/5f9+4QubXVzFMJrqrPE+qGhLJmj7fegBn//8
ptfx3XOO1kFFshPOue9Vr7yoa63HBGaY7SJjW3R9UGUSVt31138nDeqrC/mL
TTCorFa/89t5AZn8X4ttg3oMfNKl7e06vF/7WvfwmhiUP3leHV4METLBuMPR
sK46w5/XGfmkOrt8ePmuLN3chyRnopfX8V2xB4bIhj/VGfP2+17xxx/vkhax
lP3Jqy4KOF7uWCwONQ/+jbe2Da8NnbMa2itafOlLFtJUYXxkHWVB0293Y8i/
8507u4fcpE2GnJkUuTLkyDMSvHn2k0s3dJBwv6aJIW9+9KMfcyuivxwB1LHy
y71BHVKIdHVGTpxMdaYL+H1//PILuyQJTH6vesVFXdzD16YTEhhOTgtoGvLC
tU0mSH+LWrRAipJsnFgAO0eeNdQ41kFGHn0zjrx0X/gBI/+E3/4Hp2lGnvVH
DJpnFz+x7syYkVcPGPm77vohtyI4ygRPHcuNLOXUgSVTl330UEWMDfh9L5+4
sGNlr6ZOowWvw5DtS5+P/HoeednOihiS/saye8Wnb2y+/e088oZYRh7B6vGP
7T3ybbyb8bb37DveTOMHzl718Y7o51nTAJyRMN5nv/9LPt67u3vcipQjG2xf
7fchWU2bWLCImqbsgwYTq9/payZe9rFU97qgIWDoffkfXegBKjAdLXwqRn0t
xlzrFugu/U1/Y8u+7NLrm29/605kms4xp6niZwdAOyYKe2Md/a98i1XCR5/X
Snxg9LGUVpGiv/nIh9d8pE2cOaFUv3fuC15tXJIvsWbJAsmtUli41WiHW1lq
5R/j1k9ffmNkYIz4y16y0MG+q537jyY+5rMAKYiVq/zwhz/yWRCvVXllWTKE
IBWWs4su+poM1OnfNoads8DQHHAWYLmyuNPhr3w5z4LxGZ8FXit5g1mAfoTN
Xpz9H//xLsYLy4iu7353N0C+P3Ffyve/vwclSBqPhXVJPi9ei57dNud9aSVs
4+etavG2KfJpYGrEZFSyUbV9Gli5ba1Jf+NfELHfeusdLG1MAyoNAq7R0rEZ
EIMvfwOD/+Uvb3UNPggU12Xw4djyszH4YpIMx87O9xkllqPC66g20Hm1sQWq
77zzB15tSiLtglzFsbgVC4GuNHP5Viz+xmN8+DG5v+TFH/XhxwdiS3EaWpOF
y/DfN/FhFeNd4C79jdfhYwtfkVk+/VuCGRSicTfVkU9gX2AEteofgCoQ9XpO
zOPrxEQKYGJQMcRZmJjIhMIM0DpdhiWqpRNQbRCl2mbUq22Zp12YsCInw66h
y7QMJoFQEQnf1GFlfvELL/CJYbKE/UKVdWK+UiamrPAynKtgfDfIJK1J/1bT
VBBObFHnEyhn6E+dE5Po5Ehpo7H5JAXLYInEiyFSzjKGYu3aW32KuO9WA4kU
ZSnEBPovmUiq4AQt6P++Y8rF5e9VhtE4e6QQZhPzgy7DIIOOFKnrG5u3V3q6
y6ttYKlGbNRlTLNTMKgOlv7E8bvIunq2JONQh2n3hS+os4nPRqSkYmzZZ1Os
XgXxQQZ5FfwRF9hsWl/Sv8VxVLDLmrjQOZvQg61dzOY9j+T5jVKHL0l2Q2YV
0MtX2Tn7Jq75fYhzz3jaB3z24ZKyDTP7cFNxN0eOcXfTO4uIlKdCrjemwlYU
EAHX13XzTd/lbgQwXTfeeFsvQjZ5jWoWdV0m2lcx/G0A0JsRJE2ZJxhRHIta
dKjDfmZocUTgntGsqxjLd0SIzangNdbKrYKbR2LWZkGEdDMV9DFbM4+FiFcE
RPyTwqsqKjJLlamVGWMWbwmouLYY4Uwj8PsQcJ5+ekWFeIzqpLGACvmVYK3u
vSsqrqwKvSbUxhZURIZgmiR34+pt44jtDMEYFtVQny5rY5vkJPmFYpSaqwfT
myjI7jb+IAKbl9ypTBc+FAmwKiYpOyI0gipIVWJ/Kvg75Tm/+ebvpn+Lfamg
MtlqcYKcoPYJLEcIPd2IOGi8W9vagONWtuZOHMghvh8OsF0/bfRsxwG4kiIF
DlAW5ER2N0FRwuWJ6jmFr74YHCBm6rJPcje8WpdRXS82MPknn6D6pptu82rj
0r2EuLC6KKieanshU4/waou3MwisdcY8HA4wDZPW8rzsfN/hIJe2in7TPZIu
VXCcypxmPDD9WwSkghXdJiG/phsOf/zyC7vgcI+iD2EQuMVlJmbSMCZFYGCl
f1wABmA5PQADFUbm5H9fqTDbMPh4p/9dEgZzglRUODToQADTtbr6Te7Gh6Lr
6qtu6cUOXglN97vNPtPnlb2Wq9fXleZDQUmzVtFoFv2qIlVj++89d97Rgd/B
RMbU69tv33V0WA9SHaKm1FIVnL76tDxc+rcMTCoI56mbGR3YQZHyjoOO3qGh
3cyCeANZuTsxobAUMEHYRvTfUnf6UysmsGpL3/93PSjSmBKPY01TmG8vmra1
GETgKNV15ZVf526pSVR//vObVOOHTDP30gWqWeN0mezbS7szKqc6mgW//vXb
mX1YfFUO+rwZZz3nPEcEYFXEt4pcJiBCNlIVosGl9KjgypfFgD6I0aogNSR6
yIjAUojkJ6NW9/JxnLhcArs2FyaaiRwV2zOYEB4CXt4Y8IKErqig/fCC62r0
Ke93vCAnvibg5RgiZTRGmfzBRGGJ12VCPndjstN1+eUb3I0Qp2t5+aZeLzFC
pdroz6tNdqHayNurbaKpRmDS5Rp3jdCo8ma1w48964MOGUzqCpNP87X9jw4Z
eVBUiGCXMKmC7PXBc6/2KAbphSpwXIMbkMHKBoVr1QMy9yRaeoA9dWmr8ejY
0aS6JPykUOn/t3SXuBk5e0ADouRmRE0Z78eeWlGjIFzVKWAG1CBLy0gOaiId
B5Hze9+r1cF0wBqXOPnz5rk7wuOSi6/jbihV1yeXbqAa/aoIC1Tj7ur4ZJSF
DJ1UsyrrcuG3xpBUIaRPBtNUZ4KFowacS9NRkek+T/fh5AFSQQuSWz2hpsS2
nGs87vrrv4PwrILw8YUvbAIa4oJ7geYexrEP1jj2puBsbEyP78d6MDIovKdz
DVEsGSCCzUQQffEL2cGrMCVA5EEGr64gipRtLAlY4FfRFfRTIugSJZ95Lndj
htD1sYWvcDfRo7oWP7FONb7nsoJQ/Znq0pBeTvWtxcJXJoLqaICxdQ7AYGaq
skqfS6lnPP2ogwh2JN1IRbZvQPS5z6VIVNebME4TPWSKecZtBREyyoqW6gwi
DGisFbL9FxD12l9AfI2WpcnFrdLLA2DjDd3YUGBeJzbk7eY+yFWhUWADacu4
u2NDlg/G2FQEZtukJK8O2gnxe7qMlrkbn4Uuk/y4G7FC10elt+ZqjT3VJi/2
MvIHkUWxUFS/+EUfpRo/iK5rpG7kLhIHcdazz3NssO1N6h/YgOkouF5FpgSw
IZCq0Cv50iI25C9LRrGMDcXAIa1Y18AG5jgmzAQ/sJHVGSFkp1ldycuQMjWM
j89rqekFiV8rdQoAEDnLk8T0i9bks4vBE0isMn7xPtTbCB3WoRj8h4td4WRA
B7FMJmWgg1sksf5XuKKj+AWqbZjdVn1JtVWf9sT3cjcKgy4TNbibSDxd51VE
Xf6pDa82AZ1qPOAdaI0tMfmjGnCXvTqJEbmL+LzrOlS3tkm4AzqwGsXXq0hA
BDqiDxXcFxJNVIhAPvvsL8lWCXRkeGYB+ozktgwdLAZMWE/o7DWLkyPN8Oh4
MzE+Yr+MKCXCftBhSG1UfPrpX4x1wY0kC1kXdG7aHzqQtmLKgA6RGIpLeUCp
k61XCrGx2BZI2Awqr+HGM3UEccTWICaRCLTC97ibtUFXUJBx43eg7OLFipsn
PmGOavk2eixHeK3LmtLL+pvoP3cRT+ozfEWqu8U0PMAJDVrR3yoaYuBkIn6q
Q2PHEEgvJZsnk1KGk1TSEEcDnLDyEGBk4iBwYvOXEuRsbmzYHGzatXXMzV+/
WupkCRX5y8cAHsB4ndO6m1B5CKiDcyvkkW/QNMX9RrbWiS97DwzE8YX4L084
+IrbRoBGVKBN0aWaSLyyajCr533waq827s7dBJwUmYG7cW9l2K30ApKB1N8d
7DIv7q2XGXPpZUe+4tM3giX85JU11b1aciqDL/YnK35dRdGs4EsxWyos1PLU
qrDDQM5woz/wddddP3QF59OXO76iCasDX72cr2AIW7Qsq53htaa5eh0SpvbO
U4eC/TowRDQBUdUUQKSwZUCEEKMoN0CE7VYuFUBEJL/iG5l/Yj51GfOkOspF
hj3GPvqDdZmo4EYhdBJdNsVUI0rqMlm+FxxNEKU6hh0ZrfUS4Y3/UM2I61q6
7HpQg2BbuVK1CMnSQW8gZslBKtdd9x1HEvFM7GGRZKyCPKaRuPrqW0CSjCEI
RramgyRCHh1JLzkQkjx2fL4GxRFlbKut17GTMsYYxp0JbUgiMJ2CshWRRHiQ
4phAEtEO8o2CJKJEFMjYa1177lkfojq69A2gjH30POrKrrwmyQIwT12y8qvs
7f2or4y1ImIotu4yBRhUVBLLytVINSqJ2+RqcQSKzRIuKO0ooDCfJkeBIgw5
GjN6gm9CpK6iCQJFkuNU2GsjB6YKjkdZFa7CVtiv1cclkyUZMDKKiCXkeun+
KPqFUifSllVAoZUYEBWiISuasRVHDGZxhXhTh6/ctFSvI1JC2Tao800irzkO
2liVjMs72hB+xd1BGztsXxHQVkMcrnS0IazpMgGX6rhA2afyHB1q82TpMs05
terOO7XcH0nuEFyI3/3ubguoaWgotsxz627Jb5WDHfKtsgRRTHmhWkI45eV/
dCG+F7VTJTPQjD25EyjIHtZ1cMb2V4Vuq5ic5Dj7eIk5Q6MTY1TBnSkfkBsY
sxEOIvO2DrQZ6g+AMzBgA5YCjhUQ2bkHS0sn2It76jo3Hin+vTP0f21ty+vw
4ispSRf2/vySDuzdUNMDqmA6iNhDOVfIjWOvWD/ktAF7MAFtuQZkUd+3Eaf6
3OCLeMiD3wb2YOZctC5HLmY4YNHJVtY8SYS9qKQgnnyr7BsqOSI/36qFnXLh
hV+lWhIVJVka8hvkylKpYWuDafGmICaY5A32UGqFJ5VrrrnVsSfFRQVRB5rB
d6ptKW6nbI85MBUa7BGuyKV4uwNgT2atI1nQc+zJdMBiC/bQnGU94tm43aNz
X8S11kHqEAGUj4Y6vMByiDD/spvQ/Btu2OZW0Bf36i2VvQUK+QF9Hu40cWHZ
3t7lk+NLUqN8TcX0cKjNRq0LNqU3Ah+84DekPWC5TsqFSmb2eZpwb6gkO32+
VfESKjlCNd8a+ZZJLFQTZKOSRLn8BoKzq2u+36MvVGxIUjXQg6VJ5FDRziug
p5geFTgGwgKOWWlmJjrymdtuq2bjZNrN0CMikMtI5SDQIxwrQu/SYhMSeoEe
mxkljfIsTiRthencHHJNgB5OqbiVAYO4pgBARJwY1B16K93QgzoUTwL0iKuS
uRfoSRbhlQbNXuLcY099T67+WefFnQssPg20rOViilwtFl5sVFJDVa4spjrs
j8b3fT9RpxhEDGDeJtANOtMlgK3sUirZkZfrCBnMuyhynUhYJct3eTUp24Fd
AJePV2Xlyq87EE10SnWYZQjMRqfV8Lgptd1RcdFFXwOI0a3VC4gneFhigJ/W
gc5twXoQ+Pmmvt+pG/MIjjgnbAIhLsiUdq/D6qAEMNRhbJRTrxf8DO7cymRG
+GE1fVyAH+ZBMWzgF2k1hCQpfJpqk42AHzpKoIE0/sjdiFMXfTyL90iemAuJ
98HuynOyGAM/7Fpcn19xZ6/jB6xkSTXXSdhSydb6XEcswTd8ve9LKqSKdjeC
PcXgqsAbCExWbkWwx94uLDkEP+NYFr/47Gcce9HI7bLCiR4k59iz3go62jpt
cuGJAYbH4Idi7J2AxB6pOAwAiRNfOibP4h7VzrDOLVvGKrwOk2/cGsluTzkI
ewUhBECy48uGxgFJE2UYAJCkMhAdAcg4bqYK86UYkmQiNYBEp+KSsh0nCVJn
8tBbJA/D++QaQaZkU41EWACJERXDrDi7iuz9gErSlopysVAHb9YEAEjZtFWy
LT3XyS2jov1xAFKyvgrfVJBvIiiTywEkG38wEsg1pYJZRhPm1tx2z5wHg57o
mzEiIAlXsVXhAICUb0J3yxON91L6rwhNsdFsPSeLQI09z1vqJQvWzQl1k5fU
Vb7BvChejjrm2BQur4MBKccZdbig5L3sBVwjP27FzRwTHdBsOdABLhFY6grA
JaZRl1F5fuVAm6VNV94rod8e6FH12CJAFqs4awBBch7p/uZPuyymGDGMPNik
pHOyFLOcYj5R5KdKkmczAIUMFfn8qMMemgkh18nxorJ27a1+n8i1DKbfpwhV
Fa1Hue7eqTmXBk+eZOhyT/qbSFLcECKUFKiUwUv8sK7zz78W8OKh5dLagTX8
boL3DRW8WAAkIQJe9li84Pk1bElhRqqLu/nYBSSNg28QTxBzRLBr0RiW12E9
V7446nCCvTqAV+Z0emzEwq3a8loWLwcvzZaH/ydLnXiVFgcFuZImF1O8qSMO
6DaT9e+fD6BjcIUuZTbIvX+Q774FdOLaBJFI9cUaDZLYbSorL+Z66XFIKpL3
kO3sO22IYfEASdjFWc/YIWZCGGAlUv0hD367g5UtlqY6O6hFU1oVIqjRyLRr
H1CLw8XNN0S+s7IQ7sgWDZnHPom9sd9D1HQlX3UGNY4XLoGcSI1nPfNAoH5/
J6gPu2VH5CGFVYYZglmECK3ZRtjQgCS41IUQpsciGfftESIvOZPPsycvJvRg
IYu5JzB+KvFgJ94VLwDeYwSk0Re3op1rRsD7x0uKFvn+wDsSvJoN3lEMFU8G
3mMQnK354D16/XUpuAq8Y6dmX69c4JhAtBRhnmMjDZ+VeI1yoL06yLzyC5BE
R+9hmSpJlZ35wwEELHzDyMnJRZkxqzktg+c4lkSkorzH3KcVt2zc9vvYYF/r
DiecRMsv4jXrlbRQU+1ilFPk+dVi3x5QnPxhuVpYR2c980BYJ8xUqZLAOk4o
UQ1hQJhzccfYeoiAJ61Ro1pyrTiI6gaYagCLm+nYBSDJgOYQH1Q9NtWLI03W
DWBl+VZ2TOqwnivgAexH84CRp2O/KFYxjw6bviL25YhVnUxTYB/zswHHsR+D
ND0+q8apcclylXv/K27zxkSnJHjITwrMhZy070OFtUHaKs/IZumbP6/7jnsK
dQ/7XMQ5CNqQ4QkFQXZPOM0lxYuI6wSbqJSOnD8gg1rvV1EGTurk6S0gcfCr
7e2EM5gIROsRYyHxusEYPpiCvqJUqeFw41c7c0mBJJnX02EurRi4XJ75u+e0
4b8/4V+zJ0dN8OgzyZLfIAF224iYkEyl3aow2R61cMjFLq16KmDJSNPhjuL5
ypCfA01BmAOb6Fwx9RCWQltxvA5lW3lGqWMXvmIyIIEYs2zDyK3YdrWYQwIw
J0mekAAx+vKyQALgxpiAk0BM2WBNgwQ6gxSyOSqTAD53zBniXkBE7ghpgGV0
0qhittKEkI5CKjnOD63LcYnA1Su3ABEsMqV4/e+e47kn8TYgeiFOqT4aoQkX
yolgcp0kx7IT1klAy0nxITgJKNIq5hCQ19OWIn6W3Bz5lbSk4CaJATNph1om
gRgIfKSsaaiw1vFIAskwZ2jVT5JfKL0IAG+CqIkNRRr/RADFXuvBMjWtHIo3
BjAjUAc7ukLN1FEJIKa3w8ajdAzUEegTA5qAg3LZUodfVkQGARRRNF0mvnEr
FmbT9pwALigEIAUWAiBfmQkZTgBongp3hQCiydmamz/z37qUVCI22GEg1oEk
K4mOXa3a5SA7L6xFlka9Q8qp5BdGDq8zzrVw3kF1b9qIbtS0lG31mMQRvtEP
IIzik3VCjN9KG2Yz3qXmF87rNCAJsyxDTgMSy6IDSKpMSqGQf5ZFM86X1Atb
vaABqDg3+Eo+9NwaB2035Tr5JEopoG5bBwCZb8CoG+EVgOlkUDyKGgFGUCZo
FeJ1TVyCDJDk2CLMwmuLdyWDol3I50wd+klMZUi8a8yRhjIXY7JQ2JRcmDqc
dHIRQwZxN4Ita9wa4oOdDGCuUoUhA4wkUnEhAwZR/grIIAq4Nhx9ZSBZqVm1
tKtZBflS9SZAnpDMeCf71iQkE0z8EOiTCgIlZdhXMhAekFYDFSL9FGDAeGtt
1ApRGubTrXrEU7GPqBzAGSVaQjSADQeLDQxEoL25xYzgRCDCKBsRnQi0AMWs
MTLDGufkZ6kw0bGgXtmUQAQxGDttPcwfws56N4iAnUiBCFjuRQRp7k5IDPKk
5DzByamliNQPRI4QimcUk2GNGoMdlzyAkps7v/bSsCWW1UXWb0CKTl9TIdXw
uRjnA4OKCfIwNmb3cu583ARupE01Wrsu4728AbOLNGXIAUVbCxzkAGht7Wz9
bKlTgFFx17WQiZAEuXQqRO79ST7EqKW4/xA6JaKr5AiBI8najW0FKy/xdnWh
/Vfu4YSI0pQVdUMiBCYj/N6MJHSreoZHnmiEYlmRIXnh9Jw2I0dGoaBTfLde
J5NVERK8TjyhCPpOKup3jPSW/J6yv+SftRLFPduSTK0JkEqcUJsxPsR2uEgq
xOkeg1ReXEwMS5VUWMYUUN1XEX9S0mNgWGo/lkDCUljFfNMUpKKMSyrwX1OK
Wp1fk7OHOkRCkwEc7uwXi0kekRFiWBJadQ3VrgGdWpqgCTLSFbqnGiVfl82v
k0phvNIqOklF2kInqShxDF44EaXWVtk5+gupwCC4qrX0JF/4WOzY9IE6IZiq
5Fyqea6l2VLc8f7LTmUqUvmU4UISMM5OlGY5K6Eutisx4Ah4mt2rqg3G9VGJ
97iaRXEsqPo/QpeMtDgZUezlGM0BGBmostgUbuBUIkkrxqtLsEuJcvLPspZH
F4BEC1NEGJTorU5bTPOHwl4gp5Jn7E8lOKoDlbAjKmdOlPvm3qmbfFDEguVe
rB+5llAL8psazbbRiqheBavqcwOtsLa+KOyrx7ZiU+t4ZylXUirqUCY/GYIJ
sI0rqXdncIKWLogi7pkz6ZDqmC0kBQg3bXYHra/QCtkqbDF3WmF3gXYcQCvR
JwKt4A3gyjtaMq0gmPJNIj/CDvz0t4LHgAX0pJL8JBlMxLNQZPbzxfKQi6iB
YtNtSi6WX/EzSUtkrHQ//E4xAaTakHaHMi+jACFvUiDYIYj8Il0liGHy9xVt
zClEYliMzBED8i0Wg4kA4z4jEbVxUIYiau0mT0AhcKA2CnmaB9i2UUhWvg9n
8rjseh++QB+eWCcls6prCeQhhcNTIRTyIED0dDZZQh9aoCN91HwSlT6iKxn6
iGmVYXXKCVnp4230oWt9sXn0OtiYYioghMiDPve5m6nWuk+1MQjegICu/kAf
bKWQiAV9YKtTFAz0gRhVNzvd19cJLtxZhHqqZzgBxaBVoEejmyizitd+73s/
8M7iSJV7k+x2MVQU5tX6122mYlG2iry7WFAIcpMeT2476fz0UvOEnVYOKJYJ
qF8WdOzOLCsyNOW5yWiXKB4jafS+L37hGxCDTA7gLA2GyaIGGYghqu++J6G6
qCIxhGjz/fQP3xQzGNMAuYT/jW/sQA5SzvDwaDHFlMe6jhVSwdtt5ECgPwKK
ddmhj0s2OuuIwYn5rjG1eVbhsFxcGpzOhDTFfTEsFyI5cB8FV5Maei0XntO4
P5KDAHP/8mIEd+13hCJw4Ch0hiQI8g9o5MQoOLMWO7/kPaikMySIUEjiX/QM
W/owCGKqsEHgmBVJTvIVacGHIpB+dJk+wdCIpsVJFYiCIQW0I6WyEeG0FJ2q
Kb1PMqfCZSTCgHaEflFXyK+U/i9zdI7eylDXehgdxuLeV2rlzqiJ6RSkX+fs
rBnh2AWP5OUUMqDFd4MMXLeoZACNaWyQPm5VLky98JS05qLEiAkQNiEaVEEZ
l7FPpSZAHvCzGdDHJWqAeqgvuu6YNR2P0EkJyvrZuTBEdzRTEvdNhMw0Tgkx
d5cBjuqYc9rYbS9KsPURSiCiQQiHEjBjK4x4oDwOjxdXNcGFEBUYsGy6EANi
FlRO0mSyP0lpFEuKhtmwl/Kny6u13kuGUTjXiQXhnb5BsoPn9O2aqvumdVXG
A2y62Go11CS3Eg2CYKzfCkp797tWALn8zAiRuiRK2SAAcsZDlwxGOZgs4zcG
TKcchxnQWAciyNme2AnyKPgQoaXiyb0M4hi5DZtAXAyECAepVJAiAfb4r7AE
1kD9AT9XALNeDc+u26BjKhxCISSJA1N4qO+oIbaQzXIU2h6D5InVl/8P1G6E
cBX7INW0Udftt+9SzejosqEA4/A7mX+INSmBgukvUl8DQjkWwX20zBo1nVyq
JYxTbZJmhv4pTuIYbOW9SeNezKASeVRi/OsJ5ZAC1Ga96QEF7zHQR3NIgF0+
ZEJD+9MJt3He2FegOUYWEvbD6QDMr2Mf/qu/887aDE95kIpb1nESV1qNWD66
LIM6qtMp/0F+Tdgn7Mg//RjIL+wd4TBtYcv3kMJKLMvPSLv5uxH7hGJK3gtu
4vQVLMAEZdQE0gMeeEJ0XUyrgdwfvXK9TjvAlKyEnG3Y1yT2wn4MiEbulc/D
sR9yABjhUh23opmeSHUMkbNp78S+tggg1RAHIvQ9otShLsmJB/Zj/PPW1vfA
fkyAZIpoxv59fNUgLolUV7xFdjIVfgd7Snj7b8qr4xx6QtHBpA6jIpNmYgWB
I6cQV1GYd667VwzobUvrdiQLHonGgacWqqJOOSLicinKySfaZQC/Nuz6C7uf
eqL8qfuinBisSy+5jr5iXNBHwsGGoFzOGGT55V4oL1yZuIu6EXDAjw/ANO9e
h4Dy6mhoTxQQDpQgVLUe1dielfzjF34VWDMkMQqVOAhlxAK8MSrRxqIXm//2
t+7sxeZtBQPq0FAVW6oRSkZcoI5RREo7UI8R0zfeeFuG+oDv7yrrXJJF+gre
oSLiiji9BBMlAdSIh5C9tOt/W5oir+01WaNu4eiQRRe5RkVrNEiXTKOS12HV
3TuJr0QrCsk4LbAgy7yImMn/Xc4Z8C0WgCibHDOGXxm0cWNvAD3s4Xegi2r3
AToekQB0ZArxBSxtKRNxBrqCOlhGBUQcx1qSVNjbgWNZBxQBdM4DwHB3Rkhr
g1hY3QTtUQjhyA6UhXo4ZH+bFdb0J0DNkMQQPGzcko2BbgzJ8uNc+tss9sZe
qSZbTGH19+94cZVTagMUZQbQif+QhAbQ4/EOpgAhDkmXYPoAYowb0JU3z+u3
k9zoxjFw5D4EMapXyaHmGSIkcNEbfqWAAGavS2YIlb/6y0+CbbL5Yitj2UcN
g7z1O2qTcXuwHa1JanFVE/o9NFCXicz3Og6Oo0B+STgPCb4phyncLiUYzyiW
AIZALpUBPy3btwkkwMsVBXKy3hMCpIWyojhTbTVQtictSxFS+VbihevRhO3R
PReU81QQV+RkjAV7k/SBXjC+6ONf6wXjb2zeTnW0sRsb74Rx3bHVfjCFNezB
5Vbi6vNN+b/MdyFaqmF7ugx90IdYgbhj9JPFOGFdSuiUR+i+ft6J6Cpss0xN
IKydlLDSNrGui2dYa/5DARDCsqRdNhAukzytbpiWZTaD9sQ2sU+XZGzIJOVe
yejoDGHLCbIztmMuQ+OPYJssJp3Y7jAsXlJ5NCK30M365ZkmT0nhWAiOEjyI
cybKA7UHt1Q95WMgBfGr4Nd3W3yr7sCviRH7PfJMVzjXh92c9QDl9vjltHGn
6ZJRDKnOpku3JQ2B2GsDvp3Lt58YdfNN33V8B8jdcssd4Bt3rZxnoDNmSDAx
7Ei5VWgrXkLn1Ah/uqxHvIFo1cJRwDdMRgGw4DumndN1VdI282vwUGvJT8Mp
JTQf8wNT9UOB+lI4rFR45dD+j6VOMlvZ/9piQ7/YkmyhZCeIAQ1yvpTYPAeq
hghGnHacZ2wgWnHltTo/EpPmWePBdsj5cyC+jbqk1oLsdFRIRrY6TFSrFMeQ
6CE9DhoxodfTSgbcRYJMGZOeIX1U+2E73/bjyeoG7XpQZDvfDpkm4+Ys6xjI
xrGseAGwipP9SF6ke4nUnt+i3xMP69rcvB1kw3vq4a/t+96t5yAbJ6BOrQLZ
GAZ1mVDBG2IyFZPIqBbbRG412RlwsypyyfWcx+Nevg0Z6xoziVtcgbO/UaAS
dQzSBCXPU8aVPIxl84IjmV0I2bibYQn9FVhyK9A6kpbWAtUndUG1dTcOJMrM
2mP9LnZmzRxKEWGIg0At7EBYbMQ6kpff9FGEYGyFURQhswgHmyiJMy2E+z3L
bSbtp0MZaXArtKuY6V4C9bkKQmqKIFCRnrIz5TewzOrAA0AaE8jNf+gaqsml
USibalyFumyp5cUSzsqO/BaGjriM+omw7QELtiKA9GB3dQ4cN2dABeAaM3mi
xAu+THXci/6SF3+UN3Um4VAoPXBHTx8veV14M5qgvMnAXf4fgm5IsRIcMaKG
QvQO95BM22X5aOs4pdRpADpxfTePVTq5E9s5eectd9RDWRO4c/v95JZT0m3o
9aJydBdyH6EtYiaJ4L6qHA+C9BpTC7I9qppK2g+6CkefsTm6Hu3dzhRN0KE6
SgE2sWAQD3VNZNTvLlVd55xzFdUMR6Jxtmi1W6bCFnOZJBRSL/MF4EYt0OXx
A+1piE1XBNzwE8EOSMY9MrqUqhkUx03Shimq4wEgZz7zXN5EwEA98XfFRQo0
TPL/5N34GXFBVWn9erlfcqhkSkzlRlqOZIksxSbgdWGrZesnS92Tas6tDiTf
reOgitgh7OFwxooplypk6AeKZBiTrEW+GrxMnCZJXgCMIPWAigE/5QbJRhZf
sInfrOb37feocF3hvDY+X88pbfc0hozE8TiFt/zNFaANQ3A9Lr49/DqFEObq
mNvlKsLr+90BXVYwXoweKcMjMGZpL8TYS4C3x36jVMdwfiN38BfJtJCOIxmi
LNye6mgbNXmAN2HcxBWfzcZNYtOszxjxxIphZcKCEsb8ZnmPFg7R+Hllh9VS
km4yOsXTOqOAQ4LW1n0OgOIDnmKV+TF2cwGZ5RPbkoBMJwKQNdDwY8nKOEyk
1KgQboodRLYlgMzhPAA55zJpB3JNj98OZIOkA7n42JTFoBeQTZbpxabf/KbL
wRu65eN9n3m/i5DlDVRHx7TpClTHrIsB3zFl5YfPXzupVGPuLB3h7pgO0/AE
lm8JbhiDFAiMXdSlhBKA9ozA8008ojoGfBuj503YbMPJjD4P1Omo8bglVOur
ceXWI8s74p4BKXo5b0rGZ7DAOWZPOxhme5+tRRaiJDOXYyySzhG5sZBH6+HG
rw7c2EYbEMvJy5xISYPmydQEN0YpzHHWGcSKMleB6JWLkoEipq4qhu1RG+Fw
PIKNtDeVW2Pu+Xe/y/N3R8HR+CogJiC57pZt1zhdX2w//C+EVrG9PGF7ZRPz
cIwMlHhgP5Xzhvu92boMkC7MhOSapu1FkVeyqqjlxz/+8X8p1dH5YhICsOy0
j2lzLG96UjAcGEnySNTxykLhVm6CHtlDK1Mco49pSN6jU8snoAq5NZOFpDLg
wgRMTytgLvbCXmA+7rFgHN4tWXlidKKZOzrdjE3OS37O3R0IG1MJntPOPzwB
Si4SkczCLi5OxB/H515YNiYgLtcjjAY8xwP+GmXdYIDY71hzqR3zID+iX17h
O7nbPdz2eqpjiJ9NPEhGwZKLuteOihTMnKvjBmoTPaiOad48YmrQNzvxAdHz
TTfdRgQeg6vLNcb2lcDIEwhGgd3EKsC8GuwuJt6ATGLQQmMdzDFPv00sj0QP
TmpS2midf4Oh4f3O2ZDy8LEca2N2BvOJSYRHblTBsiFqfNfslfcrQMaZHIF8
Tw4rG0yHla1MDTcTBe0LY8PN7HoxAbVLG+Ku4KsXvtNxgxne2vdHeIseC1la
2uCNGF0PVxpIkXoquG2VWIMhgyFWUbo9uX04lZCRr4tkuy4VjsuLSbv8hKua
mqDGkrdHH/3tW66gOsbkX1Ld5dj7dHnAyKG23f1srJa5VEdknlgeDXaqmt6p
/ayal710wQWGYN4xOIHxEBWjqCQAG+NBdWnrOW/C8avrpS9Z4JEYR1SWHd+V
gbFTC7Y2yeETlMgp8zVhhYp8eHz5jBYAiZ6ye32UPHR9UXkw8OU6wnMj1u/h
GWuHyhlrtzWzw61mYkmQ32wmDONz67tlCO7VhXlAh89TmVmIbYwLqAxnvpvf
JDhULPJdYv1HWrFVFsyzCysceO+YJ5S5HsvRvpPDzwyvOxiUEZdb434Q0wl7
kYIRMZhHTqgxhP1t+U5MUO4lhVxIhEm/77Yoo9dXGBuxhHLxyR3ElnSRiOlW
LK4xrbOuqzwfZbtaYfMDYgkR02WyItiPp/M896wPAeSoJuqq0e0DbSmmymNu
W8Fzjd1Fe3PzWB52wZ/dLDHtCpZvo+8nlDEm7232/mSQk5r9OMDvdS7codLC
FYkprTGD+GQzNbccTuG5V5sRT5DGLAWp5oRGGdKRaSj/OWqbeDbhqhzBipAM
X/c9rTkeVwXHuJzK4BQGWCWXfg8N0ZUOYMy3YtesKffand1vmvbDJOPSHZKG
driluTuKoCHlcrSTmSZINTGcuvDPG6qRX+isDKMk9TO2AaqjE11XTYDTngPr
rGefB6pj9KCtnqA6bjJ6+ukfAJ1xWdBVk64NtG191SW/Ls9hvad7claCagQk
zvRAhJM4iQ3QFIQnllfJwwic9LNyRmKIJiQoIPm+ZX73No7aX+PGhvmpHa1a
2UAra2JF64ltYd8yf4FWra1pJ8KRFDyuguufE6U3K1jFqlUwaOW0wLmFBGzm
AMU8DXHzUDqRLd+KJFQjU9uNBeGknrgzKZzqjMFVV0ookqvjUUC2HnB3TBwV
bNGEI+oy6Qjejnqv7Hu8WE5/htUocKBMZjzXUVfdRtre92c8/SiAjWFrxioA
bDwAOJjlYsyyrroZacBjD1nN6sGUAx7cwA66GkNz2LV/cjJD4dImuN+ac1rh
mlogpCCK6+NYEl/TXqnDAPfxXcC9XxnN9fmJZnh0ulnd3C5+1AxcfDwCLnoM
QlU2GmTgRm1F5i5WXkmYflTDYFosUOA4dMc3Vg74Hkz8wkoFBxpZcqvOMdjG
VnCLJ6Z4JDlNOdBS5UpOKs1eDIpL+QMePE+puYv7PYWSiu+6G/DUJpSaI36g
K84pW2iOJEetVodYWGLr0RE1aFDDZPo0kInWmTQxnmGmfWPIaU98L1iOdhcT
LwiwiBsCuDUerWTEy0eBPRxBZ8mj3SJ+IwLJWutbjwc8zIRZr/kvDrtHjENF
Ee4Uz8O6Y3VPKY0D9YpcsJ9Bte4ufQHVBBLsbW80S4vLzdZe4zQnVJPIQ3Jt
zkKbpxn1RZcRFFOpNQcFTGKbNAwQLUt6lF9V/EDUAY8JQdPMoMqtY4tZZc+D
bZk50ZyTE/CIR15RQtZVnFcqfoRYv6cGVElbtXI1uYxVbOhpKlk0Kdl8mH9T
GGIsspEAZpkgY8HMoXzg4ArjjqQXj9zrNk9U8bXd5G2LFW+KU/Sed68QnyQh
vOR8bj2I2bep0SohpyJLQed+Y6V5oTV49IFeTa496CZN7dBlhTGNkGnD8aOf
kDTO4LC5QVd6pNyriA1yWEmHZ/vJpZ+iBa188gabaHRSufXMCoDSpxJj186u
NXhIQxBtprzMrqM6oVxA2IIkAdvCA7il70bJUiPq8Xl9fuKZx3SDbARJLT69
kI3NLyA7JLGIZ2C9sqx+KksV8GTcKS8B2eyvVzEeBXrjgTQqp/kWpAE/7JqS
l5yM7M7fMF8pyzTsRFNJdkhNTt4QkX+LwlJZrh3eLKZlmQPecd+rfZ7kX5Jg
hAaZf36x3IpCLjHVA1S7zw1U4DoIJ7gPmEizBuHI4gqTgoQ3tPWvSWYRdsrJ
BM7uNH0Z9Y+0HVIG3HP2kSoWGat9WulMOKukRXwdKRy7cN0X4/vtpzzR8bgT
ezOTKc6GgqT+XJjU2oxlLRExqEvYTgep5wZwDFo9nageyZEzhjq+B9uSHykU
RMWN9f0xELa2rt/Dv1ScyPpjkqO8CyVXxz0atvLRxSjTqNSNRv1pyxPFDz08
5OdPUnDmyilKzFwKcCnejde/7jIQHPWRIx2CbefZR5WV9rtAk15HUF1NaiPB
1ObjQaU6Rgded913QHLnqSnREo3Ozbqq1AEgmahicRyYYDrKKSOZ2B1WRzwH
JHrCGJwPWcsYVHymqFl/AWOkLa2FwDjmdusB40J3DuMOoxNzLIcVMJa5Sumg
gLGU77ibSIqqR+H1+YlqMTIWQS8nPGyHdj0Krs/Vxlv9/Pf+aLWJOR8Vs0Vx
g2f7yZi2GgNlwvtU0pHkuZsR+Cr19Jr20xPvuOMHQJlNUBS8qtadIvsNppWT
JVqAU7H1juDfmEFH5fl+Bs+A58WhZL9THh15D5laGFz0ldi6CJ5jpKlJaeCZ
UA93BfshHwMuCzK19cSvQdeG9Bum+YSWJknRWK0YG8z08lKQIMLWd875kFFH
TlvlHgG2Mc/aAWAbZTCf/RwagJarwJIaGjWYokOJ7tSl+Murr7qFweUEj6pS
9nne5hyln+sI/H697yLrcxFb8WHAh5wLKh/iGIL+xA0o59VqdseopCPQcjWu
GxVbcLg7xL3ksM1cHc9cTHuscsc5wUaFjQOGzuwYuZdbDgRY7RJm5xEYqYcE
DrTFi+qqB9C3mwWNOGG4wRArJRKARinjnHOu6jRH4Leo6YTqx0lJJGIFoOzK
kpGAyEHfXnvYqYQdi5il9DdWDsP/WEGcHDAq8hqcWOb4GfsDtEs8CHl0bIQB
qHRnTFKys+u0bQCqBTDuv9Dfnn6nzwOl6oFxfcktqJJd+rmOQ5Mi/0W00GHw
gCgemml0TXUQg3J6o1xNBIhKSheeq2O+aKN67o6HKjrvbD+WMR1slTvO1jqV
kJ8+e6dPdF4mbLDi4Uo0CQB4IDtA/9emUz7zb/GItyNZTHbFMPoUTWIDoHHf
Xgg+AuUwoHrs8KCbSjXJsH+PDR90R44CZzBSu6BzuC1njQobMGQpwO5gkH5O
Ad14JSB7d8FoSDIWMZqigwbLJLw4yDTOgQZSEi58A1K4jGc5MrUoxcS00gX8
QMAcUq2SvWS5jvSu8dw40h+/0jcp9nmEdj2Ttd/tySop/CdXh42LMe8U3kCV
lD0sVwN5lZSKOVfHIxZvgUee2HbONjoTQX/PPOMctEoCdmSYAJ5aEAg1xpkF
pkzeAZ7IdBipltMhePm3GGZa0O3wjDh81+yVwBOU63J342Dbpj7UXZNt84cO
JTrAdqp2QzMbG+wLHHQVUygmzMAIF5gSYYdEpTVS3dYXEettmICpbM9SNLXB
CZhqDuQ27IRpYaVFj3NWGnPUOqMaSOnnMSxILlHYNICVuSzaz8VV3CqVc2Wq
1E3m9biueK4ce4Zzwshcd2458y67nHKdhlUl5wvIrQ4umnz47ZE2qTenQ8q3
csiAypM4QOyQr0KElNPZujVlwPcf4iYXcgAr+8m1g/ZwAYCmI0TSumG2RpsO
utdW30PD+jjC3oA7YHlNPRir3dvyF29YwnagSHUZCJU0hwzIkpFl3dCGO5hr
zG5dyMeZK1Znbd5BiXbu+VO+brCqYQxAN46d0hzgrschEfdgGaQRr2HKugzC
zyuND7sQCkzzQTGllA61obrsKHNURwHIjy4ZaMsToQwdyisBqiU3R1QLnm6R
6vMju3KCi1zHgXPZMdxe5zaFVk6qqJJTAec6jv6M6W+iGJAC1/KtHLaYM6Hm
W6P3weQBUI2CQ5JiFs3qDRzwoCDGSImMQTVbml/mx7sPtmU3YLdt2qKWfyad
i6QS4m58r8pgpBMXen3/bfcmECUMB+8xa6MBmjST8Hije8d2nFhdUb3C/y7d
PZh5cwt+0m3UbPbDccy5vbyaILbI5SUNkpO9HqKbdzaIsSqnz0033Qawgy/y
oMAuXlAHdhBMqgA54Alcj2QxRizbgS3ajlvoJYu4y67Pzfs5OWOuwzYVs9yQ
/aVups3HdKjk0/9ynVYHlZgBOsocxqo6D3E89xySA/58kkEpSEykl1L6NRXy
rzIYwhV2ynCyp7McDskKJtC8/+MUV2eIjBIHY8HBXaU9+SQerId+Dtac16YZ
crCnR6wOtMXp6dIAA+3olTZN5adLddxfYnjs76Ah4h4Ev3RmWf6Z4ZDsydl2
z8A5cZL/TJojzGfqugqu3RqzMug5ejQsjNqrXnHRCwoy9RW5FOTzdCAv7M+h
n9cO5Jg/w0YDIJNbVJcaqvNoALKmP+4olsnaza99jpyoruE0rqanesx9TtKV
69hTY51wIJPh31YprwNJOVm76h7ohIF2yTKNWZbzL0QEfqJhaQNBYmI6CJ2w
e7QxESh5XmU5jN+ydoNkrbEaZAVF4+6BFgkjk1kPC0Q9AXTQHZwiGrZfXaPd
kRnJrCbQoaQ4kPzqECptPcZfJ84o2GrLIGFgWhqLo90ZdzxgSbSnrGowbqzJ
2s5Fj0zzodFE0spEjGzzyIe/E9jTJ61JKixjLy1WeobwzW+63McBu7/c5H7u
9DlXAXvxGH1JRgJgj0H2GLDvFLfjdrCkOuQfY4yrdMG8gzHDXgtQ3HUsvF3w
kTWgi3O9unP7/EhpxUVSh08uC7i5jgzklQH3efKjF6Uc0rlOKqlKzrmVYc8O
FfZvsxGCLOceZjjynrgRIv1GgJBstWhJCE5o47LIoPmRyoacb8bkcwbRk5Mq
LJs56Q64FZjL0Iwn7YUvuICZRtITCjhOOqSCZY8uSXZFu2ELN2RcaArQo5gq
Mx+OF1E66RONe4D7uMtBl/LKdPs3rnBHy1XaG9ckgYWmc3gUfAMDAI519DAE
GKyg7DH8aDLf5k+yoUNWICI6vv71219UOsacZDQcCPiFjTjwY5SXrTweERTi
ikR1NQ/qYAJ63MopZp4ky3bwRulb1sui73sdeaGiMEMyQaM17xBEU89If5A7
nLGcYqBSs1VoHq4s/CbECAiVntOqpFNmfiSnwWwhJiQavZ8VErcNpiUTO/Lu
ysP16IcSVwU0ZJElU8fpo2czy7ijxFgRc0364GeCOMRRAMG3v+37CKP6GaKP
YjoD427gPgYlXfFpD2/qjMyvBykOepNkBMDCa4QI7qkiHzDMgbEj2y7zLQ2f
NktJYe7kZmRl09ockkenUMgXFxSHBBCOEVJid4K+zQYYt0naAg3UYyy33i19
HahL7IkrqaxkflhI3kiikjeX5DpBpMiLXkea3By9nOuILxRl5W78qkOKzX1Y
1hCXsFKRqAU7IlNAgiXcoTgNhMfgIEi/Ea8g+JNZgpSmCLT6rvP9EkPzrBqW
DtwD+0+3MGJysiA6m6QHnllrBRDk9zQf+WfWVFmLmbJ0OkX+GZECW7OUDD9I
pNqGdEkel3cckoCqddmwg31Gj51Umfnkr6GMa4VE8DN+iDCDzquTsFWw2p9T
7GWIR4pcAdusXYREiU/SQoFH2pWeM2UPyGvnXFlIjwv5wueLpuB8Hk6p6401
RCcGJIm/5EjYDH4xyxhsIL+cnwPS58FvUYZXYF/Z5ud15AyscZ19fpp5Plkt
gx+N2w9WLNNB0n20ToK65NaMgMR+Qu4m/LMKWcAFytr0vGAoA71Yg7BZS0iH
9aKHwKu2tr6XwX9/fzVqBc0hixzR7IgBvEIqQzi4FXgTjC3AIQCFZECY6UWh
xPqaQgT6O9PJ2FLtnkTx1LgvS4dnQQIEHrEG1jNz7+8bTKXWxcNpVKTchLC8
VIemLx8oO0H9DNABP3SCS5EQCGoyqxNS+pJSF85JqZDaH/tlxXHsx+3DRnVg
P24ylf5aTX6DSSqHUFm80lbW3AAxzE5MSx8vMp3XSdkpyb1K3a8l45MKoTQh
b3SqZ46QK9RMtn7ot87oXazgmKgxlUR7Ajv7OAYM2tKcEmSsuScRmWhNWhXy
tvobYy3tN/CPEI8/M0go6W8kZYlx8G4t/3o96tWZnBo6WNFmyCFsztQSfvbj
9V5xkUcT+5bfGhsV91fxG+keGe+a/iFHE2MFZadvMNVEB5P+jTWHuBsOBVam
alrKPepQCMKmNZpR+qoWmbjWemXBcMgj1MVFjwX557RDPuaceO2fXwLk44YJ
iXw5Y1eGvIQFFEJdsjmbqkMDBMf2c8xznstr2w4pzAfIlMOqS91/9sA8GBoZ
eMVeyQgmyDHhYiG4PmQqZ9ZFMsINS4EGkeVC/DTYuX1rjJbo7OeoHsBgWnPL
FnZm/pYMhrpg3LZsNRp0/Vl8HFOim93v75EfEpcwlBM9jsdTJKJuxDT+MZ7d
JCBQhEQnHQzR3ffo1MgRWJUf0GCPQvP6rSt0+ifbTvDF2i/2gq8O0zVhN8I9
rElswiNI/AzGweTywiQGuE3hxyOmKdWUK0jhVaVOjxTKOyjWywrrWA8HcEip
A+txK6CGLieMyVgXAKLJRzw2+dVyA8RZ2jGccV1UhVL3XxJrxc8A+yAKxPPm
v7TmxfcxN0xH0cIPET/zXFf51QawRi4/xGFJAVElJUeIgIW3nuSszKN0B4wv
LN9iNOJpanvInHm/gi4GFlNSPZl20E1FcgpisnPcHnYpR8IgXB4Kw/BtPeRt
rHWSH3lbyhedf4ZHqJ3sI7ZxBelsDpX0wxCFwFOQiqEd5xsGYrhL3eM/6LOn
2SDW1XQV6C76bWTnUeaR15TfYn4HXQr460pdik4asWuLLNiNfgip33Wz+GAS
2WNImuQOD1TOOxVK+KFjV/aH4kIsdf8xkQTSJIOGwwaBiW1JMpX4Rk7DKMuI
moa3RUYM1kGJJLj3iHHEbivZDdsiZ9OwyQfREXONmAOmArZOm1jjqhR6Kl4e
Ha0EeDvFq+x6y7NL29QOWGcKqMzgJTOivJLELP1p0XYC++dtrLXqjUtDf/Bh
FwRYUJ56thOnPQJ40T7FruHwNg6AlxhtpD2GgchNaDOfxpVfiRYgDZPGrdY0
VeL2UoDELYw2XlsGTKFXMV+EovTa0kln7ltsEyVEsN1y7orlYJrukGEy2bYM
FvyspS6euicJIR0+nQErG0AJyS2A/aVkH0UelSCBF1GuCxYm9BOZ9/m3GDBO
BtnuCItUti4WPjFBQoAJKGVkX+l79t/m0Sn44WAlSU7Kw9gZLVr3yXZb2WxB
dLzG9JP6lPF0n1CtydHMp+a6x+X+7h5Rj7B4xi1PzKpCJzgqS3V6LRn1jGsR
L4VCICOqJD5CcHJyzdwi+JYUHphVOv8wo5bFCecji52ColQQAHVeeWdEAp/T
gmUM4I0FtTHS1qDZC5lPbUdm3G3vDDJbW9H/dWlBSb3PP0u9ij9rV5qtAlie
pXjQG8xxQhWDJvkPEYgcCEIn4qhYI1GFEgkYfyGJtHIiDhUsoJj78KSSAoSR
8h1vA21HS+jKZ9jm3+J2Dy1SCt6PWQ8gKCOu+5dqIUQcRz2wHmKmijj2befV
4a2+IG6nk5f18790TqH1mC5wtqg+hKWEDSGwOnbtEhRIfDjGBT2nlYJYgZro
9SR3wnDQHyDTikH0lPptEq1HiUQX+AfPvXq6VLM98Uhec3sA8GkdrDH6VpKJ
JyNMwg4MpHD77CDNP2uWo6VShJ9SoOjnX0gWScw0MFh9CE1Baz1myZAz1JUP
rfG4RzSyUkIAEusyJjfTj+DIMdqfYKfpYk1T8fx6JyZKDZuc27KU2XiiDcj2
JhuF8hX9fFia5KhUoLExOMQtoSO6A5RmHdDhDpCdGk+FW2j/tccfY4IPR7Sl
v9HXJHVG2mKXkjrC6iIxG7VenSS2ReBD6kPFVZwZPdUAaNXRivqm0tNok+pA
UxIQ71XGOObMt3cDEjUPJkrzDcfRB1d2E5T18+ddu0TYEkgQygjfUK8YEa2H
BHyzqjAq9BamTET8k097n8cbFftPPk88dwYbqIot0bllh9r2Kalo5RVgdOgN
Yyi1vUSmtn65jKFWF0FXa5nhr3NnvBpHvKY7EO7jEcKSMZDHRGOs7cTVELdP
2KOBytcqrLRSqFj+THwHrzGNsy4lC3hraXRM0GyP92Aj5VdnI+Ew4awzHUk6
guyIMU2uEb47B2QjLwRT5v+nPDspq4lYIFHG0n9RYPHXSc9gOcHgIiJTSSHe
+VOcPV83cB6KqfCTjYTFoB74m2OktRRLLv9vpU4TXGIaqtPmjMoKTfdgkglQ
0eCwHhtakWHINSjSlZaLrbyeq1uja8QioCU/FWQgUS3RCxJVFTLDJKJcHMny
wwEmMWRWz5bFPIlCQ8yqqWCvPLL3TqPDY3BoJizkNXAWITKySWdipHeUWBxX
BIk9MG3CgwDxl6iYoMMcdqYekAitdUdy6cPKMEhq0Ndlhrpu3TeQwmP9FFw/
D7oq1lga9fUf/vBHzIkGPUq6YjRG+nABLQRyCBjnbb2tNCKeJdoxFyfkLG95
qMMB9cnfkROa5N9i4EihAde3IVimSWNqbIVhlhRBNCjDLPtYCWD3OtIf2wLi
dCKSjEWiqMCszey/XQYz6gWSGupZdQOeAJFLujF0I/VH6NAkGCm/p1TH9MIf
Om8/5J5UxibaMzQGOveGpb7zRBfWA/0/7VLK/ZSNKm5NLi6EsHXgUMyq6mxN
WkaVUrPfR2Mmae0ppU4WGskx0k4IciDxvBZjG0vcS5qqEnrXYjw6jl457nj0
x2Py1BFwANgVe0md5LLCdr2fwkUMKRB/U8mqUIYcbFZFjE5L0eWXb5wVqKCU
1gdKP+LhSLUfrYMfQJJo5adLA5BiuKTPJbOzfj6cBi2eV0osnwQhEbZE5Y0i
cf9CaWDMyWckdA9PkmifkvuW5rJ0cWn8PM/H4eSVj0HrbK6WiCIjiGYUD/6/
zWOR5w8luqmG6HtyYMD9SjPjYTJHskQRF3RpnppGPGj1xIm+tIqW09JatZ32
A7KpTly+h9nge4+ppjxaJyXqGJY9aqaoCJKr5R3U5vVU8YvlnbjRFcN4t1N+
1wyFe83uzk7KQjjo43nv0oZIiQpnea6HwA+k+cbMJz1dAazpC79SXo3NsFf7
jpvFmbQ2yqB41KZ+aHyqmZmabObXdtyZHQf1lMJBYhSG5FDkbjEP6T4qkkmV
cjz98avlZUTrnBNae89T9TZ7aGcbzeTojPWxqbmnTyqMKmZKkbVRliMxZh2E
nJ79T6VtnPag8Mp/ptSqNevX3uZCMzw0pSa6LtA9sv1tAYuYlf/vYzfw2Ckw
+61FR5vx0eH0menlrV7zebgQCRYgEYqYn3QFaXoq/095DrnbxE2+TtrCZnO+
GR6eatZ3G29R/AxKoLQYzJCcnflfj/f6gs6J0WZ0dKQZjTnGj/EZ2S+0PEnb
4/QcPoONURsO23LY9Td7O1vN5uZms766poxfvb7AGVnBmJ8x9N/LzSga2vm1
zxrMeySc6l3KKNj2Hoy2B3yPnJpl6/gx3vP+fd/Taw9y+u//4D3FUaQURPu8
h+N2Jd4LQ0qgk97z6+VmNMoDvkfsQniUsNjzPTrQ9gDvISbK+8V7iGjtfE/i
z4g/khbFZu+886789JHyNA47JQrdpxUsw3KRFHGi8z3L5T1fOMh7JBa29Yb3
YEMyVb79PYPxPemSqEFSguHyOP4WW8CP97iWJfLA8TheNknvbY8PdD0u5Ss9
+5DyLKrvu2av5NmfKz9p/svzXXk8fAQ4iRWT9OzfdbwnZzXVe3RpxdX+vvTs
b5ZnieGUC6rt2X5/Vj9zKMFDy2PEJ8mu0vGYzEk8xuZLHsM9bGy28zF59XmM
TCQ8RtSUwm07HlsKj3FQCY9h3FFgRedjl13v40KeDB7DO661suMxudn4GufE
1sdyyIJMOfs8xg5tHsP3IHWq4zF5fXns1mJX5zG8rToHu+OxS8pjukhqwGPs
NRUOOh+7uH6NvSk8Rj47RZh2PCZLE4+RyIPHUDMUnHeMx3SVM/78MTYh6aCm
jscksfI1bH48Jpu0bKLBZ89j8lrwGIbfx8Rb+pILtzQoU0g+j+GAWhjCuGIg
9ALj4e1vObCqdO+ON3W158A6DG+SfVAvUQxNzzcdV9XgTReWNx2zTcfVDXiT
DCN6iVK+HKN3x5HiTyxv2l2ZaWbyV9w8Kdsy7cyricqjyyfuoei9t9nMz840
s7OzzdT4aDMyNiVZt/OTf/anHR36JwrT32xmR8eaxc2dZn1+spk8utrYKuAd
lcNDX5X9Nn51Pwm52V5uJmdWmu3V2WZ6aRuJT4E0epWSJ8VXkex403owMTFu
Y73tcugF5ZnXHuMZjfPR0XTMQn3mI2v5mddc2vYM6Webve1ma2evbT5lDktk
89r2Z37ugL9LA9LvyrnZ63d5DfT764/1+3z5/XW9f1eIqH7/izcs9fxdDK0X
3fC78irpJ4VT9/pdcSxJoTE+2ut3GcPT72+8vOfv4vr6Xdsye/0ub5F+l2W5
1+9ao/S71qhev2vp269/CrPXTyaq9fxdC7V+10Ld63et//pd63+v3yWN6HeJ
Fb1+lyt1v/bJua6ftHmk1+/gXMnZ4u9RXi0l/+Mx4fcTmo6vHuipfX5P/z7r
nv37zPJuUebOdrDNGHuo8uVe45Lm7m665ySe291ptnfyduOBHu+q9203mxub
qe5f9LjvhLa67cTUYFp79o3SFOcAu9aO0iYPe0j2JW/y3inl1p2tzWZzK/M8
Tmfu6BqrUOzNif692spspi7/e0Cj1XF+ajRDaWi0mVvOy8Xq7FiqG5lcbO7Y
Wm7Gh1oFbkPN3Oq2cdr5Zkx1Q2PN/Or1zdHxoXz/+KQtArpvolm/baUZTc+M
NEc/Np/r7RtHV7cIAZkft582q2t+Y3G6dQJrnAwRe3F8frbZ69GU1flpW4fs
75HJZmV7r+tvlbWjE3b/cDM9O92MWBOWtrruK/Pya83K3ER6//D4bLP62bly
z3SzsrqQuzM84e/V8M1NjKT7x6YXZBXq2UatjSOSoWammzETAubWdtq+s7m3
0yxM5fcM2e/65vDoZLO8tdsseX0e4uGxmWbDvjFa3j8+Od4MqX7yA83seDYT
jc+t4F7W5K/akpxuGZtsFte2U7Nnx3LXZ6fGmqGxOWt6V1daRKAsz4zn7gyP
NrPLm6T7kUjTa+Ln//74I3jJp84LANrSzOeJH4wTn8r20lQzOrMKZnqMb2no
yc3y3GTqqOon55aP9/ejMjE8Nf1PjoF8bNLwTFaDdkwOS/2Yyu6ExYncvxWb
lb2d1WbCpJ1VI6q1meFmaNqe2VtL/ZtatsHbWkhfWdzctfdM279Hm1WjwR2T
A8r9hHcCjqGplULQ+TXDUzYLexKiZmx4Sw6znzlGK/aaGRuTqVUsle1/723M
p57MlXHdWZ60YZ5tdut9HKoj+WpaC296dDf/vJJlvJWpITW8DPeD7L2rNrlD
RWI/xgB9c6mZPpr3kS6OtyTntn1jd202L6Qr26l+zoSrocklsaxm2r49sbjl
IzI+v14GcyiJnRvzhsuh6UYcZG9NkzUp3ObmneLNny6jsDo7kpq3WcZo3j41
qqbVbrhMl54VnqdWSnf/3THn9wBDlrlQB046Jri0KlvwYzuPgTtiyjTZOvmr
NUH2/2P+3Xp0RPzhRMH6aXhmLY1Cos6RZIBPv+WelD0atvIYm5Icq0OZQOvS
lLGcMRP3d6p2tLM6neYFzaDcTzDE+tGxtBCMGvtJgNxZTo+uOqc33WR7u6ml
oyX3Ly3JCJla2fbb4t+bixNp2Db4dXUmLQIrO35fBT1f2O56zWpufIuIgXY1
sKNlD/Ax2jFlbGo0s6nJxc22T+QBqOOz6uPJp3fagbS33oy3RAsmfiSc52cT
LeT3eOvaWr+dXjE8vQLzFARbY/OxEwHyOwnyxv5K3U/1nN0DDFac9Ti9J5Tx
9tk1KhI/HhsbNQawE8ez5QtYGdA2NAynXh3v73a4/1L9adL0xDQ3xpSrXJgU
5pYR1/T0dDM1NdVMzy1JaGrDe7O71awuzzeTo1myUavDPHSNQrY/ZEV8a2HC
sLCVRmTEmMfElH3HvjU9PdXMLW0g5Ry7KTuFn7nK3fb31pJx9daUNwPAL+/4
fa39EO98sg3xxuZ3V9MEruzuM0zG08ZaeUjnljfa2qdv7KxM2RDNdLKEcM9O
F5i2N9eaxbnpZlSr/XB+NrGW1j6QLytIhXzingbh0IsyCv+XA6I1OtXMz883
i8trFWs9JvoAo9YF/R4Tne8XKQ7PmcBuspyR5N6xAVg5/T8J+rMjWd6amhov
8tlMs1YmJLWmLLsaQOaqzpO1zl49NCtWtp7WyyVYvc35mkZtb9sk+irI7Kbf
RpKM1OytNGOjkjgyOcyYVLy3tZRkQ1uD81z+XM9mbG+vJu7XGp9rlhfnm0u+
9Lm2v5e+9AljIkPFmla6OTLb9dzSxi78Z7f8lObRmOtEuu2orcabaU41gKB/
YylLgZPzS83C0YVm8S09RmpnyZowllbsneU5kwr22r+RRLzhJp3NWSSLPGk7
SXKYSnx1r2LL2LO6lOSGtelE1du90H+fplPg2FwYT01KoNxeTgM8vrDR1Q1r
YWGxgQxMYF9emjcBI0N+afOOnpN+gOHrIPKek57eKaYxuZStvPPjY2mIjgHG
fyYyKGtcvnM7t2Zktvxtwzw/OdaMjlrLjVQW1nc6eiJxbbYZGRlrJkx5HVav
JbKVlb41PNlceY1JvPbb2IzdL2VFituQLJ56eMmErKFmemkzKTITo6PNiP0+
YiO/sdtABr2aIZV7YsReO5H1vef/7Tva/p6wSd5amTOpajSFCwyPTTdqfedz
dh9ksL44Z+rocJK9FWUwNjLcjBnbSQy3ldTkgpFfTE1alE1/aCg1S7+v7PQa
re3m6ISNztSk3TuW2Gb8Thpja+aI6ZIyviZV1yZuc3E6QX5ufddgO5uwNrua
5aDFKRmnJ+wdprYt5MD5QAotl0/tXrVH3RzSMJiALWPPkumvI6Pj1i9Tl2d1
iGivvhR8/XLATwFFkdeHppZ7TH5zkGHsAlGPyU/dTJrpwkYimZnRIRNVFgsa
xpOUNDxsw7y2U7jTP4EWDjUsZk4LRQGwbhbLel9WWXKTq3FsV9LosDhB6zGl
bj3ch8Fsr0qqbvSC4dmi2bq3t2O3KCGlHbtZHzaadCdUbMfJ3g5ThUYmmuUt
FvST/F1D3v1j/s1wZFPYiemn1eLMkoViVraiJNGM2Sf2MOVtry8mnlVHacAk
1O0iNhgnGMkS9C97K1cSxmdt0n62Rx0js7O2UKwAy2UErU87681sMrBMe0yU
Va8fNSjPLDYLk0mdPrmM44ZRzZA3fiqbXYZkrIpzV7/cq0eYEXfXjmZD0vy6
G1c2jZGMFHve/Orm8f5+VBzePMsba2vN+sZGs76+1qzp35tbydUI2vZ2TTda
tfVpeaMky+5rNlcWm6W1HGzxS46i7WZ5flFEU8c01PX5+3bsm8vN4spmHVOJ
IBurzeLCitbIfq+WRXC2mZmdb1Y3d04uM7tpLV1fry3e2Nz21sYvDvboAdjd
3VAL0gpXOJWNpb1rzd67Ye9dXds83t9lLFs/8f8BmPTSoA==\
\>"]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Painleve IV", "Section",
 CellChangeTimes->{{3.483792607173275*^9, 3.483792609054174*^9}}],

Cell[TextData[{
 "The Painlev\[EAcute] IV differential equation is\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "''"}], " ", "=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"u", "'"}], ")"}], "2"], 
      RowBox[{"2", " ", "u"}]], " ", "+", " ", 
     RowBox[{
      FractionBox["3", "2"], " ", 
      SuperscriptBox["u", "3"]}], "+", " ", 
     RowBox[{"4", " ", "x", " ", 
      SuperscriptBox["u", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"4", " ", 
         SubscriptBox["\[CapitalTheta]", "\[Infinity]"]}]}], ")"}], "u"}], 
     "-", 
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[CapitalTheta]", "2"]}], "u"]}]}], 
   TraditionalForm]]],
 "\n\nThis example is also based on an example in [Olver 2010] constructed \
from the RH problem in [Fokas et al. 2006]. "
}], "Text",
 CellChangeTimes->{{3.48395373459581*^9, 3.483953799439085*^9}, {
  3.4839644178058863`*^9, 3.483964494215825*^9}, {3.483987533175851*^9, 
  3.483987548248561*^9}, {3.487491124182775*^9, 3.487491235393178*^9}, {
  3.487504240874363*^9, 3.4875042546764297`*^9}}],

Cell[CellGroupData[{

Cell["Setting up the jump curves", "Subsection",
 CellChangeTimes->{{3.487504234085321*^9, 3.487504237612719*^9}}],

Cell[TextData[{
 "We choose an arbitrary choice of Stokes' multipliers, and the constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "\[Infinity]"], TraditionalForm]]],
 " and \[CapitalTheta].  "
}], "Text",
 CellChangeTimes->{3.4875042469579687`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalTheta]\[Infinity]", "=", "1.123"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTheta]", "=", "3.43"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "s", "]"}], ";", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "[", "1", "]"}], ",", 
      RowBox[{"s", "[", "2", "]"}], ",", 
      RowBox[{"s", "[", "3", "]"}], ",", 
      RowBox[{"s", "[", "4", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Array", "[", 
       RowBox[{"s", ",", "4"}], "]"}], "/.", 
      RowBox[{"(", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"s", "[", "2", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{
            RowBox[{"s", "[", "3", "]"}], "\[Equal]", 
            RowBox[{"1", "/", "3"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"s", "[", "2", "]"}], " ", 
                 RowBox[{"s", "[", "3", "]"}]}]}], ")"}], " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
               "2", " ", "I", " ", "\[Pi]", "\[NonBreakingSpace]", 
                "\[CapitalTheta]\[Infinity]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "[", "1", "]"}], " ", 
                 RowBox[{"s", "[", "4", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"s", "[", "3", "]"}], " ", 
                    RowBox[{"s", "[", "4", "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"s", "[", "1", "]"}], " ", 
                    RowBox[{"s", "[", "2", "]"}]}]}], ")"}]}]}], ")"}], " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "I", " ", "\[Pi]", 
                "\[NonBreakingSpace]", "\[CapitalTheta]\[Infinity]"}], 
               "]"}]}]}], "\[Equal]", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
              "2", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]"}], 
              "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Array", "[", 
          RowBox[{"s", ",", "4"}], "]"}]}], "]"}], ")"}]}], "//", "First"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "[", "1", "]"}], ",", 
     RowBox[{"S", "[", "2", "]"}], ",", 
     RowBox[{"S", "[", "3", "]"}], ",", 
     RowBox[{"S", "[", "4", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{"s", "[", "1", "]"}], "1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"s", "[", "2", "]"}]},
        {"0", "1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{"s", "[", "3", "]"}], "1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"s", "[", "4", "]"}]},
        {"0", "1"}
       }], ")"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]3", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.505468508419202*^9}]
}, Open  ]],

Cell[TextData[{
 "In this case EE ",
 StyleBox["is",
  FontVariations->{"Underline"->True}],
 " the matrix of eigenvectors.  However, we know the eigenvalues, and must \
ensure that the eigenvectors are in the correct order.  "
}], "Text",
 CellChangeTimes->{{3.487491255162438*^9, 3.4874913213356867`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ord", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dot", "@@", 
         RowBox[{"Array", "[", 
          RowBox[{"S", ",", "4"}], "]"}]}], ")"}], ".", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{
        "2", "I", " ", "\[Pi]", " ", "\[CapitalTheta]\[Infinity]", " ", 
         "\[Sigma]3"}], "]"}]}], "//", "Eigenvalues"}], ")"}], "~", "NEqual", 
    "~", 
    RowBox[{"Diagonal", "[", 
     RowBox[{"N", "[", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "I", " ", "\[Pi]", " ", "\[CapitalTheta]", " ", 
        "\[Sigma]3"}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EE", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"Array", "[", 
             RowBox[{"S", ",", "4"}], "]"}]}], ")"}], ".", 
          RowBox[{"MatrixExp", "[", 
           RowBox[{
           "2", "I", " ", "\[Pi]", " ", "\[CapitalTheta]\[Infinity]", " ", 
            "\[Sigma]3"}], "]"}]}], "//", "Eigenvectors"}], "//", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"ord", ",", "#", ",", 
            RowBox[{"Reverse", "[", "#", "]"}]}], "]"}], "&"}], ")"}]}], "//",
        "Transpose"}], "//", "Inverse"}], ")"}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4874913760775547`*^9, 3.487491391245364*^9}, {
  3.487492426546921*^9, 3.4874924274769087`*^9}}],

Cell["We can now construct the jump curves.", "Text",
 CellChangeTimes->{{3.487491330535358*^9, 3.487491335446926*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "^", "2"}], "/", "2"}], "+", 
       RowBox[{"x", " ", "z"}]}], ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]x", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"(", "z", ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"E\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"x", " ", "z"}], "+", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x"}], " ", "z"}], "-", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"E\[Theta]x", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"x", " ", "z"}], "+", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "z"}], "-", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Em\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x"}], " ", "z"}], "-", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"x", " ", "z"}], "+", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Em\[Theta]x", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "z"}], "-", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"z", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"x", " ", "z"}], "+", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{"_", ",", 
       RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {
             SuperscriptBox["z", "\[CapitalTheta]"], "0"},
            {"0", 
             SuperscriptBox["z", 
              RowBox[{"-", "\[CapitalTheta]"}]]}
           }], ")"}], ".", "EE", ".", 
         RowBox[{"(", GridBox[{
            {
             SuperscriptBox["z", "\[CapitalTheta]\[Infinity]"], "0"},
            {"0", 
             SuperscriptBox["z", 
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}]]}
           }], ")"}]}], "]"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"I", ",", "1"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           SuperscriptBox["z", "\[CapitalTheta]"], "0"},
          {"0", 
           SuperscriptBox["z", 
            RowBox[{"-", "\[CapitalTheta]"}]]}
         }], ")"}], ".", "EE", ".", 
       RowBox[{"S", "[", "1", "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           SuperscriptBox["z", "\[CapitalTheta]\[Infinity]"], "0"},
          {"0", 
           SuperscriptBox["z", 
            RowBox[{"-", "\[CapitalTheta]\[Infinity]"}]]}
         }], ")"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "FullSimplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"I", ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", "\[CapitalTheta]", ",", "0"}], "]"}], "0"},
            {"0", 
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", 
               RowBox[{"-", "\[CapitalTheta]"}], ",", "0"}], "]"}]}
           }], ")"}], ".", "EE", ".", 
         RowBox[{"S", "[", "1", "]"}], ".", 
         RowBox[{"S", "[", "2", "]"}], ".", 
         RowBox[{"(", GridBox[{
            {
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", "0"}], 
              "]"}], "0"},
            {"0", 
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", 
               RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], ",", "0"}], 
              "]"}]}
           }], ")"}]}], "]"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "FullSimplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{"-", "I"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", "\[CapitalTheta]", ",", "0"}], "]"}], "0"},
          {"0", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"-", "\[CapitalTheta]"}], ",", "0"}], "]"}]}
         }], ")"}], ".", "EE", ".", 
       RowBox[{"S", "[", "1", "]"}], ".", 
       RowBox[{"S", "[", "2", "]"}], ".", 
       RowBox[{"S", "[", "3", "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", "0"}], "]"}],
            "0"},
          {"0", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], ",", "0"}], "]"}]}
         }], ")"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "FullSimplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"s", "[", "3", "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"2", " ", "\[CapitalTheta]\[Infinity]"}], ",", "0"}], 
           "]"}]}], "1"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", 
        RowBox[{"-", "I"}]}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", "4", "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[CapitalTheta]\[Infinity]"}], ",", 
            "0"}], "]"}]}]},
        {"0", "1"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"s", "[", "1", "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"2", " ", "\[CapitalTheta]\[Infinity]"}], ")"}]}]}], "1"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", "2", "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[CapitalTheta]\[Infinity]"}], 
            ")"}]}]}]},
        {"0", "1"}
       }], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.483793009602326*^9, 3.4837930760202723`*^9}, {
   3.483793106073081*^9, 3.4837932730878143`*^9}, {3.4837934926722727`*^9, 
   3.483793507619803*^9}, {3.48379397995684*^9, 3.4837939804602747`*^9}, {
   3.483794014743149*^9, 3.483794042638172*^9}, {3.4837940917858343`*^9, 
   3.483794102845787*^9}, {3.483794136540511*^9, 3.4837942020504093`*^9}, {
   3.4837942322848663`*^9, 3.483794234728747*^9}, {3.483794280304882*^9, 
   3.483794345637453*^9}, {3.4837943800446863`*^9, 3.4837944654101458`*^9}, {
   3.483794517714616*^9, 3.483794571270279*^9}, {3.483795861714726*^9, 
   3.483795891983179*^9}, {3.483860879483436*^9, 3.483860895420171*^9}, {
   3.483953805960238*^9, 3.483953819116086*^9}, {3.483960307806177*^9, 
   3.483960616695137*^9}, {3.483964675460752*^9, 3.4839646865805407`*^9}, 
   3.4874912494790297`*^9, 3.487491326158073*^9, {3.4874913994112*^9, 
   3.487491400342952*^9}, {3.487491523065002*^9, 3.487491609813168*^9}, {
   3.487491648235111*^9, 3.487491785745926*^9}, {3.4874918438508472`*^9, 
   3.48749184890058*^9}, {3.487491910160305*^9, 3.487491911174871*^9}, {
   3.487491961194175*^9, 3.487491966729265*^9}}],

Cell["\<\
With the jump functions defined, we construct a list of Funs.  \
\>", "Text",
 CellChangeTimes->{{3.483953828857501*^9, 3.483953864633197*^9}, {
  3.484032787204821*^9, 3.484032789354413*^9}, {3.487491406255827*^9, 
  3.4874914132790613`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GG", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GG", "[", 
     RowBox[{"x_", ",", "tol_"}], "]"}], ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{
            RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"I", ",", "1"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"I", ",", 
            RowBox[{"-", "1"}]}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
        
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{
            RowBox[{"-", "I"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
            RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Infinity]", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", 
              RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", "I"}], "}"}], 
         "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "\[Infinity]"}]}], "}"}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"\[Infinity]", ",", 
            RowBox[{"-", "I"}]}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Infinity]", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
           RowBox[{"-", "I"}]}], "}"}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.483793864029574*^9, 3.483793907987432*^9}, 
   3.483794073095243*^9, {3.4837941084290543`*^9, 3.483794121231139*^9}, {
   3.4837942042813168`*^9, 3.483794204677348*^9}, 3.4837942460578136`*^9, {
   3.483794299933914*^9, 3.483794310477766*^9}, {3.4837943589644413`*^9, 
   3.483794372507979*^9}, {3.483794430117157*^9, 3.483794439898316*^9}, {
   3.4837944749704742`*^9, 3.483794503168515*^9}, {3.483794535298622*^9, 
   3.483794584695809*^9}, {3.483860726808217*^9, 3.4838607418966293`*^9}, {
   3.483860835559532*^9, 3.483860851448288*^9}, {3.487491446790201*^9, 
   3.487491464327375*^9}, 3.4874918213774853`*^9, {3.487503140331547*^9, 
   3.487503142754755*^9}}],

Cell["The jump curve is defined over the domain:", "Text",
 CellChangeTimes->{{3.483953828857501*^9, 3.4839538716121073`*^9}, {
  3.4874914287173347`*^9, 3.487491438891337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DomainPlot", "[", 
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"0.", ",", 
     RowBox[{"10.", "^", 
      RowBox[{"(", 
       RowBox[{"-", "3"}], ")"}]}]}], "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483860743700931*^9, 3.4838607469884157`*^9}, {
  3.485957219713706*^9, 3.485957225323965*^9}, {3.487491828710802*^9, 
  3.487491831749284*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, -1}], PointBox[{1, 0}], 
    ArrowBox[{{0.999999995, -0.00009999999983333334}, {1, 0}}], 
    CircleBox[{0, 0}, 1, {-1.5707963267948966`, 0.}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, 1}], PointBox[{1, 0}], 
    ArrowBox[{{0.999999995, 0.00009999999983333334}, {1, 0}}], 
    CircleBox[{0, 0}, 1, {0., 1.5707963267948966`}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, 1}], PointBox[{-1, 0}], 
    ArrowBox[{{-0.999999995, 0.00009999999983366683}, {-1, 0}}], 
    CircleBox[{0, 0}, 1, {1.5707963267948966`, 3.141592653589793}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, -1}], PointBox[{-1, 0}], 
    ArrowBox[{{-0.999999995, -0.00009999999983366683}, {-1, 0}}], 
    CircleBox[{0, 0}, 1, {-3.141592653589793, -1.5707963267948966`}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{1, 0}], ArrowBox[{{1, 0}, {3, 0}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 1}], ArrowBox[{{0, 3}, {0, 1}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{-1, 0}], ArrowBox[{{-1, 0}, {-3, 0}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, -1}], ArrowBox[{{0, -3}, {0, -1}}]}},
  Axes->False,
  ImageSize->{Automatic, 450.86400000000003`},
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.4838607478251953`*^9, 3.483860899977457*^9, 3.483959303516871*^9, 
   3.484041264633713*^9, 3.484313260980693*^9, 3.484313308924719*^9, 
   3.484316155191978*^9, {3.4859572182357273`*^9, 3.485957225760632*^9}, {
   3.487491832870575*^9, 3.4874918573761597`*^9}, {3.487491915218359*^9, 
   3.487491922744276*^9}, 3.487491972667882*^9, 3.487492488790299*^9, 
   3.487506518400667*^9, 3.4942287988536*^9, 3.505468509083914*^9}]
}, Open  ]],

Cell["\<\
Again, we want to fix the length of to reuse computation.   We are going to \
compute the solution over the unit square\
\>", "Text",
 CellChangeTimes->{{3.487492033035203*^9, 3.487492127178665*^9}, {
  3.487496597063512*^9, 3.487496600183399*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tol", "=", 
      RowBox[{"10.", "^", 
       RowBox[{"(", 
        RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"lngs", "=", 
     RowBox[{"Max", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "/@", 
           RowBox[{"GG", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1."}], "-", 
              RowBox[{"1.", " ", "I"}]}], ",", "tol"}], "]"}]}], ",", 
          RowBox[{"Length", "/@", 
           RowBox[{"GG", "[", 
            RowBox[{
             RowBox[{"1.", "+", 
              RowBox[{"1.", "I"}]}], ",", "tol"}], "]"}]}]}], "}"}], "//", 
        "Thread"}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", "x_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"I", ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"I", ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
           RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", "I"}], "}"}], "]"}],
        ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "\[Infinity]"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", 
           RowBox[{"-", "I"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
          RowBox[{"-", "I"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.487492067408614*^9, 3.487492069830761*^9}, {
  3.487492241346529*^9, 3.487492241985043*^9}, {3.487492492962418*^9, 
  3.487492494369644*^9}, {3.487496588588127*^9, 3.487496593263735*^9}, {
  3.487503143502234*^9, 3.4875031455699472`*^9}}],

Cell["We also need the derivative:", "Text",
 CellChangeTimes->{{3.483960625491145*^9, 3.4839606293240337`*^9}, 
   3.483987557958696*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "Gx", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Gx", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "[", 
     RowBox[{"_", ",", 
      RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
    RowBox[{"ZeroMatrix", "[", "2", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{
      RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{
         RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"I", ",", "1"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"I", ",", "1"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"I", ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"I", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{
      RowBox[{"-", "I"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{
         RowBox[{"-", "I"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Gx", "[", 
      RowBox[{"\[Infinity]", ",", 
       RowBox[{"-", "I"}]}], "]"}], "[", 
     RowBox[{"x_", ",", "z_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"G", "[", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"-", "I"}]}], "]"}], "[", 
        RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGx", "[", "x_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"I", ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"I", ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
           RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", "I"}], "}"}], "]"}],
        ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "\[Infinity]"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"\[Infinity]", ",", 
           RowBox[{"-", "I"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
          RowBox[{"-", "I"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483960640309884*^9, 3.4839606927226353`*^9}, {
  3.484313313529221*^9, 3.48431331544692*^9}, {3.4843134862576733`*^9, 
  3.484313498298541*^9}, {3.4843135976521473`*^9, 3.4843135978548527`*^9}, {
  3.487491991319083*^9, 3.48749201301987*^9}, {3.487492160373341*^9, 
  3.487492267013632*^9}, {3.4874926021016273`*^9, 3.487492602778247*^9}, {
  3.48750314629137*^9, 3.4875031486310453`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Computing the solution", "Subsection",
 CellChangeTimes->{{3.487504279627399*^9, 3.487504286626753*^9}}],

Cell["We now setup the RH solver again.  ", "Text",
 CellChangeTimes->{{3.483953828857501*^9, 3.483953916827566*^9}, 
   3.483960288007979*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"RHSolver", "[", 
    RowBox[{"GG", "[", "0.", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{"GG", "[", "x", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483704059473811*^9, 3.483704084796417*^9}, {
   3.483860782251835*^9, 3.483860785559648*^9}, 3.483960286188491*^9, {
   3.483987566522072*^9, 3.483987569294883*^9}, {3.484313366053083*^9, 
   3.4843133662712173`*^9}, {3.487492272312549*^9, 3.48749229508356*^9}}],

Cell["\<\
Now we find the minus limits of the solution to the RH problem:\
\>", "Text",
 CellChangeTimes->{{3.483962940417666*^9, 3.483962951385665*^9}, {
  3.483986166815475*^9, 3.483986182006057*^9}, {3.4874925256798983`*^9, 
  3.487492529799597*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cm", "=", 
   RowBox[{"CauchyOperator", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "R"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPhi]m", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"\[CapitalPhi]m", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cm", "[", 
     RowBox[{"U", "[", "x", "]"}], "]"}], "//", "AddIdentityMatrix"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ux", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"Ux", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Ux", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{
      RowBox[{"GG", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalPhi]m", "[", "x", "]"}], "~", "FunListDot", "~", 
       RowBox[{"GGx", "[", "x", "]"}]}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483946445977253*^9, 3.4839464481927958`*^9}, {
   3.483946487355945*^9, 3.4839464971736526`*^9}, {3.4839607581814833`*^9, 
   3.4839607629604607`*^9}, {3.48396117848172*^9, 3.483961201185988*^9}, {
   3.4839629216625757`*^9, 3.483963010928287*^9}, {3.483963256693103*^9, 
   3.4839632726565*^9}, {3.483963959000586*^9, 3.4839639606248693`*^9}, {
   3.484032810679948*^9, 3.484032816779828*^9}, {3.4843132693707447`*^9, 
   3.484313269619557*^9}, 3.487492332167657*^9, {3.4875042929951897`*^9, 
   3.487504299765644*^9}}],

Cell[TextData[{
 " We have functions y and u, where u solves Painlev\[EAcute] IV.  We \
determine y by the formula y = -2 ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox["lim", 
    RowBox[{"z", "\[Rule]", "\[Infinity]"}]], TraditionalForm]]],
 " z Cauchy[U,z]\[LeftDoubleBracket]1,2\[RightDoubleBracket] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "x"], TraditionalForm]]],
 " = -2 ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox["lim", 
    RowBox[{"z", "\[Rule]", "\[Infinity]"}]], TraditionalForm]]],
 " z Cauchy[Ux,z]\[LeftDoubleBracket]1,2\[RightDoubleBracket]."
}], "Text",
 CellChangeTimes->{{3.483962731042396*^9, 3.4839628330391703`*^9}, {
  3.484032835741294*^9, 3.4840328533059263`*^9}, {3.484032912657649*^9, 
  3.484032916093627*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"y", ",", "yx", ",", "u"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]], 
     RowBox[{
      RowBox[{"DomainIntegrate", "[", 
       RowBox[{"U", "[", "x", "]"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yx", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"yx", "[", "x", "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]], 
     RowBox[{
      RowBox[{"DomainIntegrate", "[", 
       RowBox[{"Ux", "[", "x", "]"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "x"}], "-", 
    RowBox[{
     RowBox[{"yx", "[", "x", "]"}], "/", 
     RowBox[{"y", "[", "x", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4839627963061523`*^9, 3.483962900247736*^9}, {
  3.48403292200382*^9, 3.48403293578743*^9}, {3.484313274080016*^9, 
  3.484313276770348*^9}, {3.4874926254458*^9, 3.48749263543085*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The solution in the complex plane", "Subsection",
 CellChangeTimes->{{3.487504321675411*^9, 3.4875043258254557`*^9}}],

Cell["\<\
Here's a plot of the real part of the computed solution in the complex plane\
\>", "Text",
 CellChangeTimes->{{3.483963672628566*^9, 3.483963687579184*^9}, {
  3.487492660005381*^9, 3.487492662585692*^9}, {3.48750683402216*^9, 
  3.487506836515377*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sp", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "t", ",", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"x", "+", 
                RowBox[{"I", " ", "t"}]}], "]"}], "//", "Re"}]}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "sp"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "sp"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Real part of a solution to Painlev\[EAcute] IV in the complex \
plane\>\""}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "t"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.4874926766385117`*^9, 3.4874927247405777`*^9}, {
  3.487492776995316*^9, 3.487492777728765*^9}, {3.487496553449107*^9, 
  3.487496582080147*^9}, {3.487506554972501*^9, 3.487506590793602*^9}, {
  3.4875068149708776`*^9, 3.4875068441287317`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
LFy6YPjR2VNriDOx0tzkuUu7auIMRvpZn98rt6mNB73eBxeld22k9aHBqPSk
eJPy/reW+3qqNvQZemgEzZkDKxv0royNsSHOhTllM9eu+mlFnAe9uu562HEY
zZkPh6sDnaYd1yQugMMNDtNTQmg+Qnh421YzIb+KuAg061z3jE6gLoaurEPe
MSNpPhI4lrfnzwADteMNLnrs2eV+gboMXq/yupi7mLocktMu5Ow1pvNUAHdl
iVdKnOp51KrzgvckupskUUFcjoznnWtykiqJy3DDtuN2x1xqiUux6oDVZ9vB
ytyULsG1l/c5f3fQJy5Gj+9lXtyPxsRFWNfV9417O+pCtLKL/5U2To9483V3
xIWiwwfaEOfjCZ28upWeGsR5WDxKEr0wmjoXdd4cc9R0o3U4uAfTgpx2axFn
Yykkxnyxo87C4PspTTu+0vpMZE8xPHFQo4nkxmCMWvhuW0RjA3Em2Jzv3DHv
Ch3PAh8LjTGL7tF5soHdpcOBrvY0Zw4wLmgd3l5iRLz5vPhQtnDMfUPiPPj9
1Ch4j+q+X1WesPj2k5+P59F1CYCp8QM9R9P5C+F1/eUivYo64iIYFCw4NuI7
PQ7FIAk4cuvxAVpfAlk+A4O/XKbrlYJN8sE6y+/UZfCh4NErrURN4nLI8igd
286B1ldAQ7JJxYW5qv8Oguq8WONXtsPrdgX82+VY/LDr3JBB1GV4tcPP/UV7
qohLm48Hi8bKO3XEJcjaZz3fuFj1379QnRdXFe9+3/FoQ1yEkX88jG/6Uxfi
sdXlshdSOn8Bbpjws9eHDFqfjw0/Ep9xJtPxPOTkxk8POqtFnIt6BdPtjc0M
iHMw47a+Q12kCXE2DnolKV/MMibOwj1Jl13WT9cjzkRP3/keUSGaxBkMsyA9
8bIDf0huTPDpw4paeqeeOAv2mRc+jbFrJM6GPYyEAxtd6Ho5UHn8UG6R6jhR
rRcKa78ldTCkzgPRFi/uQHETqc8HTl3bJy5r6XwEwJroMNHgTi1xIVSNm7Z9
yfEG4iJYvro0cc1qul0xbHf/vvD0VpqbBBQhZ184r6c5S8Hk4dqyGxHUZeDX
N8uaK6Z15KCVZLjoyTd6XCngrG2v9NNuGp6i6KNH1tcon/vbch/1n7OTncY8
/Y4Ga59G/pC2PMd+3atrtWvD1Z9vv77Y7f4ERxm2Pe9v+z4uT+2598deNlge
mvtazUWZgXPq01vGs3ZY9xjbrRwTFNxz664Uqbxr+I5dZ6apP1f8e033HWPW
l6vNv/7ddxf/KtXzjFXXm1k1kz7oh0uxYyf2dh68VNVJyEu/v7K2HOs/BVvP
aNuyLievXhXzasrV1ov+PQwssr/j36/fVPUbF7xr0yNI/fnz48Kj0rw6yvDv
V/Xn0qdbVl3t9VKs5gsf7OSOsKHjpagnsXHbmVuk9nz1ToOEvwLT2Cr3GPrU
eYXmNzy3a11Wj/qW8eJRJUl25yVqeSau/Jj7wLUc/379qtpuRNpdvUsz1Z8r
fq9iW/ea6HK1nBfXdp4/fK0U/35tGd/nXt2As805//3aktvhqQP2bVXlrL7e
la9Gtptg/1Xteeabj7c/+Kfom8rXDPTof+qPBP9+Fat81757J8adlqjN32Fi
3q3wNsr7r1v+XXRRndGzuWI+cjbXtn+954va8810zoa/vb1G/blnXmfXhkVM
aBlvvb2315CH6s/viql0vro4pgyzdeSXXo5sqePbaFS64hIf/35tGX/TbVH/
qmll6LrK94v2TJHadoeFeCRtfPJS7flgebxdcadHFqk9H2ncroydJk5f1Z5P
5cay25/7uqV+et2O78lny3DCL9OyHmNfqep87fRlZOSAYjQOM/6YK2qZf2h6
/nrdU8VqeYZv6RQxPkL1vBfVefSoTv/xx/xS/Pv1tar+1C5PtsXavsVZIR2H
j1z7hbxv8FDnoME1tykv1NYV/6xx79pYul4uZs7UO5fWqP7cIe+FkXdfbxa1
vM/8nnmxr34J+imu+QVatOQZWTHnm3RKidp+TPI6Wpi7S/15O6IVe10cOrxG
E+97svCKlu0eKmgYufevIrUcngrLH6z6w8W/X9Wf24Nb8x6/9i9Uc4E0ijFk
3huVp4k7fbrb7zWOfTE6O2xFy3i0cu3lfK1IbZ7SkUvSK9Nuqz73lb58fdP9
AexMuPVw0/x2ogK139e0MViseGxC389ZcKW4VuGX1/I+eefpu0/rj2ZDmVCm
eOjd8n6+6mHUkTG+T1XbVeb5e5qNaGTvJ2rzKXEdt6RTz9uqz0elN7UPtTXO
y4W/XwtVddy9ll0aeiITyma+Sczy+QZ0nmkx67p35dH3Wxbo5nS41/8wHc+G
re0qThXFvlb7PUWa9uExYUX5Kr8Yn5dv9PkFTGd9Xrq9omV8ULdGt0VF2bB8
XXzmBe+W91XdO90ZjP65qnUpxzsmD3YcaPxEbb1Lu5UcrHn3Cv55VdXfkSEW
akfkwILp43aMcP4GdJ69FD6SuzFiNb81rZ/l2TN0PAdmjFnmcdZU/T75iTtd
OGcyW7Yb7FfSr8SYA/+8qnzvyH5nXS3U77cv3xXqUpL/ErbNXzogcVLLfD6d
CtB0mfIKJvACN93prn5/eHzn+7XCfPr+z4GMc71L3/i3jD8QWtI9Zi4HsiZY
SUe+bhn//a+0sXFr1e8/z3jEY79d3PJ9sdINtnpdHbdPBP+8qn1fNiL2VPHT
vvT9Uwx19qPCZnu0jB9clHn+ik/L96RKH+feaUFwnhj+eVWNvxX4rGnmPPXv
6S521Poc6/1V5crjYZrb0cFdI0Uw51rRnuuWb1T1Twz5mVbi8BX+fqXvn2JI
7n6o87JJz9W+nxrgEnFk9c83xCUw+VlRqZvfV7XvRyo9Yx/iypb3z/oi35sT
CsVgk8Ua8P5loarOual5l/LC1L8X+zhYNtA95qvKlXU66F/oqR/zDf5+bdlu
B16/qPGib2o5VG94GZA78ytYGiwZETW1SO37hd+aeaHxEc/V/PKLHFOtBS3v
n6uPBRqYTvwGQ04tKs4pKVD51oMrtRzuflOb599/V+9vW+tjW+tX/6/9p3K7
tH9urQ9vrW9vrc9v7brg77+r95//1z5TWYf2q6315631/8ocaP/cWh/bWr/6
/9eXqvfnrfX5rV0XtHYd0dr1S2t9eGv9tjJn2ie31g8rx9N+u7W++v+3f6Z9
8v/c36r3pa31ma31pco6/933qvfzrfXnrfXzrfXtyvq0D2+t71XOk/axrfWf
rfWryjq0T26tn1fOk15HtNa3/8/9uXpf3VrfqxxP+/PW+ufW+u3/rX+mfXJr
/XBr/bOyzn/34er9cGt9b2v9rbIO7Z9b68Nb69v//rt6v9paX6pcP+33/q99
nbIO7Q9b61eV86T9c2v9fGvXC8rcaD/fWr/dWl+trEP7/9auI1q7Hmmtn//f
+nPah/9v/TDte1vrb1vrh5V1/ruvVr9eaK1v///tn2mf3FrfqxxP++3W+ufW
+u3W+mRlfdr3ttavttbfKuvQvrq1vv1/7s/V++rW+l7leNqft9Y/t9Zv/2/9
M+2TW+uHW+uflXVoH/7/ANp+PbU=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
WCVHfjLmH7HPE6NL9RTANt/2nNj//3GPWek=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtlMtvjFEYh883PR9C1NZGEwsbC5c/gIqdkDa1E8loK25BZ9xCotLWzqpG
IjYuHYKEiKaI+6XjGvfpytrexg4hnsdr8Ux+55z3e897O7N4sLZxqJJS2gAZ
fvAzUqQ0AaPo9bCa/Sq8Ra8sU5rsSKkN91gvYT3eEXuTrO/DDHoK7qIPQrUI
n0fQn2ENvrqhjb4AUwTQgHPoMzl0HU6jW7Ac22WwFr0TuvC1CLajJ6CN7Qw0
0SXxXESPwSz0XDDBcZiH7oRedA+cMGHWI+gJKMrwoS9jMrYO9qbRLcj6Zq+f
3Eahi/VSv0G34BZn32BVETkP5aiRtbIm1kYbbZ/D7RyoL8HNHDWzdg24g74G
dXQNrqDPw2QlcjZ3YzI2czb3hWXkqs1Zc8lRa3toL1/CSXQDXqFfQC3FnmeP
YB28gcfwAHpS2DxEP4F96D54in4GK1L0aDrHnmfueWaNrbU9sBeVMmptTa3t
e843wWb4kCNHc3WmnC1jNFbvfJ1jBp3FEXiHnl/GrNhTe+uMOCvGbOz2yF7Z
o6usL8Nx9IA1R9/IUWtrbK2deWe/CWM5+KedYfQe6EXXoeYsaM9dTRjI0UN7
6R3X0b+1IbZu+IP+kiN2v/Fbfeq7H46hh+EUej8cRh81viL2PPue4273PNNG
2z44YG6+V+6qwk/0oRy+u/WZIwZj0Ubbj95v7PApRw7m4t6W/H8vxZv17e7O
4cs36FvcCgvQnTCI/mr9i6jRDvQ256MIG21nl/E2rckc9N4csWuzK0fMxu6b
/JXDp771qW97Zu98g75F/wP8L/DN+fb+AtZ4nJI=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtkD0LQWEUx4+LUiij1WrzMYxsMrjZuSTlKonFKMoHMAhJoUxeJkV5mX0O
m1zld/IMv/7nOe/nSRSdbNkSkRgEYR4QmcEUxn6RJE4PuwchbJvkL/YCusQn
Jl/rapDxiZTQClShCS40oE3sjR7gAmfNYeYR3cAaVgp9U8xqYdvU1E0P7XWH
PBSgQ+0DjZA7REc6l/2ivHfYDvETmoY9hPH3icdNvtZt0QHzlma+7nHVXal9
ojm4wUd91v+T9C88c5/e6aiy5wv9AcV+Lnc=
         "]]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtUrsuBFAQHcwUOm+xCGu316p8gULE0pHIVgp8Aq1ibSHiUUmUGp+hXyu7
3rFey0c4J3OKkzOZO3PmdYtbuys7vWa2APQBD24232P2CH4GlmG/gOvAPgJr
4HVgD7Fr4CXZFfAVcACRQpgNAHXED4L7I3MP8f4FbELz2zOfuavgycjcqch6
rPvqCdpv4GPgEjpn4BNPfdbZYG/QaYDvZDfBRfYAzTnwtac9C3tatWYi3+gv
gUeAG2iORvbBGMb+qOeu5wyc5chzBvr53lBd1r/VXNxNRTZ3VlKtcuTM9DP2
Xrkt8AewCM1P8Lbsjmev7Ic7fteNquBh9czeq/K3wWPyj0fOQ5u+tmJ45470
WfNPNmuW1Sd3VlBd3qereX89b8BbXHjulPHcd0uz8CZPuh3/UU174184V+6p
5//gHYcitejne1M63M2EYnjzfwQKVfc=
         "]], 
        Polygon3DBox[{{1254, 318, 351, 1255}, {1298, 656, 689, 1299}, {1259, 
         351, 318, 1260}, {1167, 640, 673, 1172}, {1176, 673, 640, 1168}, {
         1303, 689, 656, 1305}, {1249, 336, 303, 1251}, {1244, 303, 336, 
         1245}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkssuw2EQxT/Mf+0ZbFyiysIbuFQkVGvTCCEeQGNjKRKXNCkL8QYeQGLj
BTxC3wONS+04v8xZnJzp9MzMmfn+U8fd9sl4KWVZmBDuo5SuErfiPeFQuY74
zvkH8Zqwo3xDPF+V8qjCJ8V/6KW5jATxNVrhSPqWeM566haEZ8V18br+a0rz
Kt61/iCynj69yN/k98VfwsVYKd+RNdSuiFftDY8/1ozEb8Kp4nfxr/PnkSCm
36y94bHj3duRt2D3ySrr6fMhvrI39j5znjlt1w7Ei95xqUqvzMLXh/VD8Uuk
pibNpnfZiLwpfqarrEeD9sZzmd9zTG7G/tmjZj03Hnkuew/srRnZFz117MaO
/cg3JuZb2PY9tyI94Y236lvDd9Hyu/BuQ+/1GQlibtNwH/rV7Y3b/AMzZ09/

         "]], 
        Polygon3DBox[{{1091, 79, 80, 1092}, {1116, 96, 95, 1114}, {1101, 80, 
         79, 1098}, {1103, 95, 96, 1104}}]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Sc0BmAUBuDP3ntvv7333qPRaDQ0DoFGcQ6NRiPSaDQijUYj0mg0Hkd4
6n3fe29kaWNuPSqEsMtcdAibHHHFE18UxoQwyALbnHDDCz9UxoYwyQTjjDHK
CMMMMcgA/fTRSw/ddNFJB+200UoLzTTRSAP11FFLDdVUESHwqs8tp+ywyBBF
fNvlmWuO2WKeLrL4dIhHLjlkjVmaSOJdxD3n7LPCNFX83dCIEPNfI8QRTwKJ
JJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVRJhimT3OuOPtL1+5RmZY
5YALHvggU/HO6P///wJXoSry
       "]], 
      Line3DBox[{1219, 1094, 1096, 1098, 1101, 1102, 1095, 1093, 1092, 1091, 
       1219}], 
      Line3DBox[{1218, 1217, 1216, 1215, 1214, 1213, 1212, 1211, 1210, 1090, 
       1218}], Line3DBox[{1225, 1108, 1110, 1111, 1109, 1100, 1225}], 
      Line3DBox[{1235, 1106, 1112, 1114, 1116, 1117, 1107, 1105, 1104, 1103, 
       1235}], Line3DBox[{1224, 1223, 1222, 1221, 1220, 1097, 1224}], 
      Line3DBox[{1099, 1234, 1233, 1232, 1231, 1230, 1229, 1228, 1227, 1226, 
       1099}], Line3DBox[{1240, 1113, 1115, 1119, 1121, 1120, 1240}], 
      Line3DBox[{1238, 1237, 1236, 1118, 1241, 1239, 1238}], 
      Line3DBox[{1250, 1122, 1123, 1125, 1129, 1133, 1136, 1135, 1132, 1127, 
       1250}], Line3DBox[{1243, 1242, 1124, 1251, 1249, 1248, 1247, 1246, 
       1245, 1244, 1243}], 
      Line3DBox[{1261, 1126, 1128, 1131, 1138, 1141, 1145, 1144, 1140, 1134, 
       1261}], Line3DBox[{1253, 1252, 1130, 1260, 1259, 1258, 1257, 1256, 
       1255, 1254, 1253}], 
      Line3DBox[{1266, 1137, 1139, 1143, 1148, 1147, 1266}], 
      Line3DBox[{1273, 1146, 1149, 1151, 1153, 1152, 1273}], 
      Line3DBox[{1150, 1272, 1271, 1270, 1269, 1268, 1150}], 
      Line3DBox[{1279, 1156, 1158, 1160, 1157, 1155, 1279}], 
      Line3DBox[{1278, 1277, 1276, 1275, 1274, 1154, 1278}], 
      Line3DBox[{1289, 1166, 1168, 1176, 1178, 1179, 1177, 1172, 1167, 1162, 
       1289}], Line3DBox[{1295, 1164, 1169, 1171, 1165, 1163, 1295}], 
      Line3DBox[{1288, 1287, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1159, 
       1288}], Line3DBox[{1161, 1294, 1293, 1292, 1291, 1290, 1161}], 
      Line3DBox[{1304, 1170, 1173, 1175, 1181, 1183, 1185, 1184, 1182, 1180, 
       1304}], Line3DBox[{1298, 1297, 1296, 1174, 1305, 1303, 1302, 1301, 
       1300, 1299, 1298}], 
      Line3DBox[{1310, 1186, 1187, 1189, 1192, 1191, 1310}], 
      Line3DBox[{1307, 1306, 1188, 1311, 1309, 1308, 1307}], 
      Line3DBox[{1317, 1190, 1194, 1197, 1201, 1200, 1317}], 
      Line3DBox[{1322, 1193, 1195, 1199, 1204, 1203, 1322}], 
      Line3DBox[{1313, 1312, 1196, 1316, 1315, 1314, 1313}], 
      Line3DBox[{1329, 1202, 1205, 1207, 1209, 1208, 1329}], 
      Line3DBox[{1206, 1328, 1327, 1326, 1325, 1324, 1206}], 
      Line3DBox[{1142, 1262, 1263, 1264, 1265, 1267, 1142}], 
      Line3DBox[{1198, 1318, 1319, 1320, 1321, 1323, 1198}]}, {
      Line3DBox[{3, 36, 69, 102, 135, 168, 201, 234, 267, 300, 333, 366, 399, 
       432, 465, 498, 531, 564, 597, 630, 663, 696, 729, 762, 795, 828, 861, 
       894, 927, 960, 993, 1026, 1059}], 
      Line3DBox[{5, 38, 71, 104, 137, 170, 203, 236, 269, 302, 335, 368, 401, 
       434, 467, 500, 533, 566, 599, 632, 665, 698, 731, 764, 797, 830, 863, 
       896, 929, 962, 995, 1028, 1061}], 
      Line3DBox[{7, 40, 73, 106, 139, 172, 205, 238, 271, 304, 337, 370, 403, 
       436, 469, 502, 535, 568, 601, 634, 667, 700, 733, 766, 799, 832, 865, 
       898, 931, 964, 997, 1030, 1063}], 
      Line3DBox[{9, 42, 75, 108, 141, 174, 207, 240, 273, 306, 339, 372, 405, 
       438, 471, 504, 537, 570, 603, 636, 669, 702, 735, 768, 801, 834, 867, 
       900, 933, 966, 999, 1032, 1065}], 
      Line3DBox[{11, 44, 77, 110, 143, 176, 209, 242, 275, 308, 341, 374, 407,
        440, 473, 506, 539, 572, 605, 638, 671, 704, 737, 770, 803, 836, 869, 
       902, 935, 968, 1001, 1034, 1067}], Line3DBox[{13, 46, 1090}], 
      Line3DBox[{15, 48, 81, 114, 147, 180, 213, 246, 279, 312, 345, 378, 411,
        444, 477, 510, 543, 576, 609, 642, 675, 708, 741, 774, 807, 840, 873, 
       906, 939, 972, 1005, 1038, 1071}], 
      Line3DBox[{17, 50, 83, 116, 149, 182, 215, 248, 281, 314, 347, 380, 413,
        446, 479, 512, 545, 578, 611, 644, 677, 710, 743, 776, 809, 842, 875, 
       908, 941, 974, 1007, 1040, 1073}], 
      Line3DBox[{19, 52, 85, 118, 151, 184, 217, 250, 283, 316, 349, 382, 415,
        448, 481, 514, 547, 580, 613, 646, 679, 712, 745, 778, 811, 844, 877, 
       910, 943, 976, 1009, 1042, 1075}], 
      Line3DBox[{21, 54, 87, 120, 153, 186, 219, 252, 285, 1126}], 
      Line3DBox[{23, 56, 89, 122, 155, 188, 221, 254, 287, 320, 353, 386, 419,
        452, 485, 518, 551, 584, 617, 650, 683, 716, 749, 782, 815, 848, 881, 
       914, 947, 980, 1013, 1046, 1079}], 
      Line3DBox[{25, 58, 91, 124, 157, 190, 223, 256, 289, 322, 355, 388, 421,
        454, 487, 520, 553, 586, 619, 652, 685, 718, 751, 784, 817, 850, 883, 
       916, 949, 982, 1015, 1048, 1081}], 
      Line3DBox[{27, 60, 93, 126, 159, 192, 225, 258, 291, 324, 357, 390, 423,
        456, 489, 522, 555, 588, 621, 654, 687, 720, 753, 786, 819, 852, 885, 
       918, 951, 984, 1017, 1050, 1083}], Line3DBox[{29, 62, 1099}], 
      Line3DBox[{31, 64, 97, 130, 163, 196, 229, 262, 295, 328, 361, 394, 427,
        460, 493, 526, 559, 592, 625, 658, 691, 724, 757, 790, 823, 856, 889, 
       922, 955, 988, 1021, 1054, 1087}], 
      Line3DBox[{1069, 1036, 1003, 970, 937, 904, 871, 838, 805, 772, 739, 
       706, 1284}], Line3DBox[{1077, 1044, 1011, 978, 1209}], 
      Line3DBox[{1085, 1052, 1019, 986, 953, 920, 887, 854, 821, 788, 755, 
       722, 1185}], Line3DBox[{1097, 1212}], 
      Line3DBox[{1222, 145, 178, 211, 244, 277, 310, 343, 376, 409, 442, 475, 
       508, 541, 574, 1154}], Line3DBox[{1228, 1113}], 
      Line3DBox[{1121, 161, 194, 227, 260, 293, 326, 359, 392, 425, 458, 491, 
       524, 557, 590, 1161}], Line3DBox[{1145, 1146}], 
      Line3DBox[{1153, 417, 450, 483, 516, 549, 582, 615, 648, 681, 714, 747, 
       780, 813, 846, 879, 1190}], Line3DBox[{1159, 1276}], 
      Line3DBox[{1292, 1170}], Line3DBox[{1201, 1202}]}, {
      Line3DBox[{627, 626, 625, 624, 1293}], 
      Line3DBox[{561, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 550, 
       549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539, 538, 537, 536, 
       535, 534, 533, 532, 531, 530, 529}], 
      Line3DBox[{67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1210}], 
      Line3DBox[{99, 98, 97, 1231}], 
      Line3DBox[{133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
       145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
       159, 160, 161, 162, 163, 164, 165}], 
      Line3DBox[{199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
       211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
       225, 226, 227, 228, 229, 230, 231}], 
      Line3DBox[{265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 
       277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
       291, 292, 293, 294, 295, 296, 297}], 
      Line3DBox[{331, 332, 333, 334, 335, 1132}], 
      Line3DBox[{363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 
       1141}], Line3DBox[{397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
       407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 
       421, 422, 423, 424, 425, 426, 427, 428, 429}], 
      Line3DBox[{463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 
       475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 
       489, 490, 491, 492, 493, 494, 495}], 
      Line3DBox[{595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 
       1274}], Line3DBox[{693, 692, 691, 690, 1183}], 
      Line3DBox[{661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 
       1282}], Line3DBox[{759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 
       749, 748, 747, 746, 745, 744, 743, 742, 741, 740, 739, 738, 737, 736, 
       735, 734, 733, 732, 731, 730, 729, 728, 727}], 
      Line3DBox[{825, 824, 823, 822, 821, 820, 819, 818, 817, 816, 815, 814, 
       813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 
       799, 798, 797, 796, 795, 794, 793}], 
      Line3DBox[{891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 
       879, 878, 877, 876, 875, 874, 873, 872, 871, 870, 869, 868, 867, 866, 
       865, 864, 863, 862, 861, 860, 859}], 
      Line3DBox[{957, 956, 955, 954, 953, 952, 951, 950, 949, 948, 947, 946, 
       1207}], Line3DBox[{925, 926, 927, 928, 929, 1322}], 
      Line3DBox[{1023, 1022, 1021, 1020, 1019, 1018, 1017, 1016, 1015, 1014, 
       1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 1003, 1002,
        1001, 1000, 999, 998, 997, 996, 995, 994, 993, 992, 991}], 
      Line3DBox[{1226, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81,
        1215}], 
      Line3DBox[{1133, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 
       348, 349, 350, 1140}], 
      Line3DBox[{1277, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 
       619, 620, 621, 622, 1290}], 
      Line3DBox[{1285, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 
       685, 686, 687, 688, 1182}], 
      Line3DBox[{1199, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 
       942, 943, 944, 1329}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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

    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"Real part of a solution to Painlev\[EAcute] IV in the complex plane\"", 
    TraditionalForm],
  PlotRange->{{-1., 1.}, {-1., 1.}, {-12.250073410387948`, 11.89457397101832}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.487506845796139*^9, 3.487507956996016*^9, 
  3.494229987737576*^9, 3.505469110443882*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ablowitz\[Dash]Segur: Large positive ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Section",
 CellChangeTimes->{{3.487496693912539*^9, 3.4874967054870577`*^9}}],

Cell[TextData[{
 "In this example we use the simplest example of nonlinear steepest descent \
for homogenous Painlev\[EAcute] II with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "2"], " ", "=", " ", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "1"], "=", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["s", "3"]}], "=", 
     RowBox[{"\[ImaginaryI]", " ", "s"}]}]}], TraditionalForm]]],
 ".  The deformation is based on [Fokas et al. 2006].  We first scale the RH \
problem by ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"x", "/", "2"}]], TraditionalForm]]],
 ", resulting in the new \[Theta] function and ",
 StyleBox["G ",
  FontSlant->"Italic"],
 "function:"
}], "Text",
 CellChangeTimes->{{3.487496718271366*^9, 3.487496993793873*^9}, {
  3.487497726785088*^9, 3.48749780644733*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", "z_", "]"}], ":=", 
   RowBox[{"I", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"4", "/", "3"}], " ", 
       RowBox[{"z", "^", "3"}]}], " ", "+", " ", "z"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", "_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"s_", ",", "x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{"I", " ", "s"}], "1"}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "6", "]"}], "[", 
    RowBox[{"s_", ",", "x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{"I", " ", "s"}]},
       {"0", "1"}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4874977193863297`*^9, 3.487497751593233*^9}, {
  3.487498108273378*^9, 3.487498136707246*^9}}],

Cell[TextData[{
 "When ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "is positive, this has two stationary points at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    FractionBox["\[ImaginaryI]", "2"]}], TraditionalForm]]],
 ". We need to know the paths of steepest descent eminating from this point \
and a sequence of points going to infinity.  Rather than trying to determine \
this analytically, we compute it numerically.  For ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "> 0, at the stationary point ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ImaginaryI]", "2"], TraditionalForm]]],
 ", we know there are two paths of descent, one path T[x,r] corresponding to \
G[1] and approaching  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Pi]", "/", "6"}]}]], "\[Infinity]"}], TraditionalForm]]],
 " and one path Tm[x,r] corresponding to G[3] and approaching ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"5", " ", "\[ImaginaryI]", " ", 
      RowBox[{"\[Pi]", "/", "6"}]}]], "\[Infinity]"}], TraditionalForm]]],
 ".  We thus interpolate in arcs centred at ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ImaginaryI]", "2"], TraditionalForm]]],
 "of radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 " in the complex plane to isolate each path.  Note that when ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is complex, the path of steepest descent changes depending on arg ",
 StyleBox["x",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{
  3.48749691330361*^9, {3.487496981429056*^9, 3.487497557285533*^9}, {
   3.487497877228376*^9, 3.487497877705216*^9}, {3.4875079891211576`*^9, 
   3.487508015254342*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "NZeroQ"}]}], "]"}], ":=", 
   RowBox[{".5", " ", "I"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", "#", "]"}]}], "]"}], "-", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"I", "/", "2"}], "]"}]}], "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{
         RowBox[{".5", " ", "I"}], ",", "r", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.", "-", 
            RowBox[{"Arg", "[", "x", "]"}]}], ",", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], "-", "0.1", "-", 
            RowBox[{"Arg", "[", "x", "]"}]}]}], "}"}]}], "]"}]}], "]"}], "//",
      "Roots"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "6"}], "-", 
         RowBox[{
          RowBox[{"Arg", "[", "x", "]"}], "  ", "/", "2"}]}], ")"}]}], "]"}], 
     "\[Infinity]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tm", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tm", "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "NZeroQ"}]}], "]"}], ":=", 
   RowBox[{".5", " ", "I"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tm", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", "#", "]"}]}], "]"}], "-", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"I", "/", "2"}], "]"}]}], "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{
         RowBox[{".5", " ", "I"}], ",", "r", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "-", 
            RowBox[{"Arg", "[", "x", "]"}]}], ",", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"\[Pi]", "/", "4"}], "-", 
            RowBox[{"Arg", "[", "x", "]"}]}]}], "}"}]}], "]"}]}], "]"}], "//",
      "Roots"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tm", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         RowBox[{"\[Pi]", "/", "6"}]}], "-", 
        RowBox[{
         RowBox[{"Arg", "[", "x", "]"}], "  ", "/", "2"}]}], ")"}]}], "]"}], 
    "\[Infinity]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.485246215152083*^9, 3.4852462838217688`*^9}, {
   3.485257764007806*^9, 3.485257775998352*^9}, {3.485260353089241*^9, 
   3.485260353887151*^9}, {3.4852605228878927`*^9, 3.485260544225094*^9}, {
   3.4852605952396183`*^9, 3.4852606822745533`*^9}, 3.485261018857582*^9, {
   3.485334767576994*^9, 3.4853347680819273`*^9}, {3.4853348099580507`*^9, 
   3.485334842044345*^9}, {3.485335086372427*^9, 3.4853350928002653`*^9}, {
   3.485336535346751*^9, 3.48533654054811*^9}, {3.485336598445262*^9, 
   3.485336618721285*^9}, {3.485336708003509*^9, 3.485336770695155*^9}, {
   3.485345613603325*^9, 3.4853456150977583`*^9}, {3.487497494780986*^9, 
   3.487497496473886*^9}, {3.487497576290934*^9, 3.487497576890728*^9}, {
   3.4874978619376097`*^9, 3.487497862564803*^9}}],

Cell["\<\
We now determine points along the path of steepest descent, which approach \
the stationary point at a rate so that G is resolved with the same number of \
points.\
\>", "Text",
 CellChangeTimes->{{3.487497865584845*^9, 3.487497933004964*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ptsp", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"T", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"Abs", "[", "x", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{"3", "/", "4"}], ")"}]}]], " ", 
       RowBox[{"Range", "[", 
        RowBox[{".5", ",", "3.", ",", ".5"}], "]"}]}], ",", 
      RowBox[{"{", "\[Infinity]", " ", "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ptsm", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Tm", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Reverse", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"Abs", "[", "x", "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "4"}], ")"}]}]], " ", 
        RowBox[{"Range", "[", 
         RowBox[{".5", ",", "3.", ",", ".5"}], "]"}]}], ",", 
       RowBox[{"{", "\[Infinity]", " ", "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pts", "[", "x_", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ptsm", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", "[", 
       RowBox[{"x", ",", "0."}], "]"}], "}"}], ",", 
     RowBox[{"ptsp", "[", "x", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.487498441175997*^9, 3.4874984931238194`*^9}, {
  3.487498747970007*^9, 3.487498749530409*^9}}],

Cell["Here is a plot of the computed points", "Text",
 CellChangeTimes->{{3.487497588203045*^9, 3.487497610978104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pts", "[", "20.", "]"}], "//", "ComplexDotPlot"}]], "Input",
 CellChangeTimes->{{3.4874976127365017`*^9, 3.487497636994381*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointSize[Large], 
    PointBox[{{-0.31557673388976604`, 
     0.5321618409758877}, {-0.2633740303101262, 
     0.5226107154922001}, {-0.21096813806189077`, 
     0.5146220474864085}, {-0.15838870498865967`, 
     0.5082935444104424}, {-0.10567207453403493`, 
     0.5037084432275977}, {-0.05286037330880106, 0.5009305404499178}, {0., 
     0.5}, {0.052860373308801, 0.5009305404499188}, {0.10567207453403474`, 
     0.503708443227604}, {0.15838870498865973`, 0.5082935444104415}, {
     0.21096813806189108`, 0.5146220474864053}, {0.2633740303101265, 
     0.5226107154921946}, {0.3155767338897667, 0.5321618409758825}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.5},
  PlotRange->{{-0.31557673388976604`, 0.3155767338897667}, {0.5, 
   0.5321618409758877}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.487497627384095*^9, 3.487497637338978*^9}, 
   3.487497938400713*^9, 3.4874981417350082`*^9, {3.4874982300536203`*^9, 
   3.487498234008225*^9}, {3.487498453359563*^9, 3.487498494452983*^9}, 
   3.487498751549081*^9, 3.487507957702083*^9, 3.494229988287044*^9, 
   3.505469111271687*^9}]
}, Open  ]],

Cell[TextData[{
 "The jump curve G[1]  is precisely the inverse of G[3].  Thus when we deform \
both curves to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    FractionBox["\[ImaginaryI]", "2"]}], TraditionalForm]]],
 ", they cancel and become disjoint from G[4] and G[6].  We thus obtain the \
following jump curve (the parameter Stretch is the stretch of the rays going \
to infinity).  Since the InterpolationPrecision parameter is absolute \
accuracy (otherwise an unnecessary number of interpolation points would be \
used along curves where the jump curve is small), we have to trick the system \
to obtain relative accuracy, but only relative to the stationary point"
}], "Text",
 CellChangeTimes->{
  3.487497162558928*^9, {3.487497312103574*^9, 3.4874973126217413`*^9}, {
   3.487497670195459*^9, 3.487497701614649*^9}, {3.4874978236214867`*^9, 
   3.487497857095881*^9}, {3.487498147541972*^9, 3.48749817772401*^9}, {
   3.487498553501741*^9, 3.487498647312189*^9}, {3.487508046163103*^9, 
   3.4875080800529137`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GG", "[", 
     RowBox[{"s", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["x", 
           RowBox[{"3", "/", "2"}]]}], "3"]}]], 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Fun", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["x", 
                RowBox[{"3", "/", "2"}]]}], "3"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"G", "[", "1", "]"}], "[", 
                RowBox[{"s", ",", "x", ",", "#"}], "]"}], "-", 
               RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "/.", 
              RowBox[{
               RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
           "&"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{"pts", "[", "x", "]"}], ",", 
            RowBox[{"Stretch", "\[Rule]", 
             RowBox[{"1", "/", 
              RowBox[{"Abs", "[", "x", "]"}]}]}]}], "]"}], ",", 
          RowBox[{"InterpolationPrecision", "\[Rule]", 
           RowBox[{"10.", "^", 
            RowBox[{"(", 
             RowBox[{"-", "8"}], ")"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Fun", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["x", 
                RowBox[{"3", "/", "2"}]]}], "3"]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"G", "[", "6", "]"}], "[", 
                RowBox[{"s", ",", "x", ",", "#"}], "]"}], "-", 
               RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "/.", 
              RowBox[{
               RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
           "&"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"pts", "[", "x", "]"}]}], ")"}], "//", "Reverse"}], 
            ",", 
            RowBox[{"Stretch", "\[Rule]", 
             RowBox[{"1", "/", 
              RowBox[{"Abs", "[", "x", "]"}]}]}]}], "]"}], ",", 
          RowBox[{"InterpolationPrecision", "\[Rule]", 
           RowBox[{"10.", "^", 
            RowBox[{"(", 
             RowBox[{"-", "8"}], ")"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], "//", "AddIdentityMatrix"}]}]}]}]], "Input",
 CellChangeTimes->{{3.487498374738532*^9, 3.487498375907094*^9}, {
  3.4874986498981113`*^9, 3.48749873497235*^9}, {3.487498814416297*^9, 
  3.4874988166169567`*^9}, {3.487498926126938*^9, 3.4874989538992357`*^9}, {
  3.487499577007535*^9, 3.487499578827052*^9}, {3.487500061297894*^9, 
  3.487500064201614*^9}, {3.4942245072143593`*^9, 3.494224510892404*^9}}],

Cell["Here is a plot of the new jump curve:", "Text",
 CellChangeTimes->{{3.48749796010806*^9, 3.487497965284528*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "[", 
   RowBox[{"1.", ",", "10."}], "]"}], "//", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.487497944589985*^9, 3.487497956288937*^9}, {
  3.48749886333986*^9, 3.4874988635698442`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{-0.526637818679101, 0.5851915333356115}], 
    ArrowBox[{{-2.258688626247978, 1.5851915333356112`}, {-0.526637818679101, 
     0.5851915333356115}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.526637818679101, 0.5851915333356115}], 
    PointBox[{-0.44037461519459625`, 0.5609307151831903}], 
    ArrowBox[{{-0.526637818679101, 
     0.5851915333356115}, {-0.44037461519459625`, 0.5609307151831903}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.44037461519459625`, 0.5609307151831903}], 
    PointBox[{-0.35339625124103197`, 0.5400274407815513}], 
    ArrowBox[{{-0.44037461519459625`, 
     0.5609307151831903}, {-0.35339625124103197`, 0.5400274407815513}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.35339625124103197`, 0.5400274407815513}], 
    PointBox[{-0.2657475080061532, 0.5230110699948548}], 
    ArrowBox[{{-0.35339625124103197`, 
     0.5400274407815513}, {-0.2657475080061532, 0.5230110699948548}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.2657475080061532, 0.5230110699948548}], 
    PointBox[{-0.1775237537135666, 0.5103968009083921}], 
    ArrowBox[{{-0.2657475080061532, 0.5230110699948548}, {-0.1775237537135666,
      0.5103968009083921}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.1775237537135666, 0.5103968009083921}], 
    PointBox[{-0.08887518259931539, 0.5026260366256569}], 
    ArrowBox[{{-0.1775237537135666, 
     0.5103968009083921}, {-0.08887518259931539, 0.5026260366256569}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.08887518259931539, 0.5026260366256569}], 
    PointBox[{0., 0.5}], 
    ArrowBox[{{-0.08887518259931539, 0.5026260366256569}, {0., 0.5}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0., 0.5}], PointBox[{0.08887518259931534, 0.5026260366256604}],
     ArrowBox[{{0., 0.5}, {0.08887518259931534, 0.5026260366256604}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.08887518259931534, 0.5026260366256604}], 
    PointBox[{0.17752375371356668`, 0.5103968009083907}], 
    ArrowBox[{{0.08887518259931534, 0.5026260366256604}, {
     0.17752375371356668`, 0.5103968009083907}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.17752375371356668`, 0.5103968009083907}], 
    PointBox[{0.26574750800615354`, 0.5230110699948496}], 
    ArrowBox[{{0.17752375371356668`, 0.5103968009083907}, {
     0.26574750800615354`, 0.5230110699948496}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.26574750800615354`, 0.5230110699948496}], 
    PointBox[{0.3533962512410322, 0.5400274407815491}], 
    ArrowBox[{{0.26574750800615354`, 0.5230110699948496}, {0.3533962512410322,
      0.5400274407815491}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.3533962512410322, 0.5400274407815491}], 
    PointBox[{0.44037461519459475`, 0.5609307151832003}], 
    ArrowBox[{{0.3533962512410322, 0.5400274407815491}, {0.44037461519459475`,
      0.5609307151832003}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.44037461519459475`, 0.5609307151832003}], 
    PointBox[{0.526637818679098, 0.5851915333356292}], 
    ArrowBox[{{0.44037461519459475`, 0.5609307151832003}, {0.526637818679098, 
     0.5851915333356292}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0.526637818679098, 0.5851915333356292}], 
    ArrowBox[{{0.526637818679098, 0.5851915333356292}, {2.2586886262479755`, 
     1.585191533335629}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{-0.526637818679098, -0.5851915333356292}], 
    ArrowBox[{{-2.2586886262479755`, -1.585191533335629}, \
{-0.526637818679098, -0.5851915333356292}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.526637818679098, -0.5851915333356292}], 
    PointBox[{-0.44037461519459475`, -0.5609307151832003}], 
    ArrowBox[{{-0.526637818679098, -0.5851915333356292}, \
{-0.44037461519459475`, -0.5609307151832003}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.44037461519459475`, -0.5609307151832003}], 
    PointBox[{-0.3533962512410322, -0.5400274407815491}], 
    ArrowBox[{{-0.44037461519459475`, -0.5609307151832003}, \
{-0.3533962512410322, -0.5400274407815491}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.3533962512410322, -0.5400274407815491}], 
    PointBox[{-0.26574750800615354`, -0.5230110699948496}], 
    ArrowBox[{{-0.3533962512410322, -0.5400274407815491}, \
{-0.26574750800615354`, -0.5230110699948496}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.26574750800615354`, -0.5230110699948496}], 
    PointBox[{-0.17752375371356668`, -0.5103968009083907}], 
    ArrowBox[{{-0.26574750800615354`, -0.5230110699948496}, \
{-0.17752375371356668`, -0.5103968009083907}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.17752375371356668`, -0.5103968009083907}], 
    PointBox[{-0.08887518259931534, -0.5026260366256604}], 
    ArrowBox[{{-0.17752375371356668`, -0.5103968009083907}, \
{-0.08887518259931534, -0.5026260366256604}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.08887518259931534, -0.5026260366256604}], 
    PointBox[{0., -0.5}], 
    ArrowBox[{{-0.08887518259931534, -0.5026260366256604}, {0., -0.5}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0., -0.5}], 
    PointBox[{0.08887518259931539, -0.5026260366256569}], 
    ArrowBox[{{0., -0.5}, {0.08887518259931539, -0.5026260366256569}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.08887518259931539, -0.5026260366256569}], 
    PointBox[{0.1775237537135666, -0.5103968009083921}], 
    ArrowBox[{{0.08887518259931539, -0.5026260366256569}, {
     0.1775237537135666, -0.5103968009083921}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.1775237537135666, -0.5103968009083921}], 
    PointBox[{0.2657475080061532, -0.5230110699948548}], 
    ArrowBox[{{0.1775237537135666, -0.5103968009083921}, {
     0.2657475080061532, -0.5230110699948548}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.2657475080061532, -0.5230110699948548}], 
    PointBox[{0.35339625124103197`, -0.5400274407815513}], 
    ArrowBox[{{0.2657475080061532, -0.5230110699948548}, {
     0.35339625124103197`, -0.5400274407815513}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.35339625124103197`, -0.5400274407815513}], 
    PointBox[{0.44037461519459625`, -0.5609307151831903}], 
    ArrowBox[{{0.35339625124103197`, -0.5400274407815513}, {
     0.44037461519459625`, -0.5609307151831903}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.44037461519459625`, -0.5609307151831903}], 
    PointBox[{0.526637818679101, -0.5851915333356115}], 
    ArrowBox[{{0.44037461519459625`, -0.5609307151831903}, {
     0.526637818679101, -0.5851915333356115}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0.526637818679101, -0.5851915333356115}], 
    ArrowBox[{{0.526637818679101, -0.5851915333356115}, {
     2.258688626247978, -1.5851915333356112`}}]}},
  Axes->True,
  PlotRange->All]], "Output",
 CellChangeTimes->{{3.4874979506676683`*^9, 3.487497956549711*^9}, 
   3.487498239969702*^9, {3.487498860183519*^9, 3.48749886500885*^9}, 
   3.4874989654071198`*^9, 3.487499727390531*^9, 3.487507958919095*^9, 
   3.494229989241234*^9, 3.505469112428097*^9}]
}, Open  ]],

Cell[TextData[{
 "For ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "near each other (say, inside blocks of size 3), we want to reuse the \
computation.  Thus we want the RH curves to be the same, and the length along \
each curve to be the same.   GG2 accomplishes this."
}], "Text",
 CellChangeTimes->{{3.487499356612637*^9, 3.487499436224002*^9}, {
  3.48749997627633*^9, 3.487499976978322*^9}, {3.4875081110106173`*^9, 
  3.487508116530287*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nr", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"(", "x", ")"}], "/", "3"}], "]"}], "3"}], "+", "1."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nrt", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"nr", "[", 
      RowBox[{"Abs", "[", "x", "]"}], "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       RowBox[{"Arg", "[", "x", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GG2", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GG2", "[", 
   RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", "1", "]"}], "[", 
          RowBox[{"s", ",", "x", ",", "#"}], "]"}], "/.", 
         RowBox[{
          RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
      ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"nrt", "[", "x", "]"}], "]"}], ",", 
        RowBox[{"Stretch", "\[Rule]", 
         RowBox[{"1", "/", 
          RowBox[{"Abs", "[", 
           RowBox[{"nrt", "[", "x", "]"}], "]"}]}]}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Length", "/@", 
          RowBox[{"GG", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nrt", "[", "x", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"pts", "[", 
            RowBox[{"nrt", "[", "x", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}],
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Fun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", "6", "]"}], "[", 
          RowBox[{"s", ",", "x", ",", "#"}], "]"}], "/.", 
         RowBox[{
          RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
      ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"pts", "[", 
            RowBox[{"nrt", "[", "x", "]"}], "]"}]}], ")"}], "//", "Reverse"}],
         ",", 
        RowBox[{"Stretch", "\[Rule]", 
         RowBox[{"1", "/", 
          RowBox[{"Abs", "[", 
           RowBox[{"nrt", "[", "x", "]"}], "]"}]}]}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Length", "/@", 
          RowBox[{"GG", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nrt", "[", "x", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"pts", "[", 
            RowBox[{"nrt", "[", "x", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}],
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.487499444818931*^9, 3.487499539326023*^9}, {
   3.487499582253252*^9, 3.487499584126034*^9}, 3.487499752096848*^9, {
   3.48749997913647*^9, 3.4874999808470783`*^9}, {3.494224518606434*^9, 
   3.494224522999289*^9}}],

Cell["\<\
 We can now compute U.  We also need to scale the computed solution p.\
\>", "Text",
 CellChangeTimes->{{3.487497985140697*^9, 3.487498059543539*^9}, {
  3.487498255424407*^9, 3.487498271727612*^9}, {3.4874996194848223`*^9, 
  3.487499622048493*^9}, {3.487508120960466*^9, 3.487508136918256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", "[", "x", "]"}], "=", 
    RowBox[{"RHSolverTop", "[", 
     RowBox[{"GG", "[", 
      RowBox[{"1.", ",", "x"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "x_", "]"}], ":=", 
   RowBox[{"R", "[", 
    RowBox[{"nr", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GG2", "[", 
     RowBox[{"s", ",", "x"}], "]"}], "//", 
    RowBox[{"R2", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"s", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"DomainIntegrate", "[", 
        RowBox[{"U", "[", 
         RowBox[{"s", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", "\[NonBreakingSpace]", "I"}], ")"}]}], " ", 
     
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.487498040869803*^9, 3.487498070470646*^9}, {
  3.4874982885649633`*^9, 3.487498302569709*^9}, {3.487498871389127*^9, 
  3.487498878515168*^9}, {3.487499623592018*^9, 3.487499643142894*^9}, {
  3.4874997883862057`*^9, 3.487499789118299*^9}}],

Cell["We can evaluate at large x", "Text",
 CellChangeTimes->{{3.505466805831218*^9, 3.5054668102869043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"1.", ",", "10."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466811185688*^9, 3.50546682034383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.1047532552345561`*^-10"}], "-", 
  RowBox[{"1.8701582333041393`*^-26", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505469122151697*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PainleveII", "[", 
  RowBox[{
   RowBox[{"1.", 
    RowBox[{"{", 
     RowBox[{"I", ",", "0", ",", 
      RowBox[{"-", "I"}]}], "}"}]}], ",", "10."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466822769802*^9, 3.505466855063006*^9}, {
  3.505471561033547*^9, 3.505471561697947*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.1047532552898696`*^-10"}], "+", 
  RowBox[{"4.6152344308338357`*^-29", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505469122593082*^9, 3.505471562048918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"2.", ",", "10."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466811185688*^9, 3.505466849530843*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.2095065104691121`*^-10"}], "-", 
  RowBox[{"3.7403164666082787`*^-26", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505469124985292*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PainleveII", "[", 
  RowBox[{
   RowBox[{"2.", 
    RowBox[{"{", 
     RowBox[{"I", ",", "0", ",", 
      RowBox[{"-", "I"}]}], "}"}]}], ",", "10."}], "]"}]], "Input",
 CellChangeTimes->{{3.505466822769802*^9, 3.505466852192254*^9}, {
  3.505471564169387*^9, 3.505471564889509*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.2095065105797393`*^-10"}], "+", 
  RowBox[{"9.230468861667671`*^-29", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.505469125182016*^9, 3.505471565234123*^9}]
}, Open  ]],

Cell["\<\
We can find the relative error of the approximation for the \
Hastings\[Dash]McLeod solution (note that x = 10 the relative error between \
the Hastings\[Dash]McLeod solution and the Airy function is already on the \
order of machine precision).  Note the jump in accuracy as we move from one \
block to the next, and that the method remains accurate in the asymptotic \
regime.\
\>", "Text",
 CellChangeTimes->{{3.487499165427227*^9, 3.4874992217769136`*^9}, {
  3.487500023538669*^9, 3.4875000541189337`*^9}, {3.4875012611847258`*^9, 
  3.4875012813735847`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
      "\"\<RiemannHilbert/Data/McLeodSolution.txt\>\"", ",", "Number"}], 
      "]"}], ",", "7"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4874989782481327`*^9, 3.4874989847008257`*^9}, {
  3.487499015749301*^9, 3.487499021267578*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLineLogPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"1.", ",", 
                RowBox[{"x", "=", 
                 RowBox[{"First", "[", "#", "]"}]}]}], "]"}], "-", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             ")"}], "/", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}], ")"}], "&"}], "/@", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"660", ";;", "900", ";;", "5"}], "\[RightDoubleBracket]"}]}],
        "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Error in approximating the Hastings\[Dash]McLeod solution for \
large x\>\""}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.487499233435021*^9, 3.487499340070856*^9}, {
   3.487499819059517*^9, 3.487499963030755*^9}, {3.487500010181272*^9, 
   3.4875000304509277`*^9}, {3.487500078508412*^9, 3.487500169838297*^9}, {
   3.487501137794245*^9, 3.4875012525306664`*^9}, {3.4875015297918587`*^9, 
   3.4875015497504463`*^9}, {3.487504346070032*^9, 3.4875043641090717`*^9}, 
   3.487508149734049*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQDQEf7LsbDnT4VFgegAo4MKffLZrKYgblczgUNz8K
UYkygfIFHHIMm0V3mhtD+SIOJxnZ1tpXGEH5Eg55Oy3TXK1gfBmHXv994tOz
7KF8BYfX7zh5ptjbQflKDmvOfk8PSoTxVRxWsnzz7rxmA+WrOegvrNcWlbGG
8jUcvp24ms/9E+ZeLYeS4iLv6eIwvo7DlwdJDw3iLaB8PYeXAhsm6x8xh/IN
HCLuTcjYbA/jGzow3d8quUYIpt/IQcJqVvD2Rph+Y4e1F8wZm/7D1Js4nIpp
vH6oA8Y3dRD2u6AQKA3jmzm4sHOsW7sVFn7mDhZLirv2h8H4Fg7/dFI1Nvw1
hfItHT4vC5O9thLGt3KYpCifl3kFZr+1A2OykYNkKYxv45CwZHXOXWkY39bh
vvPEee+Pw+y3czCsjF09twLGt3eQPhkcFacL4zs4+FeYzT72FOqeBgeH2xO4
vBsWwtzn6CCqM+W2dQJM3tHhWOqJY7sVYfJODpvUzmrZ5EPtb3ByWOJ2wNhY
G+YeZ4ebDy4fsn8Fta/B2WEiE9dnrjUw+10c7r3+/TS0ACbv4mDqNkvgjRlM
3tUh9r1G3sL/MPtdHVg6Wz/4noLZ7+bwmWe3w4VpMHk3h3k9u2Q5U2Hy7g4T
TYruXTeBuc/d4cj5Pt+b8PjzcMj5qXhnyRmY/R4OuUtL/TVmmx8AAIYQ29I=

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., -31.41636799236544},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-29.933606208922594`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-27.631021115928547`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-20.72326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-31.543044121356694`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-31.13757901324853, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.84989694079675, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.626753389482538`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.444431832688586`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.290281152861326`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.156749760236803`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.03896672458042, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.240459028362647`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.834993920254483`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.547311847802703`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.324168296488494`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.14184673969454, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.98769605986728, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.85416466724276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.736381631586376`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.937873935368604`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.53240882726044, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.244726754808656`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.021583203494448`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.839261646700493`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.685110966873236`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.551579574248713`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.43379653859233, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.635288842374557`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.229823734266393`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.942141661814613`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.7189981105004, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.536676553706446`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.38252587387919, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.248994481254666`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.131211445598282`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.33270374938051, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.927238641272346`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.639556568820566`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.416413017506358`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.234091460712403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.079940780885142`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.94640938826062, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.82862635260424, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.030118656386467`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.624653548278303`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.33697147582652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.11382792451231, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.931506367718356`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.7773556878911, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.643824295266576`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.526041259610192`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-32.23619130191664, 
       FormBox["\"\"", TraditionalForm]}, {-29.933606208922594`, 
       FormBox["\"\"", TraditionalForm]}, {-27.631021115928547`, 
       FormBox["\"\"", TraditionalForm]}, {-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-23.025850929940457`, 
       FormBox["\"\"", TraditionalForm]}, {-20.72326583694641, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-31.543044121356694`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-31.13757901324853, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.84989694079675, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.626753389482538`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.444431832688586`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.290281152861326`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.156749760236803`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.03896672458042, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.240459028362647`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.834993920254483`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.547311847802703`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.324168296488494`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.14184673969454, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.98769605986728, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.85416466724276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.736381631586376`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.937873935368604`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.53240882726044, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.244726754808656`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.021583203494448`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.839261646700493`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.685110966873236`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.551579574248713`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.43379653859233, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.635288842374557`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.229823734266393`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.942141661814613`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.7189981105004, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.536676553706446`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.38252587387919, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.248994481254666`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.131211445598282`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.33270374938051, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.927238641272346`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.639556568820566`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.416413017506358`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.234091460712403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.079940780885142`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.94640938826062, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.82862635260424, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.030118656386467`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.624653548278303`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.33697147582652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.11382792451231, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.931506367718356`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.7773556878911, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.643824295266576`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.526041259610192`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Error in approximating the Hastings\[Dash]McLeod solution for large \
x\"", TraditionalForm],
  PlotRange->{{0., 49.}, {-31.41636799236544, -18.227621449559074`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, {{-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-29.933606208922594`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-27.631021115928547`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-23.025850929940457`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-20.72326583694641, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-31.543044121356694`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-31.13757901324853, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.84989694079675, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.626753389482538`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.444431832688586`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.290281152861326`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.156749760236803`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.03896672458042, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-29.240459028362647`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.834993920254483`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.547311847802703`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.324168296488494`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.14184673969454, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.98769605986728, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.85416466724276, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.736381631586376`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.937873935368604`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.53240882726044, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.244726754808656`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.021583203494448`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.839261646700493`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.685110966873236`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.551579574248713`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.43379653859233, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-24.635288842374557`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-24.229823734266393`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.942141661814613`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.7189981105004, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.536676553706446`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.38252587387919, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.248994481254666`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.131211445598282`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-22.33270374938051, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.927238641272346`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.639556568820566`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.416413017506358`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.234091460712403`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.079940780885142`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.94640938826062, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.82862635260424, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.030118656386467`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.624653548278303`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.33697147582652, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.11382792451231, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.931506367718356`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.7773556878911, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.643824295266576`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.526041259610192`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.487508284150633*^9, 3.494230155310885*^9, 
  3.505469247221961*^9}]
}, Open  ]],

Cell[TextData[{
 "We can also use this approach to compute other Ablowitz\[Dash]Segur \
solutions.  Letting ",
 StyleBox["s",
  FontSlant->"Italic"],
 " become large and a pole appears."
}], "Text",
 CellChangeTimes->{{3.487501293605707*^9, 3.487501310644134*^9}, {
  3.487501647513755*^9, 3.4875016571977873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLineLogPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "[", 
              RowBox[{"1.", ",", 
               RowBox[{"x", "=", 
                RowBox[{"First", "[", "#", "]"}]}]}], "]"}], ")"}], "&"}], "/@", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"660", ";;", "700"}], "\[RightDoubleBracket]"}]}], "//", 
          "Abs"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "[", 
              RowBox[{"10.", ",", 
               RowBox[{"x", "=", 
                RowBox[{"First", "[", "#", "]"}]}]}], "]"}], ")"}], "&"}], "/@", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"660", ";;", "700"}], "\[RightDoubleBracket]"}]}], "//", 
          "Abs"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "[", 
              RowBox[{"100.", ",", 
               RowBox[{"x", "=", 
                RowBox[{"First", "[", "#", "]"}]}]}], "]"}], ")"}], "&"}], "/@", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"660", ";;", "700"}], "\[RightDoubleBracket]"}]}], "//", 
          "Abs"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Three Ablowitz\[Dash]Segur solutions\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.487501427458205*^9, 3.4875015967738867`*^9}, {
   3.487501632224627*^9, 3.4875016960578623`*^9}, 3.487501749535434*^9, {
   3.487501791921855*^9, 3.487501795277618*^9}, {3.487501857548588*^9, 
   3.487501857970523*^9}, {3.487501898580653*^9, 3.487501929536117*^9}, {
   3.487504370564623*^9, 3.487504389755292*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7G/aHgu4f47xAFTA4bEUA39OAROUz+HAb/gl
/7gIM5Qv4GC+64zLq90wvogD59MvAWdTWaB8CYeqv3JBmUKsUL6Mg2tZDPv2
gzC+gkNecbD5+mI2KF/J4aP3/K1eGuxQvoqD876s9Kb7ML6ag3JUsLv/TA4o
X8Ph+s+lGatCOaF8LYcieZZfPSJcUL6Ow/Edje4frsL4eg5ttl57zs7khvIN
HDbE3n4sl8AD5Rs67J7+KOuuBi+Ub+SwQ+KUPPMXGN/Y4Y8bw+fOg3xQvolD
YRDL9+yJ/FC+qUPuBIUNFw0FoHwzB7uKeCfROTC+ucOWnptva9kFoXwLB2nL
qn8cJTC+pcMUFt0Lmx/C+FYOz/tbzlUHCEH51g6ng6JL4g7A+DYOv57le0ca
CkP5tg4r0/+9zlwM49s5fNNd8qdXTATKt3fY+LXC4HAXjO/gUPHT3pOdQRTC
b3Bw0JkkLBpRBuUzODpIWbbkbX4Lk3d04O02sRFPE4PKOznMWVBe0Hgfym9w
cqj5/ZHjQ6Q4VN7ZwcLMli/xKpTf4OwQMqVv8qVACai8i4NwS8I2p/NQfoOL
g6yk/Lz1vpIHAFWlsAc=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1yU9MEgAUx3GwItNMKBcsW2VrRkUSIiJq8BNZsWouITba+oNWXFpjzUPm
WuPULXNGh6i1VWvROFhaHWoGa4mNmE3cwrGxspWxWQaWRGJZjV9ve3v7vG9F
u8tyokAgEGz5u/9uflIG5Uhpl/DYiIEPLEjMjvSVIF2IM3dNCqfOS4sxb2gt
W28ZCORdhhqr83PUGqJl+K68cfWic5Rei3OrhxLne2P0BiQc8bThYYLeiLd7
FdLu5AS9CRb5oY7+zAe6EvaKllP7RUlaDo0vMjgum6K3otwc2depnKYV+Pom
IOm9k6KrUOxL9rTWztA7oNIU/dwT/kar4G3f/epZ2yxdjcNHVCffzWdoNU5r
B4+OX8vSNbCFn6pD+jlag9yDC6LnH3N0Lep0tnii5xetRWKsyl+JBboOj34H
/NGzgmDeOrR6Ju/32YR0PdY8nnjpVxfQDaj3zDQOr1pEN2KzbV2HMPPfO7FL
/Kn8YHwxrYcv222PBJfQBmSjJTH7PRENeF57U7nLS/N2A8evu5/0uwvZm7Bt
6oe0y7WMvQmS8NBwi6OI3YhZuda13VrMbsR0W/rWSvNy9mY09OW+zOlL2Jvx
4uaB2HvtCnYTjJ32yVB1KbsJl27Lxkal4uAf6xjICw==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7BfG6InkHDhuDxVw6FH8mbTK+xyUz+Hgmve/
c1fgZShfwEH+2ctLk9NuQPkiDjPf5sm3ZN+D8iUc7gucVtu2/RGUL+Ow6/ur
u1ePPYPyFRw2R+z7dKnqNZSv5BB49Frk39oPUL6Kw6VPCkJiJz5D+WoO3Guu
b/h6+zuUr+Fw45evsIvdXyhfy2Gndsh+70VMDhC+joNFa+iWppdcUL6ew+HV
7QwmC3igfAOH9fFLjb4aM0P5hg5iK+SEPz+HmWfk0BVwdc4rtx9QvrHD3Z9H
fdr+w9xj4sD65uSRSXD3mjo8mlb3ie3jKyjfzOG9Z+vFY31PoXxzh3dRwrbr
Fz6A8i0cRCbU/ZkoAAs/Swepp8yaZ9fCwtvKYc2k/FlKV3dD+dYOp1261245
MWk/hG/j8OzGls/FjoegfFuH9qqlp9m+XoDy7RxuaU+U+L/5BpRv7/DK5+zr
J0YPoHwHB6OwTexxHE8g/AYHB9EdEs2P7jyHyjs6TFbWqYjf9Boq7+gQccLy
Z2jXe6i8k0OH/X3zn5s+QuWdHNY9y4nkX/wZKu/scDatXvDE1K9QeWcHriNn
YzO7v0PlXRwWZj57qtHyEyrv4nD7eHSufsPv/QCLNNCb
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., -6.325865240715101},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Three Ablowitz\[Dash]Segur solutions\"", TraditionalForm],
  PlotRange->{{0., 41.}, {-6.325865240715101, 3.5782241860774504`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, {{-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.298317366548036, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.407945608651872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.487501430281*^9, 3.487501520667204*^9}, 
   3.487501583465755*^9, {3.487501629866395*^9, 3.487501692028113*^9}, {
   3.487501745863258*^9, 3.487501755249935*^9}, 3.487501851947337*^9, {
   3.487501892316016*^9, 3.487501930056951*^9}, 3.48750814388229*^9, 
   3.487508405803546*^9, 3.494230366864003*^9, 3.505469437696012*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.487485968909573*^9, 3.487485972758148*^9}}],

Cell[TextData[{
 "A. S. Fokas, A. R. Its, A. A. Kapaev & V. Yu. Novokshenov (2006), ",
 StyleBox["Painlev\[EAcute] Transcendents: the Riemann\[Dash]Hilbert approach",
  FontSlant->"Italic"],
 ", AMS. \n\nS. Olver (2010), A general framework for solving \
Riemann\[Dash]Hilbert problems numerically, Report no. NA-10/5, Mathematical \
Institute, Oxford University.\n\nS. Olver (2009b), Numerical solution of \
Riemann\[Dash]Hilbert problems: Painlev\[EAcute] II, to appear in ",
 StyleBox["Found. Comput. Maths",
  FontSlant->"Italic"],
 ".\n\nS. Olver (2009a), Computing the Hilbert transform and its inverse, to \
appear in ",
 StyleBox["Maths Comp",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.487485977735705*^9, 3.487486197720181*^9}, {
  3.487488567787958*^9, 3.487488593526691*^9}, {3.505466878037496*^9, 
  3.505466885077773*^9}}]
}, Closed]]
},
WindowSize->{1060, 833},
WindowMargins->{{47, Automatic}, {Automatic, 5}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], CellDingbat -> None, FontSize -> 16, Background -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> True, 
    CellMargins -> {{27 + 3 6.5, Inherited}, {6, 20}}], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> True, 
    CellMargins -> {{27 + 4 6.5, Inherited}, {4, 15}}], 
   Cell[
    StyleData["Subsubsection"], CellDingbat -> "\[EmptySmallSquare]", 
    ShowGroupOpener -> True, 
    CellMargins -> {{27 + 5 6.5, Inherited}, {2, 10}}]}, Visible -> False, 
  FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 233, 5, 46, "Text"],
Cell[781, 27, 265, 6, 27, "Input"],
Cell[1049, 35, 108, 1, 46, "Text"],
Cell[1160, 38, 77, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[1262, 44, 170, 2, 51, "Section"],
Cell[CellGroupData[{
Cell[1457, 50, 110, 1, 33, "Subsection"],
Cell[1570, 53, 128, 1, 46, "Text"],
Cell[1701, 56, 464, 14, 27, "Input"],
Cell[2168, 72, 209, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[2402, 79, 121, 2, 27, "Input"],
Cell[2526, 83, 764, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3327, 99, 146, 3, 27, "Input"],
Cell[3476, 104, 709, 11, 27, "Output"]
}, Open  ]],
Cell[4200, 118, 282, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[4507, 127, 69, 1, 27, "Input"],
Cell[4579, 130, 1878, 34, 124, "Output"]
}, Open  ]],
Cell[6472, 167, 167, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[6664, 174, 313, 7, 27, "Input"],
Cell[6980, 183, 787, 11, 27, "Output"]
}, Open  ]],
Cell[7782, 197, 126, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[7933, 202, 638, 18, 49, "Input"],
Cell[8574, 222, 666, 10, 27, "Output"]
}, Open  ]],
Cell[9255, 235, 137, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[9417, 240, 459, 13, 27, "Input"],
Cell[9879, 255, 841, 16, 27, "Output"]
}, Open  ]],
Cell[10735, 274, 138, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[10898, 279, 324, 9, 27, "Input"],
Cell[11225, 290, 752, 15, 27, "Output"]
}, Open  ]],
Cell[11992, 308, 264, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[12281, 318, 335, 9, 27, "Input"],
Cell[12619, 329, 599, 9, 30, "Output"]
}, Open  ]],
Cell[13233, 341, 127, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[13385, 346, 387, 11, 27, "Input"],
Cell[13775, 359, 621, 11, 27, "Output"]
}, Open  ]],
Cell[14411, 373, 159, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[14595, 379, 153, 3, 27, "Input"],
Cell[14751, 384, 581, 10, 27, "Output"]
}, Open  ]],
Cell[15347, 397, 184, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[15556, 403, 541, 15, 47, "Input"],
Cell[16100, 420, 615, 10, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[16764, 436, 240, 5, 23, "Subsection"],
Cell[17007, 443, 215, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[17247, 451, 1001, 23, 27, "Input"],
Cell[18251, 476, 24338, 406, 130, "Output"]
}, Open  ]],
Cell[42604, 885, 402, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[43031, 896, 953, 24, 47, "Input"],
Cell[43987, 922, 833, 12, 30, "Output"]
}, Open  ]],
Cell[44835, 937, 325, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[45185, 947, 298, 9, 27, "Input"],
Cell[45486, 958, 49643, 829, 131, "Output"]
}, Open  ]],
Cell[95144, 1790, 266, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[95435, 1797, 128, 2, 27, "Input"],
Cell[95566, 1801, 25082, 419, 127, "Output"]
}, Open  ]],
Cell[120663, 2223, 323, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[121011, 2231, 1343, 33, 27, "Input"],
Cell[122357, 2266, 16670, 287, 132, "Output"]
}, Open  ]],
Cell[139042, 2556, 422, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[139489, 2568, 814, 22, 47, "Input"],
Cell[140306, 2592, 711, 11, 30, "Output"]
}, Open  ]],
Cell[141032, 2606, 501, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[141558, 2618, 349, 10, 27, "Input"],
Cell[141910, 2630, 32461, 564, 132, "Output"]
}, Open  ]],
Cell[174386, 3197, 462, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[174873, 3207, 240, 6, 27, "Input"],
Cell[175116, 3215, 783, 12, 30, "Output"]
}, Open  ]],
Cell[175914, 3230, 163, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[176102, 3237, 400, 13, 27, "Input"],
Cell[176505, 3252, 552, 10, 27, "Output"]
}, Open  ]],
Cell[177072, 3265, 224, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[177321, 3274, 391, 12, 27, "Input"],
Cell[177715, 3288, 587, 11, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[178351, 3305, 241, 5, 23, "Subsection"],
Cell[178595, 3312, 462, 8, 65, "Text"],
Cell[CellGroupData[{
Cell[179082, 3324, 799, 20, 46, "Input"],
Cell[179884, 3346, 15271, 258, 127, "Output"]
}, Open  ]],
Cell[195170, 3607, 350, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[195545, 3615, 934, 24, 47, "Input"],
Cell[196482, 3641, 830, 13, 30, "Output"]
}, Open  ]],
Cell[197327, 3657, 417, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[197769, 3666, 1162, 29, 46, "Input"],
Cell[198934, 3697, 8131, 149, 140, "Output"]
}, Open  ]],
Cell[207080, 3849, 465, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[207570, 3859, 808, 22, 47, "Input"],
Cell[208381, 3883, 623, 9, 30, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[209065, 3899, 108, 1, 35, "Section"],
Cell[209176, 3902, 183, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[209384, 3910, 163, 2, 33, "Subsection"],
Cell[209550, 3914, 2531, 80, 312, "Text"],
Cell[212084, 3996, 1123, 29, 58, "Input"],
Cell[213210, 4027, 174, 2, 46, "Text"],
Cell[213387, 4031, 2863, 101, 251, "Input"],
Cell[216253, 4134, 518, 10, 65, "Text"],
Cell[216774, 4146, 3439, 87, 103, "Input"],
Cell[220216, 4235, 175, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[220416, 4241, 308, 6, 27, "Input"],
Cell[220727, 4249, 1852, 33, 229, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[222628, 4288, 189, 6, 22, "Subsection"],
Cell[222820, 4296, 176, 4, 46, "Text"],
Cell[222999, 4302, 421, 11, 58, "Input"],
Cell[223423, 4315, 424, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[223872, 4326, 1189, 38, 43, "Input"],
Cell[225064, 4366, 1094, 25, 33, "Output"]
}, Open  ]],
Cell[226173, 4394, 1487, 39, 134, "Text"],
Cell[CellGroupData[{
Cell[227685, 4437, 378, 9, 47, "Input"],
Cell[228066, 4448, 549, 9, 27, "Output"]
}, Open  ]],
Cell[228630, 4460, 184, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[228839, 4468, 309, 8, 27, "Input"],
Cell[229151, 4478, 188, 4, 27, "Output"]
}, Open  ]],
Cell[229354, 4485, 339, 10, 46, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[229730, 4500, 205, 5, 22, "Subsection"],
Cell[229938, 4507, 559, 15, 65, "Text"],
Cell[230500, 4524, 838, 18, 43, "Input"],
Cell[231341, 4544, 362, 6, 46, "Text"],
Cell[231706, 4552, 712, 18, 43, "Input"],
Cell[232421, 4572, 193, 4, 46, "Text"],
Cell[232617, 4578, 1027, 24, 63, "Input"],
Cell[233647, 4604, 308, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[233980, 4613, 346, 10, 27, "Input"],
Cell[234329, 4625, 729, 17, 33, "Output"]
}, Open  ]],
Cell[235073, 4645, 341, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[235439, 4655, 939, 20, 27, "Input"],
Cell[236381, 4677, 2459, 46, 251, "Output"]
}, Open  ]],
Cell[238855, 4726, 292, 5, 46, "Text"],
Cell[239150, 4733, 534, 17, 43, "Input"],
Cell[CellGroupData[{
Cell[239709, 4754, 3849, 100, 133, "Input"],
Cell[243561, 4856, 19399, 369, 246, "Output"]
}, Open  ]],
Cell[262975, 5228, 187, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[263187, 5234, 1095, 26, 58, "Input"],
Cell[264285, 5262, 113607, 1851, 312, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[377941, 7119, 259, 5, 23, "Subsection"],
Cell[378203, 7126, 1249, 33, 141, "Text"],
Cell[379455, 7161, 5655, 179, 274, "Input"],
Cell[385113, 7342, 941, 13, 27, "Input"],
Cell[386057, 7357, 964, 21, 141, "Text"],
Cell[387024, 7380, 953, 28, 73, "Input"],
Cell[387980, 7410, 702, 16, 65, "Text"],
Cell[388685, 7428, 1047, 25, 43, "Input"],
Cell[389735, 7455, 234, 3, 46, "Text"],
Cell[389972, 7460, 1033, 24, 63, "Input"],
Cell[391008, 7486, 535, 11, 46, "Text"],
Cell[CellGroupData[{
Cell[391568, 7501, 146, 3, 27, "Input"],
Cell[391717, 7506, 192, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391946, 7514, 306, 8, 27, "Input"],
Cell[392255, 7524, 189, 3, 27, "Output"]
}, Open  ]],
Cell[392459, 7530, 528, 9, 46, "Text"],
Cell[CellGroupData[{
Cell[393012, 7543, 1223, 24, 27, "Input"],
Cell[394238, 7569, 2710, 51, 259, "Output"]
}, Open  ]],
Cell[396963, 7623, 174, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[397162, 7631, 3187, 87, 103, "Input"],
Cell[400352, 7720, 22349, 422, 241, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[422762, 8149, 161, 4, 35, "Section"],
Cell[422926, 8155, 728, 11, 65, "Text"],
Cell[423657, 8168, 1175, 29, 58, "Input"],
Cell[424835, 8199, 7574, 246, 424, "Input"],
Cell[CellGroupData[{
Cell[432434, 8449, 360, 7, 27, "Input"],
Cell[432797, 8458, 1927, 35, 428, "Output"]
}, Open  ]],
Cell[434739, 8496, 309, 6, 65, "Text"],
Cell[435051, 8504, 1727, 47, 93, "Input"],
Cell[436781, 8553, 215, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[437021, 8564, 147, 3, 27, "Input"],
Cell[437171, 8569, 204, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437412, 8578, 304, 8, 27, "Input"],
Cell[437719, 8588, 203, 4, 27, "Output"]
}, Open  ]],
Cell[437937, 8595, 201, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[438163, 8603, 677, 16, 27, "Input"],
Cell[438843, 8621, 18820, 315, 250, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[457712, 8942, 146, 2, 35, "Section"],
Cell[457861, 8946, 1315, 33, 135, "Text"],
Cell[CellGroupData[{
Cell[459201, 8983, 113, 1, 33, "Subsection"],
Cell[459317, 8986, 545, 13, 65, "Text"],
Cell[459865, 9001, 3817, 87, 133, "Input"],
Cell[463685, 9090, 464, 8, 65, "Text"],
Cell[464152, 9100, 3484, 90, 156, "Input"],
Cell[467639, 9192, 203, 2, 46, "Text"],
Cell[467845, 9196, 15473, 424, 526, "Input"],
Cell[483321, 9622, 180, 5, 46, "Text"],
Cell[483504, 9629, 23474, 685, 751, "Input"],
Cell[506981, 10316, 454, 7, 65, "Text"],
Cell[507438, 10325, 12005, 326, 343, "Input"],
Cell[519446, 10653, 398, 6, 84, "Text"],
Cell[519847, 10661, 1296, 30, 58, "Input"],
Cell[521146, 10693, 155, 3, 46, "Text"],
Cell[521304, 10698, 11323, 312, 343, "Input"],
Cell[532630, 11012, 134, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[532789, 11017, 220, 5, 27, "Input"],
Cell[533012, 11024, 3392, 57, 473, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[536453, 11087, 113, 1, 22, "Subsection"],
Cell[536569, 11090, 201, 4, 46, "Text"],
Cell[536773, 11096, 527, 14, 43, "Input"],
Cell[537303, 11112, 198, 4, 46, "Text"],
Cell[537504, 11118, 1199, 30, 58, "Input"],
Cell[538706, 11150, 159, 3, 46, "Text"],
Cell[538868, 11155, 1994, 54, 73, "Input"],
Cell[540865, 11211, 133, 3, 46, "Text"],
Cell[541001, 11216, 508, 14, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[541546, 11235, 111, 1, 22, "Subsection"],
Cell[541660, 11238, 284, 5, 46, "Text"],
Cell[541947, 11245, 1132, 27, 58, "Input"],
Cell[543082, 11274, 112, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[543219, 11279, 539, 15, 27, "Input"],
Cell[543761, 11296, 24647, 411, 242, "Output"]
}, Open  ]],
Cell[568423, 11710, 325, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[568773, 11720, 1917, 52, 73, "Input"],
Cell[570693, 11774, 106930, 1804, 252, 74437, 1271, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[677684, 13585, 96, 1, 35, "Section"],
Cell[677783, 13588, 1247, 35, 135, "Text"],
Cell[CellGroupData[{
Cell[679055, 13627, 114, 1, 33, "Subsection"],
Cell[679172, 13630, 272, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[679469, 13641, 3683, 110, 200, "Input"],
Cell[683155, 13753, 523, 11, 23, "Message"]
}, Open  ]],
Cell[683693, 13767, 307, 7, 46, "Text"],
Cell[684003, 13776, 1610, 48, 43, "Input"],
Cell[685616, 13826, 119, 1, 46, "Text"],
Cell[685738, 13829, 12496, 358, 713, "Input"],
Cell[698237, 14189, 253, 5, 46, "Text"],
Cell[698493, 14196, 5471, 147, 193, "Input"],
Cell[703967, 14345, 177, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[704169, 14351, 423, 11, 27, "Input"],
Cell[704595, 14364, 2102, 35, 466, "Output"]
}, Open  ]],
Cell[706712, 14402, 258, 5, 46, "Text"],
Cell[706973, 14409, 5840, 171, 208, "Input"],
Cell[712816, 14582, 138, 2, 46, "Text"],
Cell[712957, 14586, 9109, 284, 343, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[722103, 14875, 110, 1, 22, "Subsection"],
Cell[722216, 14878, 143, 2, 46, "Text"],
Cell[722362, 14882, 783, 19, 73, "Input"],
Cell[723148, 14903, 253, 5, 46, "Text"],
Cell[723404, 14910, 1380, 33, 58, "Input"],
Cell[724787, 14945, 756, 20, 65, "Text"],
Cell[725546, 14967, 1413, 41, 117, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[726996, 15013, 123, 1, 22, "Subsection"],
Cell[727122, 15016, 263, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[727410, 15025, 1599, 40, 148, "Input"],
Cell[729012, 15067, 78337, 1291, 317, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[807410, 16365, 178, 5, 35, "Section"],
Cell[807591, 16372, 872, 28, 71, "Text"],
Cell[808466, 16402, 3460, 114, 140, "Input"],
Cell[811929, 16518, 1765, 51, 152, "Text"],
Cell[813697, 16571, 4721, 133, 148, "Input"],
Cell[818421, 16706, 253, 5, 65, "Text"],
Cell[818677, 16713, 1625, 51, 106, "Input"],
Cell[820305, 16766, 119, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[820449, 16771, 163, 3, 27, "Input"],
Cell[820615, 16776, 1285, 26, 247, "Output"]
}, Open  ]],
Cell[821915, 16805, 1040, 19, 112, "Text"],
Cell[822958, 16826, 3300, 87, 204, "Input"],
Cell[826261, 16915, 118, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[826404, 16920, 231, 5, 27, "Input"],
Cell[826638, 16927, 8438, 138, 272, "Output"]
}, Open  ]],
Cell[835091, 17068, 447, 10, 65, "Text"],
Cell[835541, 17080, 3368, 99, 163, "Input"],
Cell[838912, 17181, 306, 5, 46, "Text"],
Cell[839221, 17188, 1719, 51, 88, "Input"],
Cell[840943, 17241, 110, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[841078, 17246, 145, 3, 27, "Input"],
Cell[841226, 17251, 191, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[841454, 17260, 306, 8, 27, "Input"],
Cell[841763, 17270, 213, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[842013, 17279, 146, 3, 27, "Input"],
Cell[842162, 17284, 191, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[842390, 17293, 306, 8, 27, "Input"],
Cell[842699, 17303, 212, 4, 30, "Output"]
}, Open  ]],
Cell[842926, 17310, 574, 10, 84, "Text"],
Cell[843503, 17322, 380, 10, 27, "Input"],
Cell[CellGroupData[{
Cell[843908, 17336, 1582, 38, 88, "Input"],
Cell[845493, 17376, 20146, 392, 243, "Output"]
}, Open  ]],
Cell[865654, 17771, 315, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[865994, 17783, 2168, 51, 148, "Input"],
Cell[868165, 17836, 17263, 325, 254, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[885477, 18167, 95, 1, 35, "Section"],
Cell[885575, 18170, 856, 18, 179, "Text"]
}, Closed]]
}
]
*)

(* End of internal cache information *)
