(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    873485,      18080]
NotebookOptionsPosition[    859673,      17664]
NotebookOutlinePosition[    860788,      17699]
CellTagsIndexPosition[    860745,      17696]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Run the following line to add the package to the path (unless this has \
already been done)\
\>", "Text",
 CellChangeTimes->{{3.48750386720586*^9, 3.4875039129540567`*^9}, {
  3.4875084630849857`*^9, 3.487508465329418*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.483534084037822*^9, 3.4835340864152193`*^9}, {
  3.487503854616407*^9, 3.487503884862125*^9}}],

Cell["Now we can load the package", "Text",
 CellChangeTimes->{{3.487503892019294*^9, 3.48750389627507*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "RiemannHilbert`"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[" Cauchy and Hilbert Transforms", "Section",
 CellChangeTimes->{{3.4839390030910463`*^9, 3.4839390081301403`*^9}, {
  3.483939612251837*^9, 3.4839396149292383`*^9}}],

Cell[CellGroupData[{

Cell["Over the unit interval", "Subsection",
 CellChangeTimes->{{3.483939620701985*^9, 3.483939627338355*^9}}],

Cell["We can define a function over an interval as", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Fun", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "#"}], "]"}], "&"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.484215021304253*^9, 3.484215030113003*^9}, 3.4874852448805943`*^9}],

Cell["We can evaluate at point:", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939064452609*^9}, {
  3.483939585161681*^9, 3.483939589616446*^9}, {3.483943258119294*^9, 
  3.4839432640311537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", ".5", "]"}]], "Input",
 CellChangeTimes->{{3.483943264459803*^9, 3.483943266825713*^9}}],

Cell[BoxData[
 RowBox[{"0.8775825618903728`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.479425538604203`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483943267200242*^9, 3.483943274592771*^9}, 
   3.484206134204393*^9, 3.484214229913796*^9, {3.484214995132251*^9, 
   3.484215028169289*^9}, 3.4842151504994497`*^9, 3.484215515053854*^9, 
   3.484215621911017*^9, 3.4842259647359333`*^9, 3.4843130722075987`*^9, 
   3.4843131229553423`*^9, 3.484314357962236*^9, 3.487485182521193*^9, 
   3.4874852461848097`*^9, 3.48750289294211*^9, 3.48750292479748*^9, 
   3.4875031694150877`*^9, 3.487504423420368*^9, 3.4942242471940937`*^9, 
   3.4942268488587217`*^9, 3.4948471370567293`*^9, 3.494850543472827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"I", " ", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.483943269218576*^9, 3.483943271545959*^9}}],

Cell[BoxData[
 RowBox[{"0.8775825618903728`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.479425538604203`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.483943271922353*^9, 3.484206134856089*^9, 3.484214230482024*^9, {
   3.484214995716528*^9, 3.48421500045795*^9}, 3.4842151532041616`*^9, 
   3.484215515639127*^9, 3.4842259653008738`*^9, 3.484313072725293*^9, 
   3.484313122991475*^9, 3.4843143580038443`*^9, 3.487485182970407*^9, 
   3.487485246751083*^9, 3.487502893004964*^9, 3.487502925279158*^9, 
   3.4875031694554243`*^9, 3.4875044234694767`*^9, 3.494224247241386*^9, 
   3.494226848910514*^9, 3.494847137570369*^9, 3.49485054351889*^9}]
}, Open  ]],

Cell["\<\
The output format is its real (in blue) and imaginary (in red) parts\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939064452609*^9}, {
   3.483939585161681*^9, 3.483939589616446*^9}, {3.484028006950367*^9, 
   3.484028007251794*^9}, 3.487502907388776*^9}],

Cell[CellGroupData[{

Cell[BoxData["f"], "Input",
 CellChangeTimes->{3.483939069717352*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{-1., 0.5403023058681398}, {-0.9659258262890682, 
     0.5686555578844955}, {-0.8660254037844386, 
     0.647859344852457}, {-0.7071067811865475, 0.7602445970756302}, {-0.5, 
     0.8775825618903728}, {-0.2588190451025207, 0.9666929047107743}, {0., 
     1.}, {0.2588190451025207, 0.9666929047107743}, {0.5, 
     0.8775825618903728}, {0.7071067811865475, 0.7602445970756302}, {
     0.8660254037844386, 0.647859344852457}, {0.9659258262890682, 
     0.5686555578844955}, {1., 0.5403023058681398}}]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], 
    LineBox[{{-1., -0.8414709848078965}, {-0.9659258262890682, \
-0.8225757451366247}, {-0.8660254037844386, -0.7617599814162892}, \
{-0.7071067811865475, -0.6496369390800624}, {-0.5, -0.479425538604203}, \
{-0.2588190451025207, -0.25593910991063057`}, {0., 0.}, {0.2588190451025207, 
     0.25593910991063057`}, {0.5, 0.479425538604203}, {0.7071067811865475, 
     0.6496369390800624}, {0.8660254037844386, 0.7617599814162892}, {
     0.9659258262890682, 0.8225757451366247}, {1., 0.8414709848078965}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-1., 1.}, {-0.8414709848078965, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.483939069798711*^9, 3.484206136107997*^9, 
  3.484214231668292*^9, 3.484215154073723*^9, 3.484215516826083*^9, 
  3.484225966521563*^9, 3.484313073843339*^9, 3.484313123046185*^9, 
  3.484314358038013*^9, 3.48748518437031*^9, 3.487485247938772*^9, 
  3.4875028930554237`*^9, 3.487503169518085*^9, 3.4875044239319687`*^9, 
  3.494224247291358*^9, 3.494226848948861*^9, 3.494847138996903*^9, 
  3.4948505435578327`*^9}]
}, Open  ]],

Cell["\<\
The Cauchy transform at a point in the complex plane can be evaluated via\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.4839391057185907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cauchy", "[", 
  RowBox[{"f", ",", 
   RowBox[{
    RowBox[{"1.", " ", "\[ImaginaryI]"}], "+", "2."}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483939107398087*^9, 3.483939116192678*^9}, {
  3.484225978866556*^9, 3.484225985195855*^9}, {3.4875029185173597`*^9, 
  3.4875029191417303`*^9}}],

Cell[BoxData[
 RowBox[{"0.050263873102630176`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.12531250008104752`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.48393911215656*^9, 3.483939116429137*^9}, 
   3.484206137976532*^9, 3.484214233224929*^9, 3.484214295131448*^9, 
   3.484215155929678*^9, 3.4842152050704203`*^9, 3.484215238031602*^9, 
   3.484215517491726*^9, 3.4842156259504538`*^9, {3.484225967587305*^9, 
   3.4842259854349422`*^9}, 3.4843130748448563`*^9, 3.484313123089918*^9, 
   3.484314358067478*^9, 3.487485249837955*^9, {3.487502893102744*^9, 
   3.4875029263820744`*^9}, 3.487503169551312*^9, 3.487504423956646*^9, 
   3.494224247333256*^9, 3.494226848999703*^9, 3.4948471407251368`*^9, 
   3.494850543592243*^9}]
}, Open  ]],

Cell["Using NIntegrate we obtain the same result", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939140064568*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], 
     RowBox[{"x", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1.", "\[ImaginaryI]"}], "+", "2."}], ")"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4839391410890207`*^9, 3.483939175245801*^9}, {
  3.484225975220736*^9, 3.4842259881084414`*^9}, {3.4875029299098063`*^9, 
  3.487502934916387*^9}}],

Cell[BoxData[
 RowBox[{"0.05026387310263023`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.1253125000810475`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483939171022257*^9, 3.483939175485423*^9}, 
   3.48420613963494*^9, 3.484215520800668*^9, {3.48422596992747*^9, 
   3.484225988320496*^9}, 3.4843130764866343`*^9, 3.484313123145664*^9, 
   3.484314358358488*^9, 3.487485251332049*^9, 3.4875028932378902`*^9, {
   3.4875029329324083`*^9, 3.487502935396768*^9}, 3.487503169590053*^9, 
   3.487504424059154*^9, 3.494224247664229*^9, 3.494226849098558*^9, 
   3.494847142714096*^9, 3.494850543641328*^9}]
}, Open  ]],

Cell["Near the domain of f, the Cauchy transform has a jump", "Text",
 CellChangeTimes->{{3.483939372032448*^9, 3.4839393883495398`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{"f", ",", 
     RowBox[{"0.1", "+", 
      RowBox[{"0.0000001", " ", "\[ImaginaryI]"}]}]}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{"f", ",", 
     RowBox[{"0.1", "-", 
      RowBox[{"0.0000001", " ", "\[ImaginaryI]"}]}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.48393939212958*^9, 3.483939401624743*^9}, {
  3.4875029377409973`*^9, 3.487502939333192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7949395907077212`", "\[InvisibleSpace]", "+", 
    RowBox[{"0.09716388803833216`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20006448033863494`"}], "-", 
    RowBox[{"0.0026695137479049408`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.483939396974379*^9, 3.483939401982272*^9}, 
   3.4842061407312517`*^9, 3.484215522115271*^9, 3.4842156276859703`*^9, {
   3.484225972111549*^9, 3.484225993946713*^9}, 3.4843130783330717`*^9, 
   3.4843131232110863`*^9, 3.484314358386607*^9, 3.4874852526930532`*^9, 
   3.487502893279882*^9, 3.487502939677994*^9, 3.4875031696222963`*^9, 
   3.4875044241137667`*^9, 3.494224247739086*^9, 3.494226849153133*^9, 
   3.49484714386825*^9, 3.494850543685267*^9}]
}, Open  ]],

Cell["We can reliably evaluate the left and right limits via", "Text",
 CellChangeTimes->{{3.4839394040368977`*^9, 3.483939419151181*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"+", "1"}], ",", "f", ",", "0.1"}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "f", ",", "0.1"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483939427154706*^9, 3.4839394342187433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7949396875737608`", "\[InvisibleSpace]", "+", 
    RowBox[{"0.09716390046026258`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20006447770426564`"}], "-", 
    RowBox[{"0.0026695161864939763`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.483939434471574*^9, 3.4842061429215727`*^9, 
  3.484215523635086*^9, 3.484225995516182*^9, 3.484313080120767*^9, 
  3.484313123271707*^9, 3.484314358420776*^9, 3.487485254380088*^9, 
  3.487502893328183*^9, 3.487502941468704*^9, 3.487503169672826*^9, 
  3.487504424165362*^9, 3.494224247823326*^9, 3.494226849199627*^9, 
  3.494847145399838*^9, 3.494850543751833*^9}]
}, Open  ]],

Cell["Of course, taking the difference we get back f", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394620975924`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{
    RowBox[{"+", "1"}], ",", "f", ",", "0.1"}], "]"}], "-", 
  RowBox[{"Cauchy", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "f", ",", "0.1"}], "]"}], "-", 
  RowBox[{"f", "[", "0.1", "]"}]}]], "Input",
 CellChangeTimes->{{3.4839394605338697`*^9, 3.483939466781172*^9}}],

Cell[BoxData[
 RowBox[{"1.1102230246251565`*^-16", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483939464772664*^9, 3.483939467176708*^9}, 
   3.4842061444703074`*^9, 3.484215524820518*^9, 3.484225997785961*^9, 
   3.484313081922394*^9, 3.484313123343815*^9, 3.484314358457695*^9, 
   3.4874852554471416`*^9, 3.487502893388863*^9, 3.487502943682571*^9, 
   3.487503169726409*^9, 3.48750442420999*^9, 3.494224247906591*^9, 
   3.4942268492530727`*^9, 3.494847146601457*^9, 3.494850543791669*^9}]
}, Open  ]],

Cell["Taking the sum we get the Hilbert transform", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394848904333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cauchy", "[", 
     RowBox[{
      RowBox[{"+", "1"}], ",", "f", ",", "0.1"}], "]"}], "+", 
    RowBox[{"Cauchy", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "f", ",", "0.1"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.483939489751442*^9, 3.483939493183208*^9}, 
   3.4875029474449053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.0944943842737686`"}], "+", 
  RowBox[{"0.5948752098694952`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.4839394935716333`*^9, 3.484206146490868*^9, 3.484215526573022*^9, 
   3.484225999438743*^9, 3.484313084259005*^9, 3.484313123405047*^9, 
   3.4843143585041027`*^9, 3.4874852581985483`*^9, 3.487502893440734*^9, {
   3.487502945124848*^9, 3.487502948006618*^9}, 3.4875031697841063`*^9, 
   3.487504424263494*^9, 3.494224247989279*^9, 3.4942268493000603`*^9, 
   3.4948471482573023`*^9, 3.494850543835741*^9}]
}, Open  ]],

Cell["This is the definition of", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394848904333`*^9}, {
  3.4839395514784403`*^9, 3.48393956799076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hilbert", "[", 
  RowBox[{"f", ",", "0.1"}], "]"}]], "Input",
 CellChangeTimes->{{3.483939569217999*^9, 3.4839395716731863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.0944943842737686`"}], "+", 
  RowBox[{"0.5948752098694952`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.483939572071788*^9, 3.48420614770894*^9, 
  3.4842155299122887`*^9, 3.484226000825066*^9, 3.4843130876662407`*^9, 
  3.484313123472563*^9, 3.484314358541707*^9, 3.487485259287918*^9, 
  3.487502893494632*^9, 3.487502952129448*^9, 3.4875031698162823`*^9, 
  3.4875044243149557`*^9, 3.494224248072691*^9, 3.494226849354498*^9, 
  3.494847149171969*^9, 3.494850543884715*^9}]
}, Open  ]],

Cell["This is equal to the NIntegrate computed version:", "Text",
 CellChangeTimes->{{3.483939436994018*^9, 3.4839394848904333`*^9}, {
  3.483939535733748*^9, 3.4839395470700493`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"\[Pi]", " "}]], 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "x"}], "]"}], 
     RowBox[{"x", "-", "0.1"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.483939511387453*^9, 3.483939528050809*^9}, {
  3.4875044390717916`*^9, 3.487504439695641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.09449438427382711`"}], "+", 
  RowBox[{"0.5948752098695177`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4839395230923767`*^9, 3.48393952824746*^9}, 
   3.484215531086285*^9, 3.484215632178396*^9, 3.484226002726465*^9, 
   3.484313089333988*^9, 3.484313123538452*^9, 3.4843143585919724`*^9, 
   3.487485260256393*^9, 3.487502893545765*^9, 3.4875029530483093`*^9, 
   3.487503169856773*^9, 3.4875044243557568`*^9, 3.4942242482760677`*^9, 
   3.494226849399233*^9, 3.4948471501144743`*^9, 3.494850543941463*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Over the real line of a function with the same asymptotic series at \
\[PlusMinus]\[Infinity]\
\>", "Subsection",
 CellChangeTimes->{{3.483942350266241*^9, 3.483942352792292*^9}, {
  3.4839455399435863`*^9, 3.483945566271522*^9}}],

Cell["\<\
We can define a function over the real line (a mapped Laurent series) as\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"LFun", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"InfinityQ", "[", "#", "]"}], ",", "0", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], " ", 
        RowBox[{"Sech", "[", "#", "]"}]}]}], "]"}], "&"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.484215561208981*^9, 
   3.484215569117217*^9}, {3.4874852690102177`*^9, 3.487485288165881*^9}, {
   3.487485322304699*^9, 3.487485322580554*^9}, {3.4874854277388983`*^9, 
   3.4874854278882933`*^9}, {3.487502984082541*^9, 3.4875029843786497`*^9}, {
   3.494224316344284*^9, 3.49422433414622*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFm3lYTX/U9iuiJKUBv2QsIiFEplqbkJB5SmQq81gyF6GMKaKkKBJlSokm
tTZSiaJRoXk+DScpKuTxXs9az/uX61zldM7e373Wuu/7swZt2L3YTk5GRmZg
JxmZ//fv2d2dLxYX7hZzBrx7oO/6N2TipVc7xMK1YucZMrPOu62L7L2nDrrC
MnGhdt+5QXFLo2e6TqqCwgXilM0rrznZG01W+r5ryzxnC7Fvj0wlpcXrpnyV
rto/y3Sm+H7fGB9Fc+mUQI1Xm3qOny6elUsftv/btanOar9TTL6CqCfRvbnd
r5/Jf6e0R6xeNFVcsCK8uuuTvfF647rFvT0ySZx1b+a7HmHhJi/1q1LU9Y3F
Y8M9vludyYzv5JVgZDZlvGj2++JyizblhP5NUlfXa+PEGKsSmeRD40yDRn0+
5z5mrNg1Wn/RfOtlppNef6nd1G4oHux9vsStelXCrQS7dKPs0eLxHZh5RMsz
QZKnfdX3+0gxctmT40GzAxI+6p4pWDTbQDT56FZfs2hSgpffxqFNb/XF+xKP
QWEWL03LIowVEvYOFwPu6HhpxOWZhn6P9Zw2eZhord1a++txuannAnf/LgP0
xKLzPrMvbK0wjexqcn+N9lAxP/fU6bynaGpsde6g0eghYuU8o/05D5oTRs7W
9/qxVFe8VqYxbR8qY3TeyUGO53XEDkPlJfb/aWOB3DPN7I+DxTm3HhVNPDkE
U/embTyiM1gMieuiOWueAXb16T1b6cQgMaV29n0HI0M86xZTsbh2oNhzivRa
8I3RqC3p93y2zUBRPXlzvFKUHg6/2JSkEDlAnJ0s7x9pqIQXhr074RDXX1Ts
u77O+KwuqFpaL9qa0U+Mk1Y49jhhAmN/Pun5oFlbVPPZ0Mdcby5o+U/u009X
W1xo1yX7guoycGrVsn1l01c8rzV5yuLgNVAww8A7OkhL7DlslP5i143wcJLU
zajpP/FNl58LnjlsAfdJ3muPWfwnblLNjDu6bSf00k8d0BzSR3T2d/Mo6bMX
Pit0c/6j0kd87Tp0dJC5A3y2qlDXcO4trgnf/2WyriPIq8mkvmjqJRpfrL+p
c3k/9Pn8/dDpnb3E9upcc9v9B8Bl9td45QZN8XFshsfY6AMwuUCs/OagKQYf
OPplz7QD0CthjEZhh4bo6yQ1UfjrCAW9rbacvKghOqvbRQ4qcYDoOa5LfQf/
e/06afn0L3vARO5j+9dYddHI2HXijZStIBPU7bbqCnUx5HqfW2X5a8Fortuk
Xz/URKU+KR6/DgqwaFioZPN1NdE4clX8uZlL0G+3x/Mh09RE28D8tC8LtmL+
qQn9u9b2FKuz0pu+7nLEy82VWSU+PUX9Jzbu5v2PoeQ67rto3lN0OSVu1Mk9
hVFK2y2q21RFh2HX7/m7nUMNk+HKaY9VxVctNy7KWnriSVeHWO1NqqJlqNpC
n1NeuPvPtdUxA1TFiytNyqdWemNk0vl3ylEq4nab9lHSnddxyY3mnrljVcT5
t8dlnO59E5V3dB19PaKHeLl5n7etNBAjJONej5jQQyx7k3Qrsug2nhF9xq2N
Vxah4Ei0++c76HGz1FFptrJYucTC9X3BXaxd/qpYMbe7GN6seWBpVQjaN22Q
mbC5uzh03tqu6i33US7Xb9fOX0riAYdnp+XkH2HHoV2PPS4riQGNv50NNMPQ
ZqprN2cDJTGq9PmHnEtP0DB46/6+b7uJ0U3Dwpb7hGOE0Rj7eVu6iWlvDf0m
XY9A33ubGn8odhP3eNxPD/V9ilr3fpnIPVYUj63cu6rgSiQmjdaoW75UUdyk
t3+t5vlnaP3cJa7wt4I4pKvaqJtHnuNAs5Szp+4piLY9mi0/2EWh7MHzYLRU
QZwYnrJXySIadVNmiJ/lFMRLr/dZiboxOKSf3he7p13FvL5OwZtaY1D2fS+T
RLuuYml08w2X17HYs0/Axor/uopnFqlIb7rGYXjgR8+YD13EmXdM1iw3fYFj
frfgmNNdRPuOk/YW9S8wYL+yHwhdxMfrzg3VuRyPn+xb9+S0y4uqW6JP+Bgk
YIDlYoPK5/Ji2G1Xs40vEjCjqGSO3T550XOg7MG50xDHfvXNmTVOXmyN2DOw
XxziD/N+Vse+dxb1A2035WqImGicUNjpWWexMj2z3/ZZIl5Lr694e6CzGDBc
94+JvYh3p2raJE/pLOYMVTlpdk3EhfofA5tkOos9FqhNdIgWMcbXZcf05E6i
U7Hgkpwp4vX8qUWPLnYShz602GdSJWLI3d97DVZ0EmveZjzMbhExWFWn+dnA
TuKc1xN0PDpEPKtrcnp6rZyYfD2p817Zl/hGlPdLfS4n7nc/4H78388XLQmq
mXVSTrx7YkjZm3//v85Le9+ThXJiNq5omvPv/bV8ZY7JDJATda9fnNc3S8TP
taYehg2y4ordvRRmxIh41Mlg8+QEWfHpEOtbWb4idtyI6NTHQ1Z8m/CsIH+f
iIdmBfu+XicrbtN5GLZ5johpU029jMfJig0jrmt7aIlY8CrWfVcXWXFQp33m
SamIQY/+W7Hxs4z456ScpXQZ4sPKn7WqYTKiiofHnVe5CfjT6ayj/SkZ0XuM
Va/tlgmo5fXI/OQqGTHtzKonGrHxuOJw3yLTMTLiT+/kwDrteHx4815RoIKM
2Hlrgtqg/S9w836TIXNe/sWFnzSVS97EoefUHakX7f+ime3YJau7x2Gi04D0
rkP+4jX1VPPXFrH4Sfb2pUd5HZjlcjxjlnMMNhl6Pzvo3oGnusyc1ud+NK7T
2tJ7g1kHvpm6ZvLWtCisKyxM39D+B3UkXfy3Vz/HO+K7Efsi/qBKuf+ORb+e
ocP4nKce2/9gnTAiaV6XZ3h83+qBYUP+4JnMtYkeipF4t8fR1e+Lf2NmQKLD
PPmnuGJi/5Ml/r/RLnHsq8i2cLR1GV5QbfUbqz/t2NNe+QQj374q+tr7Nzqv
uaV483oY9loWpB+d+wuPtQxyTrZ6hFGNLm6O3r/Qr+PDf1lKD9Bz5MUylRW/
sNVh299B4SE47OXvFSf6/ELL7t9cNebcxUsGd/qnfG5H69Qpet0+BeGQ3JCr
X2+0o/6mvnvWr7yFch+MTeLWt+PegNwyqf8NnHtmwfO1Q9sxfX3HtqUO13BS
8tWXb2rbcEfVI5t7Rl74xHCyaU14G846ppk9+fV5fJRePizpYBtCWH56Rstx
tGsPu75SaMMTJ8cfTVfcguv7j0zxV2hDm1FJD9SW28Kedw4yHhmtONw/p01c
eByO3p78cIRfK8p/arZofHQeHP3b5u22a8VW7wU2ZVe9YB9oHl1u2IoeS42z
nW19YctyNUnBr59ovn5D1vDpAeCTlLFGLuUndl4dqqfjcxtyB2c/Fa/8xJcO
5g7aV4Jh/O1TBZobfqLmtjz7SJ8QKNY5X9wx+idGjYjQDbz1ABIbdHMPdvxA
qXNk0dXwx+BfdFJyPO0HjjK7H3q37An0eDFutcaNHygbe+M17I0AWTvXI4Y7
f2B3QdjpIBsJA+/+Dc00+YHHvkx3GXDlGXhuzLFq7fEDTTfiqcHDo8BAsk45
oLgFJ09betdajIZ9w+8sT4xoQbXYvvH3rWJB41Zarp1rC2ZGupg3NsdBdvpL
E5eVLWj0vn2r8uV4SKkNsdAwaMHAeQH1ZYYIHqnHk7RlWjDWYvmAB1tEaAqN
cL+W3Ywtlw48C5r0EmQyH7q6hjZjepqSp6XSK7DKOnarxLkZz87uyL5e8Apg
+rHi+0ubMTvIrtXpyWvo+7bCski/GZ2OX4mrOZkIzruPyjjJNmOUpY5Bxoo3
cKJ5htaJvO/o3LX5tp5BEiRq66XUhX1HpVuGr4tlkqEiJ3Ba3OnvODB1xqHG
nGQ4rnYopXbtd9zzLKttzoMUmGzmGHJ04nccdfC+WH78LTgv7mm8o+d3XOQV
5hGxPBXeKU7OipY04ZsRH3eGGrwD9xTFinWJTZiwqzY4Qe49XHI8XbDhZhNm
XX3xpirvPahf3Twh/mATHv352l8rLA2O7fqwd9eSJlQ7M3qKpWs6RI7U0nIc
1YS/h71udLT+AOF1AS8/KDbhuIvFwW/6fISxXs5yThXfULq/RunVyY8QedjW
+cjLbzjK/dDjBw0f4c+b1YVvb3zDtoIRo52tMqDb6huZmw5/Q/epYfPGJ2ZA
w/7laotWfMPU1qml70dlQnbUSevTRt/QfrdqleCbCZLwBHsFtW/YfqFop3un
LHhQqKaTJW3E6VZL7zzemQX7GjJNKtMaceKt05mBn7IgY8vu68LDRjTLOLpq
3bRseOI5v1fJuUY07BkQVXM/G14cD76StLURa8PBeZJGDqg5Lu6Qzm7Eqe2a
1vOccuCwcfS01cMaUWWdqDagMgcM7lxf3E2hEdMmmrs8np8LBw63Lmn6IMUV
tYG+P5/nwgW3tvMLPKV44qGx3c/+n6D1yt4l+ouk+DBtT6cHbp/Azm1p7HE1
Kd67Mz5UpeETRH5R/7wwuwHN1ZwDBy/Lg9m2G3OueTfg1EdfzUvi8uBl0N9P
y60aMORKdzWLwfnQWOTY66x2A7o3HHddcSYfBrytTxtZXI9/1H9M6daQD/GP
m83M7tQj7uxcarPkMxwdNycpeUs96so9m7Ak+jN03/f4fszIehSe9Vaq0P4C
c66Ez+/9vQ59pnyZpubyBebdO9W7KLoO0xMq0/PKv8CDynd7VY7Voa5Ry/MJ
s7+C9yj7jLsz6zBxw1gV/QdfIeWpU3hQ938/983//US5AHxqKrw6Z9dicY/c
yLe7C2D8xW2yKX61aPjN9oh9RgEUZm0/W7exFpV7xwSFji2Etzdev9xjUIvH
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
fR3/k80veNguhUdWNvbPe3vjhoXdVAx/S6HM1KR9uPplbFFe/9T+jxTMls2q
P9nvAo7quTltX4cU/EY2X6vTOIV3bHXXTvgrhTPvp7v96nMQtw8fsC3q3+tN
yiml/qrr8ISLtfTn/38N/Jp+H/j36f2A34/+HvDfo88D/Hno8wJ/Xvo+wN+H
vi/w96XrAXw96HoBXy+6nsDXk6438PWm+wF8P+h+Ad8vup/A95PuN/D9pvMA
fB7ovACfFzpP8H/n6X/PG/B5o/MIfB7pvAKfVzrPwOeZzjvweafnAfh5oOcF
+Hmh5wn4eaLnDfh5o+cR+Hmk5xX4eaXnGfh5pucd+HmnegBcD6heANcLqifA
9YTqDXC9oXoEXI+oXgHXK6pnwPWM6h1wvaN6CFwPqV4C10uqp8D1lOotcL2l
egxcj6leA9drqufA9ZzqPXC9p34A3A+oXwD3C+onwP2E+g1wv6F+BNyPqF8B
9yvqZ8D9jPodcL+jfgjcD6lfAvdL6qfA/ZT6LXC/pX4M3I+pXwP3a+rnwP2c
+j1wv6d5AHgeoHkBeF6geQJ4nqB5A3jeoHkEeB6heQV4XqF5BnieoXkHeN6h
eQh4HqJ5CXheonkKeJ6ieQt43qJ5DHgeo3kNeF6jeQ54nqN5D3jeo3kQeB6k
eRF4XqR5EniepHkTeN6keRR4HqV5FXhepXkWeJ6leRd43qV5GHgepnkZeF6m
eRp4nqZ5G3jepnkceB6neR14Xqd5Hniep3kfeN4nPQCsB0gvAOsF0hPAeoL0
BrDeID0CrEdIrwDrFdIzwHqG9A6w3iE9BKyHSC8B6yXSU8B6ivQWsN4iPQas
x0ivAes10nPAeo70HrDeIz0IrAdJLwLrRdKTwHqS9Caw3iQ9CqxHSa8C61XS
s8B6lvQusN4lPQysh0kvA+tl0tPAepr0NrDeJj0OrMdJrwPrddLzwHqe9D6w
3ic/ANgPIL8A2C8gPwHYTyC/AdhvID8C2I8gvwLYryA/A9jPIL8D2O8gPwTY
DyG/BNgvIT8F2E8hvwXYbyE/BtiPIb8G2K8hPwfYzyG/B9jvIT8I2A8ivwjY
LyI/CdhPIr8J2G8iPwrYjyK/CtivIj8L2M8ivwvY7yI/DNgPI78M2C8jPw3Y
TyO/DdhvIz8O2I8jvw7YryM/D9jPI78P2O8jPxDYDyS/ENgvJD8R2E8kvxHY
byQ/EtiPJL8S2K8kPxPYzyS/E9jvJD8U2A8lvxTYLyU/FdhPJb8V2G8lPxbY
jyW/FtivJT8X2M8lvxfY7yU/GNgPJr8Y2C8mPxnYTya/GdhvJj8a2I8mvxrY
ryY/G9jPJr8b2O8mPxzYDye/HNgvJz8d2E8nvx3Ybyc/HtiPJ78e2K8nPx/Y
zye/H9jvpzwAOA+gvAA4L6A8AThPoLwBOG+gPAI4j6C8AjivoDwDOM+gvAM4
76A8BDgPobwEOC+hPAU4T6G8BThvoTwGOI+hvAY4r6E8BzjPobwHOO+hPAg4
D6K8CDgvojwJOE+ivAk4b6I8CjiPorwKOK+iPAs4z6K8CzjvojwMOA+jvAw4
L6M8DThPo7wNOG+jPA44j6O8DjivozwPOM+jvA8476M8EDgPpLwQOC+kPBE4
T6S8EThvpDwSOI+kvBI4r6Q8EzjPpLwTOO+kPBQ4D6W8FDgvpTwVOE+lvBU4
b6U8FjiPpbwWOK+lPBc4z6W8FzjvpTwYOA+mvBg4L6Y8GThPprwZOG+mPBo4
j6a8GjivpjwbOM+mvBs476Y8HDgPp7wcOC+nPB04T6e8HThvpzweOI+nvB44
r6c8HzjPp7wfOO8nHgCYByBeAJgXIJ4AmCcg3gCYNyAeAZhHIF4BmFcgngGY
ZyDeAZh3IB4CmIcgXgKYlyCeApinIN4CmLcgHgOYxyBeA5jXIJ4DmOcg3gOY
9yAeBJgHIV4EmBchngSYJyHeBJg3IR4FmEchXgWYVyGeBZhnId4FmHchHgaY
hyFeBpiXIZ5GYJ6GeBuBeRvicQTmcYjXEZjXIZ5HYJ6HeB+BeR/igQTmgYgX
EpgXIp5IYJ6IeCOBeSPikQTmkYhXEphXIp5JYJ6JeCeBeSfioQTmoYiXEpiX
Ip5KYJ6KeCuBeSvisQTmsYjXEpjXIp5LYJ6LeC+BeS/iwQTmwYgXE5gXI55M
YJ6MeDOBeTPi0QTm0YhXE5hXI55NYJ6NeDfh/3i3/+XhBObhiJcTmJcjnk5g
no54O4F5O+LxBObxiNcTmNcjnk9gno94P4F5P+IBBeYBiRcUmBcknlBgnpB4
Q4F5Q+IRBeYRiVcUmFcknlFgnpF4R4F5R+IhBeYhiZcUmJcknlJgnpJ4S4F5
S+IxBeYxidcUmNcknlNgnpN4T4F5T+JBBeZBiRcVmBclnlRgnpR4U4F5U+JR
BeZRiVcVmFclnlVgnpV4V4F5V+JhBeZhiZcVmJclnlZgnpZ4W4F5W+JxBeZx
idcVmNclnldgnpd4X4F5X+KBBeaBiRcWmBcmnlhgnph4Y4F5Y+KRBeaRiVcW
mFcmnllgnpl4Z4F5Z+KhBeahiZcWmJcmnlpgnpp4a4F5a+KxBeaxidcWmNcm
nltgnpt4b4F5b+LBBebBiRcXmBcnnlxgnpx4c4F5c+LRBebRiVcXmFcnnl1g
np14d4F5d+LhBebhiZcXmJcnnl5gnp54e4F5e+LxBebxidcXmNcnnl9gnp94
f4F5f9oHEHgfgPYFBN4XoH0CgfcJaN9A4H0D2kcQeB+B9hUE3legfQaB9xlo
30HgfQfahxB4H4L2JQTel6B9CoH3KWjfQuB9C9rHEHgfg/Y1BN7XoH0Ogfc5
aN9D4H2P/wHXrALV
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3dYzu37x1tEGWmIpIyISCgjqvNjhezo8UWerGxCZSZCy8iIkhmJerJK
k+r8lKShvbTvu5QkJIWyfv2O4+2vjvs4Ouq+P/d1ndd7vK7B6xys7eVkZGQG
ycvI/P9PbwcFH0mVg/hy/Ey/LT0/j5h8Pnm7WGUn7h8xr2mD09FIzV1NpEg2
ot7990WH1EZNnuVu+paqFok6X8Z5TpSd8lT5y87N813nijozTS+3R9g+q/i0
cq+lxSzx/MthiYWyBmaB6skb+0yYLl71MJ+pZRRl5qr6M828gsS0msX328f1
SOh/QnuU7RIzURLlfPzdzRHm+sZKz9IPmYqaydY9ztYEJCQZvE1TM5gkzrt2
RpKuUm8u75toMmPqBNFrzxF9pf09EnVaPrm7XzYWC7dOckmWHZ8YNKbs5Jlx
48V11aucxuxabGH6vPz9xo6x4oFzEcplEc4WtxLts00KjcSUcnOV+p9bLRpf
a18K+GIoluvH11zRuZaYq+dVuWTOaHFjcIJjgWlsou/V9cNb0g1Ej/CGscsK
kxNrIyZ1S9w9Uhx0Zvur66qPEkO/PD03bcoI8dt4/Xv2Awstzi06c62rrr5Y
XGj3eHxts0Wkovl/q7WHiwdHurwdcFKGJq04ud/EaJj4fMq0+LhJ3chwjoHv
12V64oKpJetrTZUp9vXxwc6nhoo/tbdqedkqUKVclEZh7hBxzO3Y0NA5LxMz
dmetPzR0iLj5pJ3eazkNVvTXnKN8bLDo9me3c3XMSPb2iKuzfj9IDPt55uPs
woms3Tgwes6/g8QZz05pP54/jUf6tKR2i9QVez08lF13fTafHpF5zPGZjvjt
ltWr9YkLWGXBqiVb8gaK98OmJUw/sITHf3vcJ6xVWwxudBayJi1lrWtT+g3U
0xYNtHZohUcu5cPftTYk/ztAjN82r23OWWuunDnaLzZIS/Tu/cPhTO1Cvm/6
ycOkpb+45/7n6kKDmXzG1M/uyNz+osPoLUpvRg3hvgYZuq0h/cRed9XOVZgL
VNZNyfVX737iz985i+bp2VDZijo1dVdN8Z/kl7d3r11HXVRlMuJb+opa505k
fXLYRv3Kvhzw3NFXnB+VY/WsYA+5zalI6PlRQyxqWVvax3k/TakU6z87aoiG
OrP+iN6u1DdxnHrVb3VxwRKrGw6ux6hSc8Xm4z7qomzGncCYcneKtXJfFjBE
XdxqHNr30GJvMpfL7ah4qiaKbTZ7FHJPk0yQ0m2V5Wqigt/ALU+GnyOTeR6m
P76qionzQhUqKs/TkhGhjZuuqIr3bp6NGezpS1cdzkYPm6Yqvphm8mCl9iUq
PTFRR/F9H3H146Kom/5+dKG1vkDq30eMXx34e+UXf2q8wk4+s/uI8w4cv7zU
IIBilLfNbWhXEacrblKPnnSF1M1H9sx6qCJGuY1y09K8SsfdHZ9qb1QRtbZm
9/dKuUoOvy7bxumqiFaFup/3ml2jyNRTmT1jeouSKzvrcg5do6XXW/sUj+8t
Vk7TGvL+yDXquV3R6EpEL7FR/7LDGctrFNFo/HzUxF6imbHf6TdZV8lL9De2
S+gpZsflpBxTv0pnb9Q4K8/pKS64PrB1Rf8r9P6fZEn34h5inbGjTnT5ZdrT
sk5m4qYe4m3tVp60yp/kiq/u3PFDWZwxYcyXLP9L9PvAzodnLyiLzhPzPB6f
96V/zdyVXEcri5v++aO5cu55Ghu8Ze+AdCXxgmZvd4UjZyjCZNye+ZuVxMlT
f78zavSkgHsbm792VxL/5Lq+3VfsRlr3fpjLPewuKrb9mP/x9F5KNVJv+mdZ
d3FEzNKjq1vX0Kpot2dVP7uJyl0bHZPUVvKgGWneJ+51Ew+82Xzaf8telt1/
ikyWdRO3ufW4NsPvOOulzRTL5LqJrqn2SWrrT/Owgfrl9k8UxSMpimJw5gWW
fdXXPMVeUWyaPLnvTn9/7tPv5vq6/orijszI2JwL1zg8MPdcXE5XUTH2mmVJ
ZSCP+9nG4zy7itetLPu1egbxzb09r5LQVVTVkYwNs7zLJXu+7yrq6CJqX9h3
paFfKN9cYD26PrqLWDN4ptflX2GcVy21snfqIv64NcQs5MtDHl8RUGRp3EUM
+m66Vf7XY/46e+CKI18UREvNVtkCzwhOmZRYJR+lIE47tmplQv9Ivpz9oS59
n4LYa9zqVxYRUXzXTOPfl1MVxHdp7wqKFsfwYoPcwBYZBbFG0m4p3xbLcQFu
26e/lBdrTnVzt7rxlK+UmlU/8JEXP2wIvDlufjyH3P25e/RyebGy2sdl2u8E
DlYZ2ho1SF6s6zu3pUsks7eeuef093Liwh3HPnlEi/xC7HI1I1pOPGd29Lrz
xSResjToneVxObEuc4JvgGMyN/lqOz1eLCfWFj5oT1z6nLUCZI7I6MqJW900
/Z6YpHDZe4uzYz/Kis8NVmda9n3BLodHb5qSKCvqpVtdmfv9Bf++HiHf76ys
+HH+tkCfslQ+YBkc8HyNrCijnKTRGP+Ss8wsfCcZy4ozjh5MH3czjSuTn57Z
2VVWnN6RNNDcLZ2DHvRfvr5MRtTRT5GrW5fB9+u/vVd5JCPONFL8LD8zk78d
9nbec0JGjEoZWeus94q1fB/MPr5SRvQ/pruon0IWLz84oNpinIy4VeW3TkZN
Ft+/ca86sFvn64jtodvEbN6013yYVdIfjlyUGlp1LYfPmW3P8Nnzh9sn/R4g
b5bLKYd1sxWH/eHJw/XW1Ibkcons7fMPXv/mw7Urf8lp5HHLWL+o/Wd+c6Dj
3N02R/N4jdZmzXUzfnNFZH1xdmMeN1VVZa/r+MU9nIfWrF+Wz3fEzFFOEb84
I8i3vHtCPjtOKHpydtsvLu+idS1ar4CPOtkOejTsFw/ZFuC15lQB3+3lYvtK
8pM7D4Qzv5sLePlknePSaz85dd/uAV42hbzBbWRlw4rO12+sBrfFFnJkenJ1
heZPtlDK7m4xoIj72gQZxBb/4JL7odGrXIo4ptnNw9nvB8dtuecyu6KIzxn6
1PZe/oNrMhJ0f0wp5hFJP5cf6/eD5wRMyNl1uZjPj76jk1bWwVeNawcHtRbz
sOKQSxXXO3jIaSfVM4tKWC5nkvmztR0cu6Dwx8jQEp7ntSjabngHO528fclZ
9jWbvryU9OJ9O7tNed687X+v+fHYKRbvwtvZ7qmcU/eHr/lB9psRqfvbud/a
3NdWcqVs3/Hoyv+Edj5s0nuEoU0pr9UxTLvWrZ3bHv2MfnC3lHdlOsqczfvO
KscN9TK+lrLL7Sn3R139zm6DApcdnVXGztfa5zvYf2f9d292ZV8oYyfScPln
7HdOj1pVE1FVxpv/UW2s/PGNr+/3WDx6ZDn7p+atlkv7xqn3dt0w3VPOxUMK
n4gXv/Ei7VENpXHlPOH2iUqNdd94mZLt0R4yFSwZekry2+gbez+p+ZA7s4JT
PuoV7//9ld13+bwb7lXB16qPNx7N+sph/zWs6pVRwb3ijW3Vr3/lk6v7rPJU
qmRZe/dDY3d8ZdOoByMuzK3kQXf/hOabf2Xr1Q1GRp6VfG590Yrvvb7yPrXj
8nbPK3l045qeNyVtXNK7fdWQ35XsNPLOPykRbdxaFK5xcFIVq9/KKrZ3b+Ml
MjONNjlUcWF2krnb/9o4OeDly8bgKk57HzJXfXQbH7k8aWDX8io+m3E0VVum
jW1615x82quaW0IjzlwubOUFYfWe3adVs0z+fXf30FZOUH8e3Lq7mlcUHLkl
dW3l+6+afA7fqmaafkTy37JWlh+8v8vdnGoekF63oNqglU8XZEodflazq4OL
zGHZVn7n9djro5qEj7XO1Dr2+gvnPXyZ8W2EhFO09dOaHn1hdYXxScvMJVxX
FDjtmecX9t2d7Np1iYSPqh5Ie2/3hRe/9dHptUHCU2Y4h7hM/sKG9tufb98r
YVfrPpO29/nC6Vq7/Id6STiz+5SC2MYW3u3knGkcIOEzad3r1qS08MymEL8b
oRI+7+xZue5GC9/cpznRPk7Capc2TUzY38K6W6c3eaVJ+MjOnN07l7bwnJAY
GeUSCUcaamk5j2nhKV0ectMbCYc33UzK6d7C7veCDxi1SHi8r6vc4brP7GXd
43jh787fP7jB9VDSZ3bdU2dcqSTlXy9sq9Kvf+ZdGc5vrfpKWcn2ev7Gg5/Z
6k7LD53BUv649x/VJcs/s+IGk/yVo6RcGHN8lafJZzZYsz3rj4mUG8MT93RT
/cxTayqte1tIOaxKdWjBp2a2ML6SftJSyk4f883rs5o5+jJdcVwo5bzNDleE
+82cqP9sTKaNlB+fW9hXerKZTy3r2XLBVsrxR4Mvpm5p5j3D+ix+tU7Kqs7W
vz/NaeYtn2dF7d8s5YOTYqfZjmjmKxeu+gTskPLoO1eslbo186Wvwtyxe6S8
7+D3pS05n1jzq5O1xV4pn/ZoP7Xo3CfeabdC88UBKX+/uHupwZJPXK+TppDq
ImV7j2VPj6p+4oO7DTynH5FyZLla2eLCj3yjl7WSmZuU52xYX3TZ7yMHT1zW
/uSYlJOC/pT8s+IjZ/tuTAw7LuXmaue+3tofObwiIVnvhJR10z9kGUo+8Cz9
nTsHdb5OeNg6Y8adD2xTMX9EYOfvuxhbpb7c/IF5aqFNcOff6+H08L84ww9s
t67bqnGd/8/qYvhCzS9NrPR89ZVZne9n/r0TmtWxTeyucMuptvP9htVn7u59
pInFiZI5PQ5K2W/Mnry7s5rYytrGKanz86Y9ORwe1KOJjduWWCs4Stn/XZ2v
QuF7Vlky2qx4p5Qn+GyVTbv6nm0sDL0nb5VyVcE276b179ljyxGf0fZSTr/+
PGnX6Pdselb35hM7Ka9Mu2m5tK2RJ8RnKeeskPInx9VPLyQ2spPnnyFHl3Y+
Pyv7F4ZejfxhasHYtPlS3hXTre9Q60YuaJA/EjJLyuN6rFmzW7uR4xZWLRvS
uT7qPUb+q/n2HX8NnPht4kQpu00KzVaLeMebVe1C3hpKOfCp9177w+/YY5hu
yIRhUu6XkqCrPLfzdUyY8RBtKSs4rguQ13jHfxJvuj9UlXL3LbdjFkgb+Hh0
W1F5Nynr3QxY2vCggRXuy64M61zv6i2m8/IPNnCfj9tm6rRKeNLasW5Kcxp4
zuLRLya8k/DIjoyKsxoNvEvGo/uXSgmv3149d23tWzaqlzdbni/hOxQRezj8
LRt7Op9Yn9o5H0KqBr458pb1tzYp9n8q4c1fLfb4LnzLJS1xDfsfSDjYryji
5MC3bBixw/JEoIQHhURL0prqWaJXaG7m27l/B7TILIiv58zytoZb7hKuXeWq
3fd0Pc/ormkXvU/Csi5DhaG29RyyMyby4BYJ67/Z6OI4up7fBF/48WmlhMcd
3lfX5VcdOyYHTtecL+GhNlq+pVl1/HGWpt9nMwnnxvkHfrhRx302bP1zxFDC
i1JDRk/bVcf7Lyx0fz5Qwr/s7FcUTKvjdWuejkroKeHWm+PnB6nVccawvLfl
HdX8NTjc8HHdG76qEBX7oLSa8/MejmyPecOuW6OSPsdU86E1fRwOn3zD/Xf8
aQ29VM3KWzONzFa/4f/N+pde7+mcrxYZgSZj3/Cngmlerouq+dmAt+328m/4
ofeL8BujqvnB9NfOOcW1PPdhzOUpitVsv2qI9a7/avm+zC31ZTVVfMBYKWe2
ay0fDnv1rSm+iqe/8jCysa5lO+/FvRX9q3hTnHGc//BaHh+pMfTOriq2ypoR
2etHDbetlLa9mFvFI/o4bYvLqeG+Zatn7RxSxe1d/4zyv1PDeqp6GTc6Klnb
+NysewdquPJ7yqQV+ZVc836S0ruFNTxsbYHZzdBKNthhl71Kr4Y/t304tudo
JU8ek9Dwu13K6vbpDwv/qeQh++dG5OVImaKnrHk5upJ7TzX2KAiW8oXMaePn
y1VyyKCiJPnOfdq7m/qzDSUVTGX/pay1lvKt/vqnVe9XcFuIZXPTCCmfqp06
fvnRCj6nMzvkzh8Jp3psmWCyrIIdNBZYexVLONt9RP8w/QoeX/XZxr9zXf2W
+dc2oaOcs24laOedkHBH900HtmeV842vA1Un2Eq4q7JefdzNcp55zzYo2VjC
rwQF9Xu7y7kp1I8OKHeuo5l9dk2YUc7ZZzY+epxazbNvd6zbqF7OV8ui4xP3
VnNft8FLptaVscGWmrMD9Kt52sI7V6KiyjhDrbdGakkV6+7berXYvYyXqURO
TfCq4mr9sWE3bcr44hfvr39Mq/iEyoWBqsPKOnXhoaln3ley3Jj+041aS7m4
3ld+w/VK3upnueF7cimfcW21Or6oko9Z3szceb6Uc02TVBplKzniU8wzX7tS
Vjmnvtw/soI1XghOmw1L+V1u85CTmyp4p2WfcR87XvPtSeNdkrQqWL6bicHw
tNdcOt1th1l2OdvsbfHtc+k1Jy+cpdDhVs4xFyU3wte+5n93+S9un1DOlVEN
+xTHvGa5cxPsTRvL+Izh8jnqHSUcl+S8PO5GGR/pqJtQ+qKEG0tNaf/SMi7Y
lLZu+fkS/mlWO9G5WxnbBEd/OGtbwnMbLFc9SijlaJv2z8f1S1h4citzmGMp
r1d19jRpKWaDl6dDS0aUcs83Ucm344t5w/yWfilVr/nco47IHI9iDp8nJzRe
fM3n/YTt8YuLeV+y/uy5817zmnkLv2zRKubTDb/+J+nUoReX85LS2iK+c3fW
7YexJaxv0/u08oMibpxavuSJQwmv6x8cJLu3iMv63L/8YXgJH82r9Iu3KGKj
hPuhtlXFfESl31pzxSKuMsiJ+3OpmOWzEztO5BTyx2/f/xQtKGbRZtmKi/6F
bPelPbKqSzFv1z/ssN2ukD+kHVPrn1jEualKhr30C7mwYMD/TnT+n+JDXY8c
/FjA1/ppJ+kaFfFmufhFEVEF3Loh0KfxbSFLR6Z4RLsU8KuLx+TeBBayyobe
3b1mFPDNH4vXKK8s5N0zmmP1lQrY+vOsD3ZqhVzcMGyvX24+n3ajZsmrAtZY
Uz+wyC+fa81iws94FPC79w0n39jm83eDp4fshc6/K+y69GJIPidWSAI2deTz
+4fL1A405LHpjdkrfCPzWXlqr9d/HuTxy1SPbg0783n33cTIlY557KAf9m3D
yHzOsp+6/+TkPF7oN2Z/9zd5nR5a89PZX7kc4NdcUXgjjzU8H9RuS87ludpG
B1NX5PFO9ZE6up653H/bkeBK9Tzun3Juw3/zcjm/98uo/rm5/O+TnIO9VHLZ
7YuJ/MFTuZxh7DrrckgOSz2nvP1lmcsD/ewmp43N4YU93OPvyHX6sgVv5z6M
zebDRR8Syl1yeGZb1ud5QjYb/m/68vDWbLa8/SXo9sss9ul6UDZ9ezZrb9yT
+2RhFh+utDo0uC6L/R8+rj1a9IoLqm65x63OYjlPR0tl21dcGupXe7b4Ffd4
2rx6WU0mF5vZrQxa9IrDCiWnVm/O5MKqGeEtaZl8VOn8mBEfM/jUWN9wl+mZ
LP+zNTDKMYMXrvcbLsRncOy/sVMU29N57CX3yqkTM1jea/FiHdd0XrDEJXjn
43RuKetp/FMuna2Ndy4qMUjnRf0Nx932TGOTBwMeOgWn8b7LDZf69Ehjm49d
/WYNSuPVK71D5517yf3eb66cc/UlGyvvD1+i/pJ7nBhue7jvS9Z9s6BZ73Iq
P8t88V56PpUdHeuCUwek8s6t6zc590zlD1bbek+++YLzdULCJnq/4BUXd246
OOQF169M9NPr8oLHnflc5xOcwpN+zu5m4ZbCQe8OiHtHpHCCzjKp26/nfFJ3
sIFx2HN26G6j8OnAc04MuLP0heFzfmvc1+bE12S2LXTeNuZxMs/aEBErOCbz
4XUZ1x3GJ/PZN94aQ5uTuLYyTP1kZBJnZ09earAjiRWTFL+7Tkxicjiz0qZR
ZMvRvGNRrMgZz1w1gjaJvN8vOuCnqcgTxFlVehnMSwsypvbex2z2bN69mS8S
uahfpkntgUTed/jomiAxgV0ed1m1zyWBh8etqreIj2fPHxffZrnGM+2Yq6kR
+4yNHpqovDv6jNVj/AuGRj7lXtZrFDOPPeWeLzb82vw4jsfe2/3T+UQcz3t3
en/N/VhWr0sc0OQeyxEZlw18QmPYpyLWx8gzhmc+CevYcjeak350c5nuFc3H
OnbnOQZFsf2ER4r63lHse7J3QGhgJG99pbu02juSG1x7mXe/8YT7dVl7eMfJ
JzynfMF/565G8If4EUEFJyO4YUVztnlAOJs2tlepnQrno4vmXenl/5hfKUyf
O/bUY54+J6xd1uARXwpvarbp+4jV2DB32PAHfMh7nVyPvg+4+ezo6yeGhLFD
2o0mD40w3qJ3cbaWbigPXtw/P0M9lLfO6BlbM+Aeyz+bnl+udo93PCp/Xdov
mLdYJXZPVA3mFZL4Sz80glgl5uoF5z5BnFCcWj5D7RZvrT93oqvKLd7Xw2f8
6sE3OL3npsZ32jf4duj0Qw7aV3jlKPtm7/5X+MGKf/dEa/qxR6AutWn4ca2F
ecdItQu8b0TEN2PVCzzDxvLD8YGneWyix+5r2qf5qmHr5Sb1E9zh89H8cudP
r1fTPX70289dWz00Sjp/buyZVnNNZQ2XXEs1utL5E68Jrwm/T/h9wt8j/D3C
/yP8P8L7IbwfwvslvF/C5yF8HsLnJXxewvMgPA/C8yI8L8LzJDxPwvMmPG/C
90H4PgjfF+H7InyfhO+T8H0Tvm/CeiCsB8J6IawXwnoirCfCeiOsN8J6JKxH
wnolrFfCeiasZ8J6J6x3wn4g7AfCfiHsF8J+Iuwnwn4j7DfCfiTsR8J+JexX
wn4m7GfCfifsd8I8IMwDwrwgzAvCPCHME8K8IcwbwjwizCPCvCLMK8I8I8wz
wrwjzDvCPCTMQ8K8JMxLwjwlzFPCvCXMW8I8JsxjwrwmzGvCPCfMc8K8J8x7
wnlAOA8I5wXhvCCcJ4TzhHDeEM4bwnlEOI8I5xXhvCKcZ4TzjHDeEc47wnlI
OA8J5yXhvCScp4TzlHDeEs5bwnlMOI8J5zXhvCac54TznHDeE857gh4g6AGC
XiDoBYKeIOgJgt4g6A2CHiHoEYJeIegVgp4h6BmC3iHoHYIeIughgl4i6CWC
niLoKYLeIugtgh4j6DGCXiPoNYKeI+g5gt4j6D2CHiToQYJeJOhFgp4k6EmC
3iToTYIeJehRgl4l6FWCniXoWYLeJehdgh4m6GGCXiboZYKeJuhpgt4m6G2C
HifocYJeJ+h1gp4n6HmC3ifofYIfIPgBgl8g+AWCnyD4CYLfIPgNgh8h+BGC
XyH4FYKfIfgZgt8h+B2CHyL4IYJfIvglgp8i+CmC3yL4LYIfI/gxgl8j+DWC
nyP4OYLfI/g9gh8k+EGCXyT4RYKfJPhJgt8k+E2CHyX4UYJfJfhVgp8l+FmC
3yX4XYIfJvhhgl8m+GWCnyb4aYLfJvhtgh8n+HGCXyf4dYKfJ/h5gt8n+H1C
HkDIAwh5ASEvIOQJhDyBkDcQ8gZCHkHIIwh5BSGvIOQZhDyDkHcQ8g5CHkLI
Qwh5CSEvIeQphDyFkLcQ8hZCHkPIYwh5DSGvIeQ5hDyHkPcQ8h5CHkTIgwh5
ESEvIuRJhDyJkDcR8iZCHkXIowh5FSGvIuRZhDyLkHcR8i5CHkbIwwh5GSEv
I+RphDyNkLcR8jZCHkfI4wh5HSGvI+R5hDyPkPcR8j5CHkjIAwl5ISEvJOSJ
hDyRkDcS8kZCHknIIwl5JSGvJOSZhDyTkHcS8k5CHkrIQwl5KSEvJeSphDyV
kLcS8lZCHkvIYwl5LSGvJeS5hDyXkPcS8l5CHkzIgwl5MSEvJuTJhDyZkDcT
8mZCHk3Iowl5NSGvJuTZhDybkHcT8m5CHk7Iwwl5OSEvJ+TphDydkLcT8nZC
Hk/I4wl5PSGvJ+T5hDyfkPcT8n5CH0DoAwh9AaEvIPQJhD6B0DcQ+gZCH0Ho
Iwh9BaGvIPQZhD6D0HcQ+g5CH0LoQwh9CaEvIfQphD6F0LcQ+hZCH0PoYwh9
DaGvIfQ5hD6H0PcQ+h5CH0Togwh9EaEvIvRJhD6J0DcR+iZCH0Xoowh9FaGv
IvRZhD6L0HcR+i5CH0bowwh9GaEvI/RphD6N0LcR+jZCH0fo4wh9HaGvI/R5
hD6P0PcR+j5CH0joAwl9IaEvJPSJhD6R0DcS+kZCH0noIwl9JaGvJPSZhD6T
0HcS+k5CH0roQwl9KaEvJfSphD6V0LcS+lZCH0voYwl9LaGvJfS5hD6X0PcS
+l5CH0zogwl9MaEvJvTJhD6Z0DcT+mZCH03oowl9NaGvJvTZhD6b0HcT+m5C
H07owwl9OaEvJ/TphD6d0LcT+nZCH0/o4wl9PaGvJ/T5hD6f0PcT+n4CD0Dg
AQi8AIEXIPAEBJ6AwBsQeAMCj0DgEQi8AoFXIPAMBJ6BwDsQeAcCD0HgIQi8
BIGXIPAUBJ6CwFsQeAsCj0HgMQi8BoHXIPAcBJ6DwHsQeA8CD0LgQQi8CIEX
IfAkBJ6EwJsQeBMCj0LgUQi8CoFXIfAsBJ6FwLsQeBcCD0PgYQi8DIGXIfA0
AngaAm8jgLch8DgCeBwCryOA1yHwPAJ4HgLvI4D3IfBAAnggAi8kgBci8EQC
eCICbySANyLwSAJ4JAKvJIBXIvBMAngmAu8kgHci8FACeCgCLyWAlyLwVAJ4
KgJvJYC3IvBYAngsAq8lgNci8FwCeC4C7yWA9yLwYAJ4MAIvJoAXI/BkAngy
Am8mgDcj8GgCeDQCryaAVyPwbAJ4NgLvJoB3I/BwAng4Ai8ngJcj8HQCeDoC
byeAtyPweAJ4PAKvJ4DXI/B8Ang+Au8ngPcj8IACeMC/vKAAXvAvTyiAJ2Tw
hgJ4QwaPKIBHZPCKAnhFBs8ogGdk8I4CeEcGDymAh2TwkgJ4SQZPKYCnZPCW
AnhLBo8pgMdk8JoCeE0GzymA52TwngJ4TwYPKoAHZfCiAnhRBk8qgCdl8KYC
eFMGjyqAR2XwqgJ4VQbPKoBnZfCuAnhXBg8rgIdl8LICeFkGTyuAp2XwtgJ4
WwaPK4DHZfC6AnhdBs8rgOdl8L4CeF8GDyyAB2bwwgJ4YQZPLIAnZvDGAnhj
Bo8sgEdm8MoCeGUGzyyAZ/7LOwvgnf/y0AJ4aAIvLYCXJvDUAnhqAm8tgLcm
8NgCeGwCry2A1ybw3AJ4bgLvLYD3JvDgAnhwAi8ugBcn8OQCeHICby6ANyfw
6AJ49L+8ugBe3QI8uwCencG7C+DdGTy8AB6ewcsL4OUZPL0Anv4vby+At//L
4wvg8S3A6wvg9S3A8wvg+f/y/gJ4/7/3AQTcB0jEfQEB9wX+3icQcJ/g730D
AfcNLHAfQcB9BAvcVxBwXyEB9xkE3Gcwx30HAfcdEnAfQsB9CHPclxBwXyIe
9ykE3KeIx30LAfctpuI+hoD7GFNwX0PAfY1Y3OcQcJ/DBPc9BNz3CPk/oFgG
vw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.5473808101222827, 
   0.9999961543035598}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483943284903302*^9, {3.484215535890292*^9, 3.4842155695421457`*^9}, 
   3.4842156344392567`*^9, 3.484309292550302*^9, 3.484309626113652*^9, 
   3.484309678640545*^9, 3.484313091646225*^9, 3.4843143589752274`*^9, {
   3.4874852696384363`*^9, 3.4874853227917833`*^9}, {3.4874854258096657`*^9, 
   3.4874854283962927`*^9}, 3.4875028939875526`*^9, {3.4875029635430117`*^9, 
   3.487502985058034*^9}, 3.487503170305254*^9, 3.487504424789427*^9, 
   3.494224248721817*^9, {3.494224318207287*^9, 3.494224335911517*^9}, 
   3.494224369717019*^9, 3.494226849805245*^9, 3.494847173718584*^9, 
   3.494847267477282*^9, 3.494847352966016*^9, 3.494850550712755*^9, 
   3.494850592581167*^9, {3.49485097709093*^9, 3.494850987547051*^9}, 
   3.4948512410503263`*^9}]
}, Open  ]],

Cell["\<\
Like an interval, we can evaluate the Cauchy transform in the complex plane \
(note that NIntegrate needs high precision arithmetic to compute the same \
value)\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943867662326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"f", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "t"}], "]"}], " ", 
       RowBox[{"Sech", "[", "t", "]"}]}], 
      RowBox[{"t", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.48394329305892*^9, 3.4839433207561693`*^9}, {
  3.483943369247134*^9, 3.483943369334272*^9}, {3.483943752798101*^9, 
  3.48394385506581*^9}, {3.484215556470985*^9, 3.4842155580223017`*^9}, {
  3.487502965463476*^9, 3.487502972915853*^9}}],

Cell[BoxData[
 RowBox[{"7.99638133486269`*^-14", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4839432977574778`*^9, 3.4839433210960817`*^9}, 
   3.4839433695202513`*^9, {3.483943750665978*^9, 3.483943753659663*^9}, {
   3.483943802607685*^9, 3.4839438554225607`*^9}, {3.484215536979582*^9, 
   3.484215572402323*^9}, 3.484215635743203*^9, 3.484313093355335*^9, 
   3.4843143592042513`*^9, 3.487485433096916*^9, 3.487502894233472*^9, {
   3.487502970856703*^9, 3.487502987654356*^9}, 3.487503170461014*^9, 
   3.487504425069079*^9, 3.4942242489254913`*^9, 3.494224369986208*^9, 
   3.494226850040409*^9, 3.4948471746503067`*^9, 3.494850550960579*^9, 
   3.494850592756364*^9, {3.4948509772661057`*^9, 3.494850987832984*^9}, 
   3.494851241225669*^9}]
}, Open  ]],

Cell["\<\
We can also do the \[PlusMinus]1 values, and in fact we can compute it \
globally\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.4839439215530243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"+", "1"}], ",", "f"}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "f"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483943899242447*^9, 3.483943911546715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw9m3lYTf/39k8l0kASkRAylKKRjGsrQySSMaKoiE+JBkqDZkUlU5kikgrR
pMHQ2o0qNGmgeR7OCalECT/P96yev1z70nU67f3ea93rvl9r1iFbI0tBDocj
L8Th/L9/A2xHBTfW27Ic5qlBhm9ZhvalLGu23pTlnDg+rs63N0PmRDeMgZ3/
rg+UllaOwnW+yzqgfivLsZCfv8tPCsX6jlttdt/IcrpPPDvZK4e1X/eeWr96
HctZqz75d5UCRkhnHZ6gpcNygrkTbpsqo7vUcP6qWmA5Kbt+zPBXx6k+cgtN
tq1kOetEgkc7LsX5GqIvC1yWsZwpokdvDqzETKWO/IlKS1mPeXFSTn5rUOhK
hqbuCi2WEzF24vjatTij96uv73UNllO1u0bMVQ8jF1WfD1JTZz3Ou8+2ObwZ
l2XX8A4PqbLs7w3CHQaGeC/DskizfDHLGi9/EBRshNyPctdu9KmwHkJ7a937
d2CJgn/dNj1lluO7a3Kh6268cst8Xm+BEssZUrkfNGcvtiQuFck4qcgyC3Ur
pTpNMLbvRcia5QtYdkafj3KpKYZsDbo9euZ81iw1Ulb39EFMHrPq0X65eWxE
ZJRbuJI5LjU+76S5eC4rv2l3/gZxS1TRU7oysEOBZbhxFQnyRzDto/csxwtz
WMY+YPZt86NYJ/h8UnnJbFZeVWicVd5/WHjyvbnLnNmsWe26ghDV4zgmTEZP
zGsWa/j48gWRNScwwC+9zYgnz0YMrykN1D+JctzpKXoH5FnVyhgn5Xl2qBjc
myeSPJPlaBV0XMq0w8AFb73sX85gT5hvfOkiZY+SBvu2HS2dzoakGD8XmGiP
6j/iJzzul2PZwUmnDLLtUPb28inTFeTYkimXagoV7dDtp6xF1oFpLHtK/lyT
0UmsW6scmhYpy8qHXo8wNDyBT5Z99dPsncoykWoLL504jkHLQk3PbpzKsknc
LS/1rHGyUuHM/pgprNlUm5IKs2NYLSLq/nv8FJYjkfDpW68VVhu3TZR2l2E5
CrH+NsusUFiKU/iqdzLLZA74zLCxwinVfc7nbCazHK6SRWb2UfTUq30t8WUS
29jRYpt03BqX17Ht3+wnsUzopfBfm0/g5Aw16fo/0qzH31V7WC17rJMxtvIO
lmZLZsXuPihwGtM2+e64MVuaVR3MMV3xygVXCZYM1b6YyDaOnx4dleqBnEjR
+5K7J7IcdfbtTEkf1NT3W/ZrQIq9bnpe833nOdy2IJZ75KYUm++9d/uJNYF4
y/Ziytw1UuywYOg1zcAQ/OSzZMYY3gT2lcahA8e0ruDl/vYPTWETWOuwnsW7
ZUORexMdgjdMYCdXbhly0r6BqWL/bewclGQHemyEGwJvo/QqRYn3TyXZq0bf
jKaLRqC3r/0LucOS7I43/g9Pt91D29/XTdJnSrKNSZcbQyojMTnvwluJ1PHs
kmsLlM1ronB7eP+ESvXx7B077viqb9EoYT1m8c3EcexiiY8nCmQeYSJXI3vh
knEsZ4eB4AT9J+jPhmmYvpZgO911FbwDnuLFO82OYnoS7IEHZVNdreKRtyur
cWylOLvgzpLY6IsJaNd7iLPkiDjrXbO/Sjs9EQUrbx23+SXGngx3jVFqTcI/
zsefXrwsxh6zrXt1dvxzPLDSV9RdWYx1FFXZrLs8BVWjjp6aViDK9kk8+BZg
noqJmmp2m61EWfOxLgZ259PwRvThnoGxouzHkz/Ozn2ajrLRv1YJPh3L6q9V
8qp6/wLzFkt379oxlh03ZZ3Zm86XuC/F82X9sAirqTbPGP68Qnnd/ACfaBG2
+7N7+1WJDBRwugCaO0RYmfvP4hdMRlTIX8tWC4qwFz7d1E4SY3Hu9Pk1lklj
WPWds8wP+bMo8G7yqhzLMWyfdrdrMycTJ0y5a942dQwbpatrOuiQiQkRJSHp
xaPZ4YqqbydbM1Ft+DuqnRvN5q/1FpDbmoV3T0ncAmY0G2N+UPpdchZW2f08
UTEkzAYf/rpi36RsvGtgpNyeIsw+sMlpe3giG0sbmjZZOgizx7UtHofkZaN6
7Y2K9RrC7IpF4bP+TM7BgQ3Tjc/2jWIjgkujPx7MwZylGfVCz0ex9cfOLpWI
zsHrRZ/bCk6PYtXzNmsGtufgw5WTDrxZMYqd/eLDyo3yuWioVBLRyxnFbmo/
MLx8Ry6m3/C01nkjxHpp4++9Xrl489PKhrhgIVYpZ+/ZqEe5GPNw+KTybiF2
nsRFvanvczFKck7/c3khVuSps0dqVy4GKKw6p8MTZAM9lvh5c/IwlxW+VZgi
yGra3y70mpCH27ZHdq33FmR3pJ99/EouD7uvyDnEGwqyyTouhstn56HsDc5Z
zkxB9mjzmoDR/66reasvqn4RYJOK7ONU/v28q5vykeUZAmzZwX6315J5+Cc8
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
/+1z0L4Hw2Hi/7fv8X/eVsFz
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
O88BdN6Da+vpO+8B/wOBpTzu
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.6056385775995969,
      0.8695144738152444}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFm3k4VW/U/g8pqYgMqVSihJAiGtSzm4RmjUpRhvQtM6UMSTQbikyVZAiZ
5/Gc9WiQBkUhCZEhmTKlFPX6/Vr7ff/q2lfn4th7P2vd674/a95RW0MLfg6H
IzuOw/l//16xFfBrbLClHJq8lefzlrf8xqOTtMGEcnqtRep9+nnT7bqIINlD
OZzDFRXVArDRZ8UX0rCdcjbILtx7cRpMHrCx2uKhTzmVdqn2/TJQ9+3AKd01
Gymnf4nU6Pv5ECnxyFJs2TrKCe8Qu2OiAh7TRkpX1xHKET78Y87lpTDDW2aR
8U4dytncfX2CszYs1JhU+Nx1BeWszD8bPqQDxcpfSsWVtannmTvdpy+uhXGB
PM31q5ZRjoizhnDdBpjT/83HJ1SDeh5bFSrppgfRarVXfZcspRzFWR9CLLfA
iscfOy1/qVM6p1jm1dYdcJ9n8VqzcjHlLHEfueZrCB01MrfCBlSp5/A8w6v9
u6F8/uX6nXoqlJlcV/zYbR8E3jZT6H+uTD0p78xSlQPQnKE9kWevRD13VXeU
cQ5BwkBBwNqVitRz2ku3q79MIGC7750JcxfSxi1dD5KuH4EswdUPD8ko0MjA
nJ+BamagbXTVRXPxAurZ8N/s3s/moKqnHDi0ez41DUsQyEqwhLyaC/Ocr8lT
RqjPv9zLCur5syUry+Uoc2Cip6bNf/DCvszMVX7s2vH7sVcnToJgyHS9yV7z
KF1Wd9/L1QauXMxvNeyUpbIXzsbc22YHMh2zc/QOy1LPUO5MJyt7UPLrL5mY
NZcGKN/wUL/mANcVX3o5Fs6hkdZJZ5/mOILo1oM7j1fMpmkSeXfkOp1g6Y80
scRBGaq+Tc5IS/EUzLyzUnr2fBlql3FTtMf6NLj/nGn+6PAsKvunR1KryAXq
N6gE50XPpHYPU7OHp52FpBXfLmr2z6ABu4NWyzu4gu+KYJNz+jNoo/nh8Xc+
uIGU8ou5g/HStHwh9/QWfQ+onTjJY3SqNGWm/J0lU3wOao1axSU8ptMd91vf
uER6wvhpnBdF/VLU9HSWnZH5eZCuHThzyVqKlqsNucmpeMF5vTqucI8klX7f
JF/ywwtW1tO2Psexa8FLOlrPLoAUb4lEwx8JWsqV2mwe7g31042sLviNXc8U
vLjW3gfyDHx2h8lJUNGGjR95my/Cav7yX3UF4tTu0Jrvr5QuASd6UpToPnHa
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
f58D9z0Ydt/jfwDfP5fc
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
fM6ssS1Gw1slOfsf3EOlPWt2J/YU4Ztz/1Ud0byHLkMvCOebFqHexO3LD39z
R7u6TTbTmwvRRO682i5/98G+EuSUtr8Qy8IX/Keh5Y5vojybXCtfoWtD39BJ
PXexcqWhfsjWV+j7CI63+d/F8vq1id15L3H76q1nE7Xu4q2F7om2a17iqQtG
p8x67uAWY885XEYB3rQJuj894A4u9HCqW7G4ALVGqyu/1LqDOtttw8wE+Xi0
CSxO9LihrqrZ1iqFfEzr+xgsEuCGanGy8ZZhebghw2DATcsNd34Z6rl+Wh4+
Tcw6rdTiihPbj9Vp+r5AI7NbSvIarvif4xwDuwkvMP/igL/kXRdMf/m8/f2d
XPQ2V1n2+aMzmv3P+KiVRC621HqdTF3hjKVTImMW33iOK4Z2xVi63caP+lme
s8SeY2O/waEZzbdwya+N4qscnqHm95O/s5fdwswpO947/H6KukazW/RcbqL5
8J1Dvp5/inOGSdyubryBn1Qn7HTszcH7P1S2b1tyA9cfTkrlLHJwysU1/um3
rqPrhxvjZ3Zm452Oi9UyDdewqGipnsLJbDxo8t7YTO0agrmz/s42HnsdR4Qk
X7+KBen240OO8lg6xOTHt1onVOfX188qQFy2Vi57ziInXJm+OWLd8yzMzVY3
3OrkiOfsLhmF8Jn4yu22stmbKzgnbd/HVRkZWB3Z6nJF6QrCSS3p8anpeHrp
32pXh8soleJVNvPREzzVcOmYe4UDSjw//PuYIA3Tm6d4ucxzwM2tt60bY1Mx
c4t/poPdJUwquK/gEpWCdQMRR98GX8R1D2P6j4cn48GD54OCN9nj5f7TJRYh
j9FzeGe5Qbctut8c7R0V+AhFU/nY4T422GI/SmO4/0NUDBxZGrX6AmrW6ES7
+SahRs+tDo1Wa2zZ21mk4Z2IYjHOwblu5/DS1s0+owZ128VPct7rlp7FNZox
fcIKCRh9Z8Ai9Z0ljkOl17PnxOHToNcVM65ZYKer4gPHGTF41HOykeOCM3h8
1r2NMlOjsMT35MO6ilP4v7USqY2yEdhS4lF/oN8MTybUVL+ZGIa1N2sO92ia
4t6GDI+B8SHYF2+sbud1HDMrc2vWjgvCavGbN/ubj+C5/1xU9k/3xxNGyx6c
VDuMwVFrbMzlfLBXVius6vJBjNt74EyytCfmSxcnWQTvx6ZVGv3zxt3F7pYv
9QqwB9fu3PD5yuTbeNGiZ2lVjS76KvXc75ByRDvdx3q9nZvw+qs1VwcmWqOg
oERFRYHDIxJ5jX5jjPCZn+k5X+fZ//81tHr8ew309yD38t/fA30eKO/493lA
3wda7PuAfg8Usd8D9HtBZuK/3wt0PXCXXQ/Q9cKug/+uF+h+gCm7H0D3CzQS
/t0voPsJurf+3U+g+w3apf/uN9DzgAL2PICeF+iy5wX0PEEi+N/zBHre4Mae
N9B6gHNsPQCtFxjB1gvQeoKCb//WE9B6g21svQGtR2hK+bcegdYr0HoFWs9g
wNYz0HqH12y9A+0HeMr2A9B+gVS2X4D2E5iz/QS038Ca7Teg/QhNbD8C7VdI
YfsVaD9DC9vPQPsdlNh+B6oH8ILVA6B6AcOd/tULoHoCZ1k9Aao3cJXVG6B6
BFKsHgHVKzjP6hVQPYN1rJ4B1TtQY/UOqB6CLquHQPUSvrB6CVRPYR2rp0D1
FjpZvQWqxxDN6jFQvYY8Vq+B6jkcZfUcqN5DFqv3QP0AtrJ+ANQvIIL1C6B+
ArasnwD1G1jC+g1QPwLqR0D9CsxYvwLqZ7CP9TOgfgf+rN8B9UO4zfohUL+E
ctYvgfopXGL9FKjfwmrWb4H6MTSwfgzUr8GI9Wugfg7nWT8H6vdA/R5oHoBe
Ng8AzQuQxOYFoHkCotg8ATRvQBubN4DmEbjC5hGgeQWAzStA8wxksHkGaN6B
ZDbvAM1DUMzmIaB5CbrZvAQ0T8F+Nk8BzVtQzOYtoHkMRrF5DGheg11sXgOa
5yCFzXNA8x5cYvMe0DwI99g8CDQvQg6bF4HmSTBk8yTQvAk0bwLNo5DC5lGg
eRUy2LwKNM9CMJtngeZdkGfzLtA8DMZsHgaalyGYzctA8zSksnkaaN6GYaH/
5m2geRyU2TwONK+DDJvXgeZ5UGHzPNC8DzPYvA+kB8CU6QEgvQBbmF4A0hNA
egJIb0Ai0xtAegTWMj0CpFcgn+kVID0DY5meAdI7sI/pHSA9BFOYHgLSSxDN
9BKQngJ9pqeA9BaEML0FpMdgPdNjQHoN9jC9BqTngPQckN6DGqb3gPQgODM9
CKQXgfQikJ6EI0xPAulNMGN6E0iPQg7To0B6FXyYXgXSs6DG9CyQ3oVXTO8C
6WH4yfQwkF4Gf6aXgfQ0TGJ6GkhvQw3T20B6HEiPA+l1mMj0OpCeh0dMzwPp
fXjK9D6QHwDkBwD5BfCC+QVAfgKIMT8ByG+AOOY3APkRYMX8CCC/AnSYXwHk
ZwD5GUB+B6xgfgeQHwIZzA8B8kuA/BIgPwXUmZ8C5LeANfNbgPwY+I/5MUB+
DTxlfg2QnwOSzM8B8nvgGvN7gPwgSGV+EJBfBFXMLwLykyCI+UlAfhN4Mb8J
yI+Cs8yPAvKroI75VUB+FlxkfhaQ3wXtzO8C8sPgCfPDgPwyIL8MyE+De8xP
A/LbIIn5bUB+HKgwPw7Ir4MJzK8D8vPAnPl5QH4fFDO/D8gPBGnmBwL5hVDF
/EIgPxG0mJ8I5DfCK+Y3AvmREMf8SCC/EsivBPIzoZX5mUB+J/QxvxPIDwVg
fiiQXwoazC8F8lNBhfmpQH4reDC/FciPhWzmxwL5tXCE+bVAfi6UMz8XyO+F
/czvBfKDgfxgIL8Y7JlfDOQnwyfmJwP5zXCb+c1AfjRsZ340kF8NbcyvBvKz
4Rrzs4H8bkDmdwP54WDI/HAgvxy6mF8O5KfDDeanA/ntMJz57UB+PEQxPx7I
r4cK5tcD+fmgwfx8IL8fZjO/HygPAC2WBwDlBWDH8gKgPAEoTwDKG6Ca5Q1A
eQRwLI8AyivgGcsrgPIMoDwDKO+AzSzvAMpDYBXLQ4DyEshheQlQngI7WZ4C
lLdAAMtbgPIYoDwGKK8BymuA8hygPAco74E4lvcA5UEgyfIgoLwIKC8CypOg
j+VJQHkTKLO8CSiPgu0sjwLKq0CJ5VVAeRZQngWUd0EEy7uA8jD4w/IwoLwM
6lheBpSngRjL04DyNqC8DSiPg68sjwPK64DyOqA8D46yPA8o7wPK+4DyQPjF
8kCgvBCms7wQKE+E1SxPBMobgfJGoDwSOlgeCZRXAuWVQHkmxLE8EyjvBMo7
gfJQ+MDyUKC8FIawvBQoT4VJLE8FylvhIMtbgfJYELA8FiivhSaW1wLluUB5
LlDeCx0s7wXKg2Eay4OB8mKgvBgoT4b5LE8GypuB8magPBpOsDwaKK+GZJZX
A+XZQHk2UN4N81jeDZSHgxHLw4HyctBmeTlQng7mLE8HytvhDsvbgfJ4mM7y
eKC8HrpYXg+U58M+lucD5f0wluX9QDwAnGQ8ABAvADMYLwDEE4AY4wmAeAP4
yngDIB4BiEcA4hVAjfEKQDwDEM8AxDtALeMdgHgImMV4CCBeAgwZLwHEU0Aj
4ymAeAsg3gKIx4CvjMcA4jVggPEaQDwHEM8BxHtAIeM9gHgQOMJ4ECBeBGYz
XgSIJwFLxpMA8SagzngTIB4FuhiPAsSrAPEqQDwLNDOeBYh3gXmMdwHiYSCH
8TBAvAyMZLwMEE/D2TOeBoi34U4y3gaIx+G2Mx4HiNfhxBivA8TzcKGM5wHi
fTjifYB4IO4y44GAeCHOhvFCQDwRV8x4IiDeiCPeCIhH4oDxSEC8EqfEeCUg
nonTYTwTEO/E9TLeCYiH4uIZDwXES3FrGS8FxFNxToynAuKtuM2MtwLisbhY
xmMB8VrcK8ZrAfFcnATjuYB4L06J8V5APBgn9PUfDwbEi3HyjBcD4sm4N4wn
A+LNOAXGmwHxaJyA8WhAvBqnx3g1IJ6N82U8GxDvxj1ivBsQD8fZMh4OiJfj
dBgvB8TTcVWMpwPi7Tji7YB4PO4c4/GAeD1u4NU/Xg+I5+MWMZ4PiPfjqhnv
B8QDclMZDwjEC3ILGS8IxBNyyxhPCMQbcoWMNwTiEbmljEcE4hU5V8YrAvGM
XBHjGYF4R86K8Y5APCTXxHhIIF6SW8h4SSCekpvAeEog3pK7x3hLIB6TW894
TCBekytlvCYQz8klMJ4TiPfkohnvCcSDcuKMBwXiRbnNjBcF4kk5X8aTAvGm
3HTGmwLxqBzxqEC8KsczXhWIZ+WiGc8KxLtyYxjvCsTDclqMhwXiZTlhxssC
8bQc8bRAvC03ivG2QDwuV8F4XCBelzvBeF0gnpfbwnheIN6XC2a8LxAPzD1j
PDAQL8xtZ7wwEE/MKTKeGIg35m4y3hiIR+ZyGI8MxCtz0xivDMQzcwsYzwzE
O3MujHcG4qE5a8ZDA/HS3HTGSwPx1Fw846mBeGvuMeOtgXhszovx2EC8Nke8
NhDPzf16+4/nBuK9uemM9wbiwTniwYF4ce4048WBeHJuC+PJgXhzbjHjzYF4
dO4V49GBeHWum/HqQDw7t4fx7EC8O9fBeHcgHp5byXh4IF6ee8R4eSCeniOe
Hoi357Yy3h6Ix+cMGY8PxOtznozXB+L5uVDG8wPx/txwxvsDnQfgvNh5AKDz
Atw1dl4A6DwB58jOEwCdN+Dq2XkDoPMIXBY7jwB0XoF7xc4rAJ1n4KzYeQag
8w7cSHbeAeg8BJfKzkMAnZfg9Nh5CaDzFFw8O08BdN6Cm57777wF0HkMLlX1
33kMoPMaXAU7rwF0noM7zc5zAJ334Nq+/jvvAf8HCTPULQ==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.1304816804883155,
      0.06560878345329992}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.483943901159851*^9, 3.483943911897108*^9}, 
   3.484215578063699*^9, 3.484215637699131*^9, 3.4843130950449657`*^9, 
   3.484314359663621*^9, 3.487485435690309*^9, 3.4875028944339657`*^9, 
   3.4875029761764507`*^9, 3.487503170750936*^9, 3.487504425283441*^9, 
   3.494224249126718*^9, 3.494224370202189*^9, 3.494226850242034*^9, 
   3.494847177302526*^9, 3.494850551158513*^9, 3.49485059295844*^9, {
   3.494850977447206*^9, 3.494850988036456*^9}, 3.494851241422813*^9}]
}, Open  ]],

Cell["And here's the Hilbert transform", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hilbert", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.4839439276703577`*^9, 3.483943929706176*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3dcjf/7xysiEdpJxgcNPkWEFLluCcnO3pFsooGorIqyP1ISaRiFdgrJ
dUdLKW3tOnVOe2kJ4evX+/r95XEezuN0zn2/7+v9Gs/3P7utza0kxMTExg8Q
E/u/f92tB16vqrDmk3viTL75boY5t94f5it28hLpR/2u+x4A5WPNMBjW8xb3
LSW1ZtrCIleDOqhYxevqqc5t8nGAoZ1H9y93XspfSZXNL/19FsratpxYPH8R
31Glpbx7+kXwV3i/V3aWMR845qlE3G43cJbrSzMqA/792UStNbfdYZSL2r/b
1szjR6bEeyt8uAqaetLxH88Y8KMMKgTCrzcgcUpdmvwUfV46Q9ct98YtGHD7
3cyFc2fxrfzlytEat2FsR5ur6109viJiwgWM94SgqSUe16bP4NsDW7e9WO0F
Bh9Km/b+0OVd5ujr5gi9IeCdVdbM/Gn8V6nP5zRP+UBjkdodn04dPm13SddL
aV/InnS5fI2pNr+8cMRb2/v34bavpUbHxyn8Z61Ol9E6flATpS/17vhkfkvs
5wq1tw8hpPPNzQWGWrzUXKszex/5w81V1+4PGqfJ686+xlkdCICYwUbPtqtp
8LzF75szdAJBf7PHqZnT1PlBLzY8P9geCDqmU273rJvEK+33c1SICYJXRRf/
sb8ykc8zy0Fbh0dQLvFSMT97Al9q1zY5acFjSD+eaXlm4gT+3qXLx9pknsBg
b2XToRf+4bWf/VmzsuIJuLu9Fpk3jed1cz87nI16CmqNY2JNd4zn7aOHpm5y
D4bJ1ztSpGLG8T2GqQM6LELgqlbGBdv4sbzXd25r0uxnMHLF1jUHcsbwKvWi
n18GP4cZ3yJkn3ep8XYJV7/3Zj8H1fuGKmMmqfEu1zSg5foLcOpV3fN+x2he
rWfv8yfzQ6HcRNvrVZAq37xtcc+R8lB4YdDmNrNjFP/e1OTQwANhcM3Aa+fZ
paN4z47B7+Irw0BpSvq4rmAVvv3BIR0XLhxKpKSdf41Q4edr7M356vH39WaR
vIKzMv9bMGedIYaDpJxY+tsOJd4jpuWydkU4qJR0Olw6osSvMcONExvC4bxp
WYJMqyL/+9vFvd2CcDAs52u/2iryHTGH31anh4PSu+kKFb8VeM2PKrbnn4RD
ufLm/RevK/B+5jVrn50Mh1dmrut8JijwgSLhyL0LwsFIIvtH2Rt5/sXG3/dK
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

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw9m3lcjP33/6eQQrQqFUKWUioi3OVcshVKIWtIlJ1IbqSESrbkjhZEqRDa
k6I6V2lPadfetM3QJkmlwtfvM2d+f/WYR/Oomet6X+ec1+v1PNNsTmy0FeVw
OKojOJz/9/PaiZFe3PoTLIcTaZrq3pS6+E76UbZ+D8vROT6+zl0UFew7YDRY
spzFu4uLK+RwlfsSPtRvYDmbVWdv8ZiOY78fP7jexYTlcO2jTvZoYu3XHWdW
L1vFcpTnT/z1SQ+D5NLtpBcasZy7bdIP9xigi8xwjmEtsK57d/RP8TTCSW4q
c60sDFhOzvlbYo5rcPaCMe9ynZawnPDGk/f71mOaBj9HVkOf5RSpcc56WOAI
n1S9Ff8sZDlbYcb42s04peeru7v/ApZ5nJskdWEbhsyrvn5Ldz7LVH1wvmxn
hUve17TbDeqwjNfIO1Wm1hicaluoV6bNWmfuLBrnZYNtlSr3Ar5rsa6/Df3c
vu/HIjXPOgtjTVbVeFJH1oUD6PNg36yeXA2W2dUnyZ19GJtj9cVTT6qz1njT
2r73KIZ/f+u9fOkcNkixwbWm9QR6b7j1UGzqbFZVNIfbf+kkxo82fLFLZRYb
pDzvnb+mA+pvv35WT3smay7X2POg/zRqGWv49G1WY4vS5nbObz2DiZVXpjne
mMEyywy3L/p+FutEX8uXFU1ndTJHrTFTcsK8kwX7nGZMZ4ueBfrPM3PG0X4K
xmMvT2N1slxrc10u4jWPpNaN7aosF+qXTixwRZW2yQnGu1XZbfpxJubZl1Dd
qydLPH4qm6OttWDv08t4c07+ZYd3U1jPz4P3g/ZfQSnTnRaHiiezQa3i6jJ/
ruD8/mjpl70q7MCMh/w0RzdUerhUcbKayt/fS5+pzXdD5wGl/em7lVn7t1cL
b4x2x7qVmr6JIUqssara3DBdd3y15KuHXs8kVtHH98tCS3e8tcR3z0WTSax1
w6GKYRd3nKiRN7X3uSLLVP+Mqkl2x2rxMS6/Jiiy1rlH3NZO9sDq7a2yci4K
rHnbhPllkR44SoaTl9wzkY2e3SMdfPEqKlZ/P3f12ETW/AunQibQEy8Z16ZI
dsmzUsXVf07JXseldSzvm4M8u7hkw9j4zhs4MVVXrv63HOuZsvDflQu9sE5h
+8ErXnJsZXmn4s+z3pi41n1zwHQ5drPW3VVdcv+hoWjRYO1bWfZ5gpZZUrcP
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
Gyo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-6.501707037645161, 6.516014017739484}, {-0.6645632681398841, 
   0.739032793326929}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.483943930233307*^9, 3.484215580107583*^9, 
  3.484215639100649*^9, 3.484313096210414*^9, 3.484314359791182*^9, 
  3.487485437024589*^9, 3.4875028945658827`*^9, 3.487503170939695*^9, 
  3.487504425435781*^9, 3.494224249339602*^9, 3.494224370352071*^9, 
  3.494226850377228*^9, 3.494847178410825*^9, 3.494850551286789*^9, 
  3.494850593106576*^9, 3.49485098828039*^9, 3.494851241571313*^9}]
}, Open  ]],

Cell["Alternatively, we can use two half lines", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], " ", 
        RowBox[{"Sech", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], " ", 
        RowBox[{"Sech", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.4839439741905317`*^9, 
   3.483944002209663*^9}, {3.48430942601604*^9, 3.484309436801639*^9}, {
   3.484309573811685*^9, 3.484309592255674*^9}, {3.484309659015181*^9, 
   3.484309663636537*^9}, {3.4874854476936693`*^9, 3.487485449321033*^9}, {
   3.487502981437656*^9, 3.487502993166254*^9}, {3.494224342861354*^9, 
   3.4942243583955107`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zWU=
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-30.892306118919223`, 0.}, {-0.5473642104414135, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{0., 30.892306118919223`}, {-0.13267413663386834`, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.483944002785182*^9, 3.484215582270564*^9, 3.484215640606179*^9, 
   3.484309304784272*^9, {3.48430943025779*^9, 3.4843094376248293`*^9}, {
   3.4843095822965603`*^9, 3.4843096078131104`*^9}, {3.484309647495029*^9, 
   3.484309664333256*^9}, 3.484309735433642*^9, 3.4843130984740267`*^9, 
   3.4843143602582407`*^9, 3.4874854499414177`*^9, 3.487502895058869*^9, {
   3.487502979546039*^9, 3.4875029952236567`*^9}, 3.48750317143834*^9, 
   3.487504425934462*^9, 3.4942242498065147`*^9, {3.494224359565942*^9, 
   3.494224370840485*^9}, 3.494226850855401*^9, 3.494847180212049*^9, 
   3.494847270967574*^9, 3.4948473551753187`*^9, 3.4948473979305153`*^9, 
   3.4948505518324337`*^9, 3.494850593738962*^9, 3.49485098883479*^9, 
   3.494851242208098*^9}]
}, Open  ]],

Cell["\<\
This also computes the Cauchy transform (with a couple extra digits of \
accuracy)\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"hf", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "t"}], "]"}], " ", 
       RowBox[{"Sech", "[", "t", "]"}]}], 
      RowBox[{"t", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4839440057568483`*^9, 3.4839440417939987`*^9}, {
  3.4875030055913467`*^9, 3.487503011893209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5.10702591327572`*^-15"}], "+", 
  RowBox[{"2.706168622523819`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483944009612321*^9, 3.4839440424574347`*^9}, 
   3.484215591184659*^9, 3.484215642564892*^9, 3.48430931154177*^9, 
   3.484313099878104*^9, 3.484314360525237*^9, 3.4874854534048567`*^9, 
   3.487502895309862*^9, 3.487503012403119*^9, 3.487503171622789*^9, 
   3.487504426171255*^9, 3.4942242499889708`*^9, {3.4942243615918913`*^9, 
   3.494224371143675*^9}, 3.4942268511137*^9, 3.494847182271182*^9, 
   3.494850552193273*^9, 3.494850593959957*^9, 3.494850989177993*^9, 
   3.494851242419196*^9}]
}, Open  ]],

Cell["\<\
Since the solution is bounded (unlike the interval case), we can also compute \
the \[PlusMinus]1 limits globally\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}, {3.4839441040557127`*^9, 3.483944139864868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"+", "1"}], ",", "hf"}], "]"}], ",", 
   RowBox[{"Cauchy", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "hf"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.483944091777616*^9, 3.483944094936315*^9}, {
  3.483944140915352*^9, 3.483944143963496*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
//l//jLK7Q==
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwtlGk0FfoCxU+FEFEUqRRlTCUJSVTmIdQVyRgh0ZwjPcrQgK4Th1Bxcsx0
kowl2X9kyjVWpsxzEsmQTL3eW/e31l77w/6yP+y1xRwuHndaTqFQMv/ofx4u
GOORf7uSfM5LK+BO+l602VTlen5AKpl4pWLzKokfJ7xTf41VPiRU5tWwnDfi
UHi7yMy/FUga3kVpn0+VxwLX1Zhpi1sk68zHVWbcqmBPeZ47TjzIAHdfyL2S
I+CkSJ3UnrhI4gLS9VRC9MEIKlYvuHiWnNgvelky2xSvflvL/mXgSHQmhDbe
lDqBlnbzikVlO3LTTLnWdPsp9LqmHnlQZknMFcupNul26Fc8fmM+7gSxVLcI
2d/hALULXnufuBwnp2VyS/NlnXHqyrCz00sTQs43D4oWueIyV7tGbqghkewq
1hyJOg+fUQvJ/t16RLSE9dOo/RJm80c1pB21Sa1A54eT/FchsFiiEcitSSaZ
+8qtznrgkQrVU3X1YdJkfvvEo35PfD7uNO/7Sp2UlAs/M7tzA147E3LDaw4Q
WWP9+DoDH/hnvN2zS2c/UUuzbEsU8cXyY4oyjmuUCZ3rqNWteD9sUq5seyW2
j1xIZv5aezAA1NIUG0v3vYTmGzTmOXIbbQO5xGt4D6GLbnJ7m34XW4KquIZp
8kTk/pdHEz6B2HWg2Ppc9i7SeXOx1uhMMLa/1OobvCdHpKYTczfY/g3NyV7G
ynBZ8j1f+FDVORqiL+Rod9RIk1Nbh4QWNEMh9co4KEhBivBEFHAZWIahc9Jn
/+pCCUKpkZf824MOqtMdE0nn7SROe7xeOTYczAVWsuTObYRHO6DmQmsEZKOY
2f284qRz8xq9UcVIGFi7TzLZxUijWnj2j9woOHGrCM2v2Upe87SdZlo8wmiy
u3nOaVESQdWSYbA/AStoRrOJbCJKC1TtdTEx2O/zKGa7+kaSXfBQ6txoLNR2
FbZXNm0g96SsD7iWMfCc99SiRqAwOfo5ZXx4gYGBWI29JqZCROTUVFDGdQZi
f5u6zsmtJ5c4qyW/KMbiuWWajPemdUTuyVSSle4TfJquy1ffLEgcaioc1nVF
g1aTI9O0U4A8n9sQvfdwJDx7DcznjdaSk5qNEr6l4WjnG/W857WGZGg8ne0u
C4PDxGPnS1n8pP3RjvH/PAuFwgtKcvA3PqJDLYvR/RiK4YDqDov7q0nHlNqX
oCg6zuspD75R4yWKPTQrmkYknDemjxyl8BCKwhWzDI4YcKgas5d95CYLtr8f
1HPHw1f60MjUKy5Sn94Zdf1wCopiS2ffP+Mk0sEfhrLSnsNJrTLRkLWS8KTf
rH7PyMJFozU7Q19zED9+mYbun3nYOcEZ8a6RnVCViwr3Nr1BLiuvUeInG3E+
65gVHUnQ4XdXnSLJRgR2ukgKeZZic0j4xgzbFYRnKozldbsc/oEc5pFxy8nZ
LJU8sbwqKP36aLPj6zIi6mDcKbuiBm1ytVtHDi4jUU8735juqQdF1n2LZTSF
DBYErGgdaEAwJVWBb+o39g8frhh+/AHU9c9iN5Qt4Xpwr/tFo0/gZ4inr05Y
xF15ITpjpgmVl92mVUIWkLfZ32DqYQuMBVZ5jvvPo7DCknZEqg393OL+EQFz
2PbYd1tOymeID3p2RtB+wU2MaVgn2IFM8bQZ54RZLDO29qW6d2J9ut6G4OKf
WMl6ETDE6kLPHY7qO8MzmL7uFWB9rhsjLhLSX4RmIKikG+420Q3PxNd/GZhM
I+1v9hsabj3QUrWY1KZNQfhGCTOmuQfyR+dyb36cRIHeFeo5pV40FqwfiBGb
hLq1mXnmvV6Ml7QsHfX4AXLktRO9uheD8QUnteomsMfDz8J4eR8oI2lVSrsn
YCF3db+KXB9MH66y6o74jlRb62P5+n/y//MdXNEd6zSt+tBt/yIxs3sMGbUF
hvan+2B2+1KabfU3+LDSjRnWfahizV2JwShEM9uCI4724bxvq9Xyt19haEVk
uxX7wLpYdHxX6Qg4nlrNiwn0IfI9n29pwxe813t3b2G4F1xGIj9ch4cxawm3
tfm9WGd90qSWYxhVClLtbDd7UaJnQmPKDSF5bIfjFfVeTNrTsqItB6EU+6Fm
erYHEjbONPeQAQR8eaYrkdGDmJnZwNaKfhg6GDDDbHvAEtA/+5SzHyWRbEVl
3D1QZc6L+pn0QU91t4ROdjfytvvGasX0IqV4T3boyW6QU7bJWWM9cLKLrlGZ
6QLbkFtSpE4PZOdFaFlKXWAczgoqSuiG/Rr9t/ZXO3H3TQNzjr0bktaf6Cuf
d+COo9O0alsn1F/4x9v0t8OuPNv358sOMIoUd/OItKOs8NLhFno71MNu018Y
f8ZK2yR7mvdn1LvezWn2b0Nz7gFm7YU2DNV8ecCZ34rwmsHdx1xbIUwRRMHX
FkjwUKgNbi3wDtPisxZrQUWcxDgvtRme8geFTE82g/e167LKe03oPatd9z30
z56nB5pL4z5hU8Ub6QfVn6AxE6RRST7il0lOwlXOT4geXbrDGPoA0Tm3nk7d
jxBb6XNq7boPkOqOVOAO/oB+oSuZE3qNiGws3ypd1wiawecEnoAGjO6x+HFG
qBHZ3/bZ7Suth6Woh/SQQwOuWX9bfoirHrEZizN1L+vhPmS1iT29Fjx+3HkH
2OqheoGXnmZUA12G6uPbObUQJkF2W+eqkc/Xs3vcpQYufKNFW7Le/+nHEdws
/g/uji1ynL5WhQJLTmuLgffganAPjDtUifhvUWb+L6pAjg27x66vQK/hvnxn
v0qoaPJEb5gpQw7rxQivVQW0g+eDWjvfITlPZtFbrRxRkXTNxPpS6BvJiOZK
lGHZ7w1ymtUlmGtW48tZ/w4llo6zfrXFGHuP+9f4SlHXeSB8VxuBxZJu6hhf
CZS8NFcrtAMt8kdkhYWLkRNh1igpWIR228Mt/VIEazv4g/usCsHWvHQ35GYR
3h7VFRTMLkD6boH1NoWFMNBxmHTZ8BpKnCIKQlxv4PjMfwedlo+tV51yo8+8
BtP7nLj+2jx4Sw4PFNbmQ5V3i59OYg5U8iIbbHTz8CxSTkhXKxs8oQfizWpz
cN6ICu4fL7FJ/sIXL8dssF24pWP2PBP8iscGkjiysFxeKbHxawbsI18WZeZn
4p9bfRHbo1gILJf1HxjNwOry6EBF63RQJG6JBN1hYXZcrjVWNRWvQnRDllTS
IWi5ZoSikIyWZ17Xf3Gk4lhZ54oVRxLB72orsns8Cd+8likYn4tHaoZCuPlE
At5nnRcPS4/D9YamLTK88XhMpa1eYmPg5JKCscORODDe1U8x+h7D3rTOwlcs
Fn7FbmXe36MQd4LVxfH9EUSkbfKEdjxEHJ2i3jUeiW1/GSvP0umg9Licitwa
gUA2nfIMqVDY67buhV8Yblb/oKU03Aehy0sNStBgaKJDVrPugdizX0tICUKX
TXhqb0cAKAZ5q1YE3sGqE0W1fs6+oOge3GlX7gcfZeZSVvAN+CrFpGm888aV
Kvs91ZPXQJHf2+WRS0UQVee1/cpLoEwV8rvaXYZd0sJG/SAXUOq+5v7H3xXc
3OVJFSfsQYG3llvOaSzKyDmIDpqBIqgp9ibZHJpb/Q4n+eqCUv+4WNJLHz7L
hEJyexX//Czo3AlKONCU4PO5RxAUonhcNH79v//7L75Vav8FMNvkPg==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{-30.892306118919223`, 0.}, {-0.605636737737276, 
       0.8695181135728381}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], ",", 
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
tKi3i/o/AGl3QQ==
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{0., 30.892306118919223`}, {-0.17271811296883557`, 
       0.8695181135728388}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt03c0F/73B/A3SUaE3iWflC1ERYMolJHKaFBkJ6uEyojW2yoUiYxkZmSW
vb2fL2SlgTQISUiIZKSQ77vf+d1z7rnn8dfznHvuFTntcsyWmUKh5DH634yg
xrmX+jcRCmXo1MxhIfqGI0qXS/0yCOVytrqzviXd6GrG7/GmSEIZaKg1bPej
K1QvJpfeCCSUigd3M4wT6Qvsl+JmTt4glJq2yjuShfTlj3OLJ4g7oaRKVw73
1dHZKJuMtSZdCO2k5z0X13Z6QlCNaoWLA6EoDPwu9vlEL1sykzl+yIbQ9AKO
3Tnwjf6h+0TjoqIlUR8Sk2/Vm6L3O2bsv1tvQmjyQ2I+xxfoAzuOec8nGREr
/adlVetZsMfZa/tD+2OEcjJxWrGeE6cuDtvZ5hsQ4Yo7zCMVfLjA3q1WHHaY
JA2G7DavXYdrYyclB7bqEB6VsAElqjDmSsfUpGy0SNhS2TKTMHGsXqxVC+TQ
IH23fSmuk9J4oOThqcy9jyRZt4Q1yWzDx2O287QyVWJ1qenFnfHt8JJLKY54
qUJam+vbzhgpwfdJtfwW7d1EOLhff+LCXjAf3SFtw6tIml7IBXDm7IOgYlNX
mchOMjzPoRfGrQWPusfmJk7byeWOI5zdozroGiwmXsPyhPJ1xe4lAz0IBTWz
D4duI07u6dcHxY5ii0qN2dnCLSTscv+Zcz+OQzxf88vQLVniQBn3rqWehMZU
f8KKCBlS1v6JxS/mFGKci7R6XkoRhzk5kVw/C2wq0w8KUthEysbjVQxdrNE7
dW03d5UECazQ1hHptIGHbYCBpJ04EVS5+vatnx2SF3LSJeXESHd2bL+SmyNk
opMLB7hEyeXmLb17njrhkJnTVPJyEWL32TV8UdAVthxK/PO8wmTlN2uF9ysv
Yizd6USR9UZCTRgZfSvthpygWY13RJAMUCazcj08sPvagzhx1fWENBRs5J+9
jD1bqrqb3gmQVp3+xOdZV5DLdWpRLXAdGcjRDPWOvo7BeLXtBkf4ibPGwxi7
TzTELx1x/CO7ltDmP/Nl3/NFrkmm9FXBNYTZdKio0cYfb2del6puoBLDW8bs
307cROjLIul3cqtJa802601OgfDsP3RiXpePdP+1n/VNDUb3qjHPW168xCp8
FXMfJQSnJ2PtXAt4yIfFulZm37tQeEpJD/6+itSOWE9qUe9h2K+l5+RtbqL5
9zqft3c4zusoDlXu4SLeey0zn01FwG591ogeZSWxb/lwYCctEqzK+svrOzjI
+3Cm9FqhaNCk1Eemy9iJ7ln2/QfbY0CPr5t7ns1GtMN0FIOjY2G7pyn1cM4K
MrdkZiTjEgcXXV65sHJW0vFNn5ZvnAC5Sbb7z9qXkyibhm310kkozilpl/jF
QlbqX1Py2ZqMHp+bqhRJFlJxp1pOYu8jbAiJWP/EYhkR2BRoq3IsBb6BrCei
kpgJCoSb1Z1Tset3h/nmUSay4K8fnxaWhi7ZV8Ije5nIGrunXq/K0kGRcRIy
iaGQlj8R59cMPUYwJUNh1fQS1PZe1G/hz4TH2ux4gfq/CG5i2rxbLws8CaJZ
3CmLiBrp6k4OyEbThXMzSiEL8Oml52uQHOiv5vSc8J3HI8m34qcWcjHAIep7
3+8Pjq4ZShTa/RSiQ56990N/w6JSKOGrch7yRDNn7VLmoGsbvffNhzyszdIR
CK75haiW1Z5T7vn4HMDaEjA8i1ZS+GWUtwAj9hJS3/hn4eiimW6TUwDP1PLj
hwxmoB/eyMeqVQhN5ZNTWqHTuFP9c5/fx0Js0/tTfL1jCh6NHHfDXIrQXrF2
ME5kChxPly0NU4oxUfvhr577T3AnuIfp3S3G0KMKY83Xk4h3cHML+K8ElJHM
5l1bJyFoNbrN4lEJjkRymvbd/wFZd5/cbMlSUP6vfiBz4oqszuNS9Fk9Tc3r
G0faoePyVPEyGPq7Zlq0fEfs818nZuPK0Jzz52IcxvDseif/R95ynKd1mjJX
j0I9aiSoyLccOS70Y1vqRqAs3MDjPVGOqOeraHVt35BiLsUmZVwBdt3/fjoO
D2PWi+6AqgqsMTM2eMU6jGfNao5aGypRq2MQmiz7FQ75wRvqvCoxZRVaEGMy
BLF8izVa7ZWQMLcLdQoZxJUSroUuySrEzc4FdjYOoLLWRDnaswo5qw86JLIN
4HuB28PQZ1VQTp7f6GPwBVo90zPvuapRIk6L14zrx7udJztvH68GOWWRXjD+
GUMhwerPIqvB8vVcWpT2Z2hkvjwY11GNhH0FQfSUPlTlU6e38tBxs7It+c/y
PjCNMvU/1KEjwMZ2RrmrF26JrqKL1+iwbCik/crvQev1C39d8+ior3Ld9yG8
G6qm4S+ofXSssEizCr36Efk625uXcwHvi1WSXzl3YbVEzpSVIhDxcmjrUcdO
WApMT+y3BCRWUjzazn2Auo/vWKM/0JgkMcHl8R7y66h3ODMArnJHpqZb7zAR
z/ZGqhlomhl8X5f0FqZiLOuUhwG12SC1JtKBSOP6KzmMt4oZ+xuQ8PUNDHaI
SRjwEIisuHaKb80bsF7q4ubdQDDAfzFvUqcdg2+83i9KEYQe+piy0q8NUWJl
hcI7CAq/77TcWdeK59EJ5/1VCdzMvjOrs7dCVsHpzHYdAqevpoLLs17BcC1/
iOJRAmVnrvBM3ZdYmDlxKdaEYB0JshT+0wKvAREVW2sC+1VjdKGC59hYE/wo
yYHg5vgiq7VbM25EjC8zciFgb3MKTFJvQmWqjXGwOwE5OuwUv7YREaqmyjpX
CJQ0VsYIzNYz7thpOJJGoBU8H9TZ+wyDZUo63gEE0VHhGqmtdSi1cvo2H0TA
tCQgq9FSi66sGjaRUIJaE5s5n1c12DnLEzFxj+B1r0rEli6CZEVzqfORBLu8
NLgVuoFY0+6NiTEERfcN2yWpdNS5zwQEPyTg6+EJ/mJaBc44BekdCQTVegeo
1MIKiIqKRiQlERzSPj1lL1AOOXFJno5HBDbZvpvDQ0vhJbU1vz2VkXP1rOhB
vhKoPLDWT0pn7ItLyEc7tQiuBSlB6hkE2VGy/Ac0CzGrQm0rySQ4r+sBjp/5
EDdysGbNJmBxvqFtmJuHvXzyOgo5BMzbdqW2jz5BUv4Ku725BC9ufLkvHp2D
fOdkV5knBNwNMYE7zLJwV+D59DzDcxOynfHKGZBN1zYuekpANeEdoSikw1cw
8aNRHsHR+t5ly/anIl6p7WE/w9+9mBT0zz7CAaPRCLN8gucF50XvZSVBdTos
oZ7hWI9Q7r8sCRDNcPAUKiBIeNY6nfAlFuVZblXnGPapOVd/9Uc0IhaMJrIZ
/k/KvIR/cyQ4da94fGZY7Li+4lx4OBLvqSRwFRIEsmg3PNkUhohbPQ/kGb7e
8jP0cdttJM7d9tdn+LCBNuHOuYWxn4qnbRn+ZB6R0d/jB4duB2FPhjmN6K98
7GhoMJ2P8mf4mmLy34Jgb/zifx0YyvDFZiv5lik3ZG04kxrJcJCHdrnVClfU
TNj7xzJsmbaw/mCQPQJ/KOTFM8zB0ZDWaGSFQaldcYkML0rLnt44ZIgzv0yy
khjWEPbZl0Y7AI5sPZnkf3lM/CHF/TvAdqHJ5J9V3qVc+/iZirjoyjP/TPn/
+mrvYfvP/wM+RvLt
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{-30.892306118919223`, 0.}, {-0.13048188642716171`, 
       7.077671781985373*^-16}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], ",", 
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
n04=
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      ImageSize->Small,
      PlotRange->{{0., 30.892306118919223`}, {-0.13048188642716138`, 
       0.06560335671152549}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4839440979771423`*^9, 3.4839441494598007`*^9, 
  3.484215596454945*^9, 3.484215651013043*^9, 3.484313105655669*^9, 
  3.484314365075713*^9, 3.487485461084436*^9, 3.4875029002988663`*^9, 
  3.48750317707721*^9, 3.487504431193286*^9, 3.494224254935886*^9, 
  3.494224376517861*^9, 3.4942268559959173`*^9, 3.494847200504257*^9, 
  3.4948505597659607`*^9, 3.494850599016389*^9, 3.4948509942045307`*^9, 
  3.494851247663393*^9}]
}, Open  ]],

Cell["And the Hilbert transform matches", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}, {3.4839441040557127`*^9, 3.483944139864868*^9}, {
  3.483944218556014*^9, 3.483944225156108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hilbert", "[", 
   RowBox[{"hf", ",", "0.1"}], "]"}], "-", 
  RowBox[{"Hilbert", "[", 
   RowBox[{"f", ",", "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4839441682840843`*^9, 3.4839442121497087`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "9.418854585163672`*^-14"}], "-", 
  RowBox[{"1.8973711490843925`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483944168693555*^9, 3.483944172013701*^9}, {
   3.483944202777815*^9, 3.483944212744112*^9}, 3.484215651310932*^9, {
   3.484309299940062*^9, 3.484309314897402*^9}, {3.4843095873395653`*^9, 
   3.484309681693447*^9}, 3.484313106353702*^9, 3.484314365386196*^9, 
   3.487485463711349*^9, 3.4875029005816803`*^9, 3.48750317734487*^9, 
   3.487504431475905*^9, 3.494224255273559*^9, 3.494224376864807*^9, 
   3.4942268562262917`*^9, 3.494847200902297*^9, 3.49485059942671*^9, 
   3.494850761895397*^9, 3.494850994477758*^9, 3.494851247962748*^9, 
   3.494851297976645*^9}]
}, Open  ]],

Cell["\<\
At a single point they are both O(n log n) operations, hence comparable\
\>", "Text",
 CellChangeTimes->{{3.483944248166347*^9, 3.4839442923342333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", 
      RowBox[{"hf", ",", "0.1"}], "]"}], "//", "Timing"}], "//", "First"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", 
      RowBox[{"f", ",", "0.1"}], "]"}], "//", "Timing"}], "//", "First"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.4839442632666283`*^9, 3.483944286552775*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.098194000000003`", ",", "0.06802300000000017`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.483944286884128*^9, 3.4842156525980663`*^9, 
  3.4843131090892344`*^9, 3.484314365564587*^9, 3.487485466733247*^9, 
  3.487502900758458*^9, 3.487503177523335*^9, 3.4875044316584597`*^9, 
  3.494224255473106*^9, 3.494224377047526*^9, 3.494226856398656*^9, 
  3.494850599692299*^9, 3.49485075865098*^9, 3.494850994652615*^9, 
  3.494851248084725*^9, 3.494851341959208*^9}]
}, Open  ]],

Cell["\<\
Globally, two half lines is an O(n^2) operation while one real line is O(n \
log n)\
\>", "Text",
 CellChangeTimes->{{3.483944248166347*^9, 3.483944316663529*^9}, {
  3.4948513539952602`*^9, 3.494851357720566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", "hf", "]"}], "//", "Timing"}], "//", "First"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Hilbert", "[", "f", "]"}], "//", "Timing"}], "//", "First"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.4839442632666283`*^9, 3.483944286552775*^9}, {
  3.483944321445191*^9, 3.483944324233823*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.346358000000002`", ",", "0.06215699999999913`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.483944286884128*^9, {3.483944323024613*^9, 3.483944329939587*^9}, 
   3.4842156618621073`*^9, 3.4843131159919577`*^9, 3.4843143704646053`*^9, 
   3.487485477641158*^9, 3.487502906269846*^9, 3.4875031832309437`*^9, 
   3.487504437148703*^9, 3.494224260807394*^9, 3.494224382331625*^9, 
   3.494226861617133*^9, 3.494850605147423*^9, 3.494851000048244*^9, 
   3.494851253587617*^9, 3.494851350881035*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Over the real line of a function with different asymptotic series at \
\[PlusMinus]\[Infinity]\
\>", "Subsection",
 CellChangeTimes->{{3.483942350266241*^9, 3.483942352792292*^9}, {
  3.4839455399435863`*^9, 3.483945568126918*^9}}],

Cell["\<\
The Laurent based approach is not as accurate for a function which is not \
smooth when mapped to the unit circle (we fix it at 500 points since \
adaptivity won't converge)\
\>", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483945574278681*^9, 
  3.483945615151475*^9}, {3.483945675939287*^9, 3.4839456979230347`*^9}, {
  3.483945817409748*^9, 3.483945826952993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"LFun", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"InfinityQ", "[", "#", "]"}], ",", "0", ",", 
       FractionBox[
        RowBox[{"Erf", "[", "#", "]"}], 
        RowBox[{"#", "+", "\[ImaginaryI]"}]]}], "]"}], "&"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], "]"}], ",", 
    "500"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.4839456558967953`*^9, 
   3.48394567242994*^9}, {3.48394581575795*^9, 3.4839458256392803`*^9}, 
   3.487503024494022*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFmXlYjuu3xxuovJVGqQiVFOUXmVK0nlBKGsg2hLYhZKMytHchs7YxFDtN
hkKIVJKh4X4apXme3hdpllAqDZKzzzlrndM/LldX0/Pc91rf7+ejvcVz5TYJ
MTGxbnExsf/+N8+mU6epaSvvwJJWzk/xhcS/+h/ENTnzdjbLDRKTz4Kbquho
0ellvNuM5phJy4Ngk++IrIbGxfzHh7kBN1+GgLLD1t/ky4A/E1Q/TqByC1Zo
X890O2nGKxtbqt2wiYKMbssJ2S/m8glBGsf+8LsHY962CGLqZ/Hm+0cbOsQ/
gOgKyTXwcCavZzD9m37TIxDu1MkVzzPm29ff3vhJEAdOHX65uk1G/CUTjZTx
UfEQfvVuV4rvNL6mQe9qsNlTUL7TaevoYcCfmFKy2640EdalXq089ngKXzXB
qFJ/RxIE/ozrcDPQ408flNw2fug5LGtXVcor1+X1LI+mql9+CfHHx4lpR+vw
HQtLz8rpJkPv4oU708O0eQWJt0dbE1PgZpzdm52PJvEzfOs3hVilQU35HI/8
BxP5a9LjB5UqGaz4YBEZpjuBt1dLDbwVz0PBQI1NAj+eb3Aat03WJx1cxef/
5X14HD/XJ8MjfWEGxCn9ClJw1uRVzcPiX0lkguH2Vyo2lhq840fjeV9zMkFZ
Qcxq2xJ1/pJwWHHNuSzYdPBZmarLWP7JmYK17cuz4Q+RuOO6Y2q80Kp3xu3R
OTDlcc2lQ8/G8J2P0rL2F+eAzyiJgeE+Vf7z3fs2LpdeQ8nJrYLr1qq8hCBt
cLlDLqy0C3s6+ZYKvz23SWeJ3Bvw68iSuyepwjcsmq5i+uYNTBr3fpq5lzLf
rTzJQPt0HuxIUq8e36zEP54n86YP8sFlWctQyGYlfpT1HPfEgXxw3W33SLVZ
kZfuMzrpmFAAa6Vlr/3yUORH8CmR6TsLwf0ftbznPxX4eFbmIjmpCAaldLo8
DBT4l6cHbOUriyDcPyF89cbRfJWxlXrNmWJwXn/SPTFMnrfteGkWq1UCbqlX
rd83yPGtoqFztn+WgNmoMv+FJnK89vnVa8yKSuCIZp/24rOy/ICPW99hvVJY
o+W70KtVwH/wG5Eif7gUpGR73zsuF/CVW1za20pLIcpZsfjP56N4QVz2M4F+
GZzoe3/5hMEoPs+8xNTzUBnEVovOq9+U4X1nGe9RLi6DramzLJs1ZfiGCeK6
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
R0D9CPsTUH/CfgXUr7B/AfUv7GdA/Qz7G1B/w34H1O+w/wH1P+yHQP0Q+yNQ
f8R+CdQvsX8C9U/sp0D9FPsrUH/FfgvUb7H/AvVf7MdA/Rj7M1B/xn4N1K+x
fwP1b+znQP0c+ztQf8d+D9Tvsf8D9X/kA0B8APkBED9AvgDEF5A/APEH5BNA
fAL5BRC/QL4BxDeQfwDxD+QjQHwE+QkQP0G+AsRXkL8A8RfkM0B8BvkNEL9B
vgPEd5D/APEf5ENAfAj5ERA/Qr4ExJeQPwHxJ+RTQHwK+RUQv0K+BcS3kH8B
8S/kY0B8DPkZED9DvgbE15C/AfE35HNAfA75HRC/Q74HxPeQ/wHxP+SDQHwQ
+SEQP0S+CMQXkT8C8Ufkk0B8EvklEL9EvgnEN5F/AvFP5KNAfBT5KRA/Rb4K
xFeRvwLxV+SzQHwW+S0Qv0W+C8R3kf8C8V/kwxzxYeTHHPFj5Msc8WXkzxzx
Z+TTHPFp5Ncc8Wvk2xzxbeTfHPFv5OMc8XHk5xzxc+TrHPF15O8c8Xfk8xzx
eeT3HPF75Psc8X3k/xzxf/QDHPkB9Acc+QP0Cxz5BfQPHPkH9BMc+Qn0Fxz5
C/QbHPkN9B8c+Q/0Ixz5EfQnHPkT9Csc+RX0Lxz5F/QzHPkZ9Dcc+Rv0Oxz5
HfQ/HPkf9EMc+SH0Rxz5I/RLHPkl9E8c+Sf0Uxz5KfRXHPkr9Fsc+S30Xxz5
L/RjHPkx9Gcc+TP0axz5NfRvHPk39HMc+Tn0dxz5O/R7HPk99H8c+T/0gxz5
QfSHHPlD9Isc+UX0jxz5R/STHPlJ9Jcc+Uv0mxz5TfSfHPlP9KMc+VH0pxz5
U/SrHPlV9K8c+Vf0sxz5WfS3HPlb9Lsc+V30vxz5X/TDHPlh9Mcc+WP0yxz5
ZfTPHPln9NMc+Wn01xz5a/TbHPlt9N8c+W/04xz58f8CSXaq/w==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxFmWlYjWvYhhsoDTS3U4QSIRtl2sL9kjInY1ubDIXIpi1Rpoq0DRmTUBGV
DNFgptxvFGlVmrSqtSpSSQqpDEV9+/uO6zi+/vjRUVrv+zz3fV3nOWD15gVr
lBQUFFoUFRT+99/sGZ/NamrcxK5+n+lSSje6vf371aSahaJC/5G3NqYMJHd9
uX/e/lli17in1YtnjKOVft0yqt/aiYpbgoJOJ08jXUe3xT0LSexSTDURhjrR
/AFnnrrvmyAqa9TkjXNwpictU0wz748VFXfovfBIWEEGFXXq11/biAHaRlqT
b7pTfLGyM10bJSp2M3qmMmwDydabZSlmjxD38IuqoYO8yKlxd5Z5jZX42H97
ZtsBb4o8Fdec6jdUVNBNU0uftJ10Yz/PnLfJUhR9Ls1fO20nLU079SrgxiBx
sqRPy6NIfzr5K6nR3dJCnCy67pxlvpdmNejrZBeZiwol6SGvo4MoOdBEYUC8
mdglrlunMv1farObtD49YoDYWWd7MdrgEF1Imv1ifUJ/kRIDhp/UPEKlRWM2
Sa72E7t0On+vNDhO899MvhRhbipGPzTe4v/gBOX8KJ2RIvYRU+JXvTf5J5Rc
Ff/Y7rPLRDy+c/HLixPDKEmnK1RrobHYU8vjeKdJOA1b+1BvxpTeYs+khxJT
rbOkq6Vgv2aakWhzo27hR4MIWrnjTqG+y29ipUXeiD9HRtEGueK8pQGGotJv
PhEOrhdo0I3SYzvvGIjtc/4JKngZTb5qSj86v+mLWwbt1x7WfpHy97mpn3HQ
F+3rXavNf4+hBbMjbg2M1hMLDYuCEz1jaXdjhuZlZT0xdfalwekpcdTfpGqo
rZeuuHfXz8OzleNp3V0jaZ9aHfGReffeU5ZfIZdZdT/PrtIRbeIWFoaKV8l1
4+wE/VptsWnhWpcxw6/Tn6oaYV2btMXb/b9+MYxJII/Thtn3fmmJd2Zp7h5i
dpPaVcyaN1lqiXO/XvVdfi2RIoNTIpcs7yUe/VARWBCVRAv/2udxO6Kn+E36
60PrhmRyTzvlUFWtKfbbExtzfGIKTVArDJ5krSn6H/pqHKl7i/YYfxtgd1BD
jI4wOtir6RY59/Wb5PVOXTwZs6imUnKbVDTaqubNURdVY+aVKyfeoZiF2i+3
3VMTD2joPPM+fZf2fqs6vtdSTVxVfjNm4N57dFMqP2x0oYf4R8wBRc0t98kt
zWZKrXEP0Tve8JPp2gdUzTVRERGqYkzmpvfzXR9So+Tmitb+qqJsY1rmGZdH
lDV/7OEb11REizfq5+pcUunCzTHNB8eriMmLH8UOX5FGYu8S0Sm7u1jsN9Nm
xbrHNMEj1CJ3RXdRMufZAU9vJu7h8Cn3ezdRV8u5OnqKSKqtpnYWYd1ER7lT
7TqJSFEehxZdGd1NtB3yzEDROZ0sF+hYjJAqi9HvlvZYXZNO+iM3zzq1S1ls
Vz5xyt/7CaV0DHt4e6CyGGpWnTO321O6G9Xv3OaXSuIaN/vvfPopWe53Nri8
S0l0MlhxJGtoBpkvezfa1kpJTBSWjFgqZtB7zYmpepWK4sfFrgmrnTMpI+pU
D8OTiqLFii+/ij9lkpf5vJYhMxTF9Sr3Z104+IymrUq/O15BUfRJ/fE+ceBz
UpEue2X1UEH0WnnRo1V8Tlb9a5W++CiIEzrDjy11zaLqF/u1fGwUxMBDnp6S
n1kkHhp9dXptF++uNlo8JvIFfXrbaV++tosrb5R0BE7Mpis/T60J/NDJNR2p
myMqsslj5kFLU+9Odv/HYrinv4SEMX2nhf76xUnB0ZblA3JIUzGmPuPQLw4L
Xi7Lz8ihRl/J1TPGv1grtmbeOI9cyuu87dGW8JMTt3cb0aaRR8OPhtHTKT+5
2askpzkxj0ZpV2z6UNrBBsPFMfqLXlJ6TNLsP7d0cI+BLrZ231/S1H8ujWjr
2cG/nEJFa8d8ktqHrL95vZ1Npu3LGBmdT63HfUb8M7udq1/fqOr1JZ9y92w+
MazpB5vL1tiJdgUUXLzw75zjP/hef8mA8WEF9LZhkZvd2B98rN721vq6AnJM
dpQEVHznEdH/2s4YV0gr1bKv+QR/5331r3s9/7eQ9HvFXdcb9Z2Hx4WcLpMW
0qXOhXpzK77xgoo5i70HF1HOkcSH+oe/8d6S4A//biuiensHFdcJ3/ivdQNN
NDKLyDZkcFWfD1/ZUGmU5LNuMW0I7ZdgH/WVm9fZaAxfWUxpwrLZuU5f+Zmz
veHthGLyve6tebX7Vz5Y3rB4x/di8t6SeS3vURs76V9332r3ilqvj5wx2ruN
u9/bqB1+5BU9STTyyB/WxtddzyyTlryiZxtvNZytbeXxgnLQ0H4l9HR1ZI8D
0a3ceC22ff/aEsq4F+94clkrazcaba5KKCHvcc1nk3q3so9Vq8TqSwlpu5jr
y6Qt7Pvm3Xj3sVJ6++DLCPXwFg5fl2ayy09Kj6Oz48Y6t3DTIsveno+kpBAW
77XUqIXfdfc2sPwppe/d+0o8y7/weKnqmGu2pZTsuc9qXdQX/m1zmbzer5TM
XOc42K/6wmvdElJkd0up36IdigqDvrCDz7SoHV9KSf3tH7tOfGjmfkHbM9Ks
ykhnzznV1uRmnjjV8kTUmjJyL3G3MPNr5vKooTd0o8poumnPYMMpzTzovp6y
YVEZORxllRy1Znaz+pYWrVpOUfH7EycVfeb5TnozEyaUk2PW3uS1UZ85u+vv
edYby0k7zWHNVI/PPPFvt0dWkeWkpTdmZo7NZ851sbwbll1OCv/39ZkP95gS
v+5bOQWHep5POfuJQ7Q+2kSZyajWiW2vjP7EnnOOTx41R0bKy1bXleZ/ZKv6
bnWmW2WUEnG0YeKmj9y+oz1o1TkZRS1tfJmj+ZEXWQvJrY9l5FU50zkwoYm/
F2rZFr+RUdaRv30Xzm3i9uULrX4qySmnj+LKiZ8aWdB599zDTE7DQ0/9PeZk
I4sbSw8YCnISy++NGj+2kdOklwYoLZOT7NaQjZNlH9hr64adltvkFPzVWH1q
4AdWih1zJ/ionPyM9g+cZPmB+yVbmBvHyWl818nOIfkNbNozce7rB3K6bWPS
TdmvgUMCCj6X5Mhp/rmhWU/MGnh9vFNHR4Wc3CrPK7vnvufrPZqOzG2S0+ic
l6FvfN9zUa/z7S/a5TS5ysFvrMV7XmGW+3SzSgWVLwoqWV5Yz7/1PRkxSbuC
VPoWfFwQUM/5M5pXWxtVkIJmXwudEfUcp28yZK5pBVner28PrXzHU+NvDD1i
VkEDt0/Qkh59x7mbvuc3D6ygqW1RfUvoHT/InpK8w6KCbtcP/xXSXMf673qF
DP7v+33Xx1/4FlPHSRV/z/nev4Km7wjW1nWu48NWU1WbTCpomOuwraXqdcxH
Q9u7G1SQdEYP1elcy8enVIXYaf738wbSPi5bazky1XPOZcUK2ny+pF+vobU8
7835j7+3ySnXQ+v4itc1PDt2ybzKOjm9srugNDu8hreMnOZ1p0RO/uc0BuQ6
1rA8cKbvnQw5nR147kq1Sg37+JSlVCXJyexW4voD/JYHzXA5NiZCTlw0evoj
37fs7n8o+v4+OelqKIz1tX7LhTb1ERs2yCnfw35iamM1W90xXjp3npzMbTX+
CYqv5jV7XAtWW8up/7WYjtzV1SzZ3GJ6Q09ONirD9E6bVrPqtCO7fm+R0Zxw
9c6y8jdsPObZtPf5MipN9dcJD3/D9zJCm6sSZLRr5ODk7EVv2CIyzcTgXxnN
FUIct+i+4aJtS3YcXiGjgJJHHofzX3Oi+rhq+7EyMhgsO6x37DXXv95hP11D
Rn9VpDv1cHzNA3S7Uk5WltPEuPBl63q+5pDS6sXDkspJVfZeXHauip0b1Hz0
A8rJJ6in9V3jKp5+LHrLfMdyujnZM7IkopJL3C5Kao3Lyd72fNyDvpV8NnXZ
b69qyyjhgXuPv6IrOCZSUdU8sYyemnaG3jWv4J7WlmuKtpVRlPHRYVnxcjaU
LDdomFhGrVeDMg9byTlpXIqep2IZPX+i7vkrWcYnDzlsdckopbu7vcf1Hi/j
pcMrVqfuL6WAY8nOssflnGfraRZmX0qW9flqgkM5Gxtf13yvXErpjlsj7fLK
OHBC0olUUUpcuGRT9ZIyzlbZNU5/l5Qsm/KbjF6XcmZ16NnWMVK6PHzVmbfr
S3nRxDMeqz/+N2+dxrdPbpVy3nn5+tVxJTTqfNaNwf5SnskK23+4lJD+5j//
Oqcu5W3bD+220iqhe2nh90NPl/D1uIA9Ck9e0diL4w9om5dw2zuVozu8X9Hz
M4fO9kx6xW+GtBdeMH9Faw4bZf076RXL2o8E+xQWU+KqmR07JcXsGtfQohDw
337przzo3dJitu6UbJ9uVUyZfzs5PKsvYve3/QMcpUWk7tZjjaFvES9wu37Y
JLCI0i/4hhWrFrF10MUht4cUke5unbZf4YXsGev4o29BIQUt1L9+zLKQ2zbe
ueq6vZD8U+3qgx8UcKmj9Y+dfQrpYGpY3etZBSwNMr2zUyygPU/f1Z+T5/Pm
UO8Hbm4FdMPr9oSUTfn8SNj8+Y/uBeSgJhkxUDGfR3eOW9Dtcj6d7a8zQz74
JX98HFiTZZ9PK6oGfjV2zOPY9Wu3mrx4SWvtLYSurbm8rdKwLrnbS2qJbVAP
iszhjoRj21ZNzqPA6/NmxmZIuOPXqdNjt+WSk0ZKh0tTNg+9EJg3KSGHPqf4
jIgxzGavplNp+15LyND3UOd24QXfXDilt4GehEJMWo8Wb8jiU0t2JnTaZdOX
kEW6t8Oec6OFmvNc7xcUstg3Uyf9GWtfK9TsdTGLduvWfqpvzORZatav5uY+
p8a69W9H987kSxHTsnt/f0YnXiZ3fLbP4MLpE438Bzyju+nSKCPvp5xil/zz
0MxMMgj4OS4++gnbjGzNnOWVQbnalcKZvHTefWRloSTsKf1kr3HvforsFZB4
zOThE/pxzu/SsWEiZ76dtWN6RTo1X1zU3/jOY+5+KbrP8i6RYiS7ht3VS2O1
+dt6bfivVr2dYXO+Ycsjtuy9o/5bwGNauvtl6s3CB1yvJ/kpcCrZ6uyQ/rC+
z4efehRkdzykbzu9Zj4NvcuC0fCWpLEPaGnALF+lttt8X7dRScvrHvn5Tim6
ueQWx23se1vhyh1qm+dXyPeTWeFosORi5S1K05j91cokiXe/qOnbS/+/PrFn
wBFZRwJHlIUfXTUjiSiyNqYl/Sobjjzbx+tbAv35aKPLiQOXWbdons1fy65S
Zmzv2ph5Mbw/6e3mVI6jmXuyAo1/i2bvm4EtkgGX6FJodWNW2lmuiT1Vua97
FG0NC+9XPTeUo8Pn293IDKOrCwr9H6ceZEe+4qimdoQe05n6nal+7Nx0OaVB
bTf2+f9/4fuE7zN+nvDzjN9P+P2M/5/w/zP+PsLfx/j7CX8/4/MRPh/j8xM+
P+P5EJ4P4/kRnh/j+RKeL+P5E54/4/0Q3g/j/RHeH+P9Et4v4/0T3j/jfBDO
B+P8EM4P43wRzhfj/BHOH+N8Es4n4/wSzi/jfBPON+P8E84/434Q7gfj/hDu
D+N+Ee4X4/4R7h/jfhLuJ+P+Eu4v434T7jfj/hPuP2M+EOYDY34Q5gdjvhDm
C2P+EOYPYz4R5hNjfhHmF2O+EeYbY/4R5h9jPhLmI2N+EuYnY74S5itj/hLm
L2M+E+YzY34T5jdjvhPmO2P+E+Y/Yz8Q9gNjfxD2B2O/EPYLY/8Q9g9jPxH2
E2N/EfYXY78R9htj/xH2H2M/EvYjY38S9idjvxL2K2P/EvYvYz8T9jNjfxP2
N2O/E/Y7Y/8T9j8jHxDyASM/EPIDI18Q8gUjfxDyByOfEPIJI78Q8gsj3xDy
DSP/EPIPIx8R8hEjPxHyEyNfEfIVI38R8hcjnxHyGSO/EfIbI98R8h0j/xHy
HyMfEvIhIz8S8iMjXxLyJSN/EvInI58S8ikjvxLyKyPfEvItI/8S8i8jHxPy
MSM/E/IzI18T8jUjfxPyNyOfE/I5I78T8jsj3xPyPSP/E/I/ox8Q+gGjPxD6
A6NfEPoFo38Q+gejnxD6CaO/EPoLo98Q+g2j/xD6D6MfEfoRoz8R+hOjXxH6
FaN/EfoXo58R+hmjvxH6G6PfEfodo/8R+h+jHxL6IaM/Evojo18S+iWjfxL6
J6OfEvopo78S+iuj3xL6LaP/Evovox8T+jGjPxP6M6NfE/o1o38T+jejnxP6
OaO/E/o7o98T+j2j/xP6P4MPEPgAgx8Q+AGDLxD4AoM/EPgDg08Q+ASDXxD4
BYNvEPgGg38Q+AeDjxD4CIOfEPgJg68Q+AqDvxD4C4PPEPgMg98Q+A2D7xD4
DoP/EPgPgw8R+BCDHxH4EYMvEfgSgz8R+BODTxH4FINfEfgVg28R+BaDfxH4
F4OPEfgYg58R+BmDrxH4GoO/Efgbg88R+ByD3xH4HYPvEfgeg/8R+B+DDxL4
IIMfEvghgy8S+CKDPxL4I4NPEvgkg18S+CWDbxL4JoN/Evgng48S+CiDnxL4
KYOvEvgqg78S+CuDzxL4LIPfEvgtg+8S+C6D/xL4L4MPC+DDDH4sgB8z+LIA
vszgzwL4M4NPC+DTDH4tgF8z+LYAvs3g3wL4N4OPC+DjDH4ugJ8z+LoAvs7g
7wL4O4PPC+DzDH4vgN8z+L4Avs/g/wL4P8MPCPADDH8gwB8w/IIAv8DwDwL8
A8NPCPATDH8hwF8w/IYAv8HwHwL8B8OPCPAjDH8iwJ8w/IoAv8LwLwL8C8PP
CPAzDH8jwN8w/I4Av8PwPwL8D8MPCfBDDH8kwB8x/JIAv8TwTwL8E8NPCfBT
DH8lwF8x/JYAv8XwXwL8F8OPCfBjDH8mwJ8x/JoAv8bwbwL8G8PPCfBzDH8n
wN8x/J4Av8fwfwL8H8MPCvCDDH8owB8y/KIAv8jwjwL8I8NPCvCTDH8pwF8y
/KYAv8nwnwL8J8OPCvCjDH8qwJ8y/KoAv8rwrwL8K8PPCvCzDH8rwN8y/K4A
v8vwvwL8L8MPC/DDDH8swB8z/LIAv8zwzwL8M8NPC/DTDH8twF8z/LYAv83w
3wL8N8OPC/Dj/D+cVxJa
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-6.4816115116406765`, 
   6.4816115116406765`}, {-0.4554125529313456, 0.4554125529313456}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483943284903302*^9, {3.483945670095839*^9, 3.483945672999289*^9}, {
   3.483945816929749*^9, 3.483945825987019*^9}, 3.4842156734668617`*^9, 
   3.484224242150696*^9, 3.484309254320442*^9, 3.4843131278461847`*^9, 
   3.48431437065812*^9, 3.487485492332634*^9, 3.487502906469698*^9, 
   3.4875030399032307`*^9, 3.487503183460688*^9, 3.487504437336874*^9, 
   3.494224261001101*^9, 3.494224414136538*^9, 3.494226861848843*^9, 
   3.494847161852453*^9, 3.494851390067387*^9}]
}, Open  ]],

Cell["Now the Cauchy transform is innaccurate:", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
   3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
   3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943867662326*^9}, {
   3.4839457186196327`*^9, 3.483945726756151*^9}, 3.484028109723958*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"f", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "\[ImaginaryI]"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"t", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}]], 
      FractionBox[
       RowBox[{"Erf", "[", "t", "]"}], 
       RowBox[{"t", "+", "\[ImaginaryI]"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.48394329305892*^9, 3.4839433207561693`*^9}, {
  3.483943369247134*^9, 3.483943369334272*^9}, {3.483943752798101*^9, 
  3.48394385506581*^9}, {3.483945710626296*^9, 3.483945715975523*^9}, {
  3.48750302701962*^9, 3.48750303770638*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "7.330480702706643`*^-6"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4839432977574778`*^9, 3.4839433210960817`*^9}, 
   3.4839433695202513`*^9, {3.483943750665978*^9, 3.483943753659663*^9}, {
   3.483943802607685*^9, 3.4839438554225607`*^9}, 3.4839457292338247`*^9, {
   3.4839458208271217`*^9, 3.483945828194581*^9}, 3.484215674548518*^9, 
   3.4842242434907093`*^9, 3.484309256897737*^9, 3.4843131281374826`*^9, 
   3.484314370865389*^9, 3.487485497348207*^9, 3.487502906678142*^9, {
   3.487503038466999*^9, 3.4875030408637733`*^9}, 3.487503183672113*^9, 
   3.487504437544902*^9, 3.494224261235811*^9, 3.4942244144271307`*^9, 
   3.494226862053484*^9, 3.4948471631299067`*^9, 3.494851390390834*^9}]
}, Open  ]],

Cell["Two half lines do not have this issue", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.4839457382352133`*^9, 
  3.483945746684516*^9}, {3.484028114370496*^9, 3.484028128222385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hf", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Erf", "[", "#", "]"}], 
        RowBox[{"#", "+", "\[ImaginaryI]"}]], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"ZeroAtInfinityFun", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Erf", "[", "#", "]"}], 
        RowBox[{"#", "+", "\[ImaginaryI]"}]], "&"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.483939025709505*^9, 3.4839390685119143`*^9}, {
   3.483942375519102*^9, 3.483942512044262*^9}, {3.483943230770582*^9, 
   3.483943230935996*^9}, 3.4839432843875647`*^9, {3.4839439741905317`*^9, 
   3.483944002209663*^9}, {3.483945753620615*^9, 3.483945756144388*^9}, {
   3.487503044279628*^9, 3.487503049549366*^9}, {3.487503093449812*^9, 
   3.4875030959370193`*^9}, {3.494224387491355*^9, 3.494224406937554*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd1P83E3ocx/FpSJQkctzcKd/TtxuXUo53zJex60vyZaWYLze3XOberm+z
uqealBSrpuumWDtO+RLO3bKT4fORRSmTmGVbVlrXtUq+3NwQbrcf7+Oc53n9
B6/1CYzw75cQCATq5/7bTym/i0hSHu5+H7E1s80T8mhfT5C6TuAsBbl0pPMA
hOd4V8deZmANy4qR5Z4O/XprC2ya4jFuDyo+9ZIFqfmhs0xeFHaQ/zK+vPw0
NN3YY/FrRCheyXHekBdVDM3kK6bGY/44dXRcwtpTAlWxQ8EHmN7YOui91sbv
GtxLrg3Ryd2FFfyfUMTVG0Ckx37cauOOt/IpXVLzm+A3Wh+TvdkFPyYnXxoy
qwV24grDgqgtGAJkPzR0N4CoPrVdcXMDjncOIC8dEECFnFT6bNweJyXIuqvs
RBA5+6hbPGGD2a7xay80NUF4ZFaj3vF12DeFKKT+1grauMXhnjdW+ODzTOZc
bBuEMI+sC2dbYq/XpBkmtx0CDBl1RP4afJci9R8Zuw/kwuERvNkM24OZdvrw
AyBN2+Zlm5hi0YQLX6j7CAJEXTXnd5ngGd950cHmbhh0bvE84rcCN7daJZX7
PwG6/m1pULYhDqxKEvrf7QXCFwaYu3d/soVrH2SHfTor6dHDGQIfvnVDP7QN
bAu1f07Edm+Vl1dvHIBCuiyebb0ECx/dsqwqk8N8a0TN3SIC5jiN2K6cewZj
0+rhi6ELiNeXX6f1UEDZqgVa1P05RMkR8S2pSvAT60Z7ZM8gBzXvvv06Fdip
OzbN0/9B0QOpuYa1KpBxk/3Scz6gXdL1vUqNCj7oLIp2N08hjv7F7dMSFbzb
Y3BBbjeJAh0qwwupKmgN2aHZWT+Ovjv0JvgSSwl/HZNNauvH0KG9usEb6Qq4
MsO109vxFhUNWnrW6wyCLFBwmzkxivyvu1iUpsnhSqPkU6V8BM1m1ngm3JHB
yYLcvLQ/X6N6E4nLcU0fjJ47GOf2lQYVLOwdP7XsKdwyrp2QMIZRBytfWvTN
E7i3f7ctWfMCCf9YXoE6H8Oxk8lA1Q4hOjlpIij6IZg7+jSE7lahM4fy8wys
OuBH09dv2R2DqH8n7edEUjtkUMaNKTlytI84ZUJLxBD5hQw9iFq8MzUohsY1
m7xaovuQq8xxKTFTBKYCoYXyWC/K0KNZ15UIoETnCK+0oAcpWl5UWrs1gKfG
QyCPfowcj0oNGJxqWGb+auh83EMUdVgReKKoEsTczDiP6x3IXuAVohvGg8Wp
JsFtEwnKnJM0iVlXwbVFP3i5sA2xh0ib1IVceOPEzmMaIVShszi/uroY3DiE
p736YqTd7hyipp8FtwzfGE2kCPkItptWzZ8EnBgW8OpvAWq2TaemqXIhNbU3
NOFFA5rNsjFjfDwKXcvK3Cqca1EBYWVdjyoFqpk0A/X6m0h8IoNI6U0AJ1t7
Fp93A3FudaoN02kQtOpOpy/1Gko/Xb1tyc4QMDIt9/w2ogSVnbFkKDjeEDip
N8SNLkaUupjFmT4XUCvNlG3lp5GPuXa60cgGasyzal++ZKGeSOPg9sMrYHVd
n9kZ93QksV26peLspNc+GjXlXecB5G5gFJPh1u0V3ule+PmHUFhhmnec03kv
wv/8C9xHViY=
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxF049fC3gcx/ENy2pxVuIhJKud6uRHp/Rjjz4pS+yhMa1FrkWnXK5bRNaI
pFCEuFKusxKP9Msimn5+v8sUpmVqTa3fikvqUcrQTd2dh8fjno/H6/H+C95L
dws4e6YRCATWv/23+n1XpRbKHOy99g+ZpSbJPTFg8ajF0xP4ui6MV9n7xJ0T
s64g6HcBPrCO+X15xIh7M2lhMq1iF+64kRW5imoEEafZE6Icf+wsjxNc1C+B
iutb5x/3Y+N3xPyb45JVUOV1xWT2sDe+aePqFkcHyA/q3LxTtA57AjcjTrEJ
asOKfIlH3LCxeFz0oIAL04ODPq2kOWGSXe6MRSXBwByQBArtHXCrQ1xVgXQv
JITMMkr2X4EJeoYvr3w/SCURD9vybLH1ePq22mohZGssMl+O0PGN6rXpwu44
4E4oGipHaXiXQYaV+eVTwOEeLiMds8RB9DvN8bdT4C1/qrdxcBE+S1lsvsf5
MviKwi05CQvwqtPXlF4XMmCDkeD29Nx5uFD1Q1MIUQxe53rfYPu5OMVM+0AS
mAsWOqtE4RwTPJPW+slnOA82SJ8WprjNwaVLSD1MdjG02lUzwpmzsG8hX/ed
4g4EGxQrNwmN8ECYBdkx4j4QviLjenlD0sHMchBu0SfJG0mYdU+VNrm9BmQt
q9n0jum4muw5aK+Vwblg9a6EJdPwiqFoszMv5fClxq+w/AIBs55vVK6nPYZh
XVfvJfYkeqaYRTEpUUAWdTLA/9HfaMdnHyU9qhGYlTN4LsLPqE3HzLUsVIF1
V93yL8Ef0c4pv6ggcROo08KYkTEf0G7psZOOp9XwgTgl9agaQ1/YqhkTHA0M
bSWf11i/RzifnJw79hJqfJ37XCUjiH/QdkV/YBv8Fat+/1YyjLj9B9zIJ7Rw
5XOaNcn5Hbo2Ef8iJrAd1BtLi0WjA4goXGtOftMOV8rk+puaN8jKJ3SimdYB
8clHEn973Y9WXuihUagdMHD2J76jeR+SKY1tQ8va4dbsolG5oBcl3FqjEy9o
h9odHlZefd0oWZjY2+yphdj4MGC97USsn7tWDrm2gdkyzxK2RztKpTuo51Fa
4VeT/ncJda0or5wV7l+lgUM+I7N9YjTIdvHrZQ68FuB+pUZmJ44/jn7VDGXz
lrtX85oQW5bRarq3CUxK783XxqoQ45BdFWVQBenE8JzM5EakC8fGUfufA6PP
pVTDe4ZaouqEuskGMDR71ZnCf4JUnBg7w9UKqEyL5rtcq0NKoYPpL8cew9RY
RWnxHDlKTX1UuXDwEfxYbbDZ+J4MWZ7Pb6CKHsKgTUKiiIJQWGi2L9deBo6p
hBcqg0p0NWq++17jGnA8tD6wjytFRKrVa4VRBeCQLRtejZciooA/LdC/DCIi
VOzd3SVIsp8yNjB8F54aZjlm2xWhWqcCr4w8CRSIAshdS/NQ/5Y8m08zC8DG
in40N+c6yn6wukWovwGbqPfr17P+RMIe05N74rOBYiJmrPFLRyJDYtAH+0zY
+J7Umca7iMbuikOpgkvQpZ2rlYlPIZWPqw3jVBIUmh0u6uk5irLGBODNigPT
201zzzhFovyQbWe8WQdgewBr31D9TiTQ8yl9jGDg1Dudi5Yx0MfmRbGeLh7f
/vG/fwA55FHM
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{-27.309073119326918`, 0.}, {0., 0.45525097325401215`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd1Pk7FHgABnByJEoSeWx2lKOka2Mp5fF+3cesIzmmFOPYbFnGbusaap9q
pKxiqtHaVOTxlCM8O5N5MohMlDKSxmRmMqVprank2GxIVru/7fs87/P+Be9n
dQwj+NsFampq1Pl+3v8nuMMxL7XVGUF5Sa5RNqdddtOoCW879sJRRy8ixaHL
ZXlNr9FJx2QILRduKjk17lJlnFb94kUWukP1/dsOLIFCZiRrvXICbsaqyXo9
C/iOaw1wwgvgUxMxN9VrBz3DK85fhxSi+KQpQ8p2hd+ymx0e1EtIPlG5ZcH2
ANhYWmeVlV4F+3qHQjeZhkomTUex+hoER1M0fHpi0Lmo2KHEthq5aktruuUJ
SEzsCYx5XofpNAsjxodDaIkN8n75FxeNlsnUJHkmHFI8IpShfLhxtxpWzB6D
A1vtcY+2AKqttgEK+im8tmFlM/Vuo0R9bnZ5ZQHsm7T9F/NawRqgbFDkcTA3
0cC9YSBE6oywQZB1EQJOapTT5XZYc10CNINKscj45cDpqPsIOyD1PZpfDmel
E1cS/hBrD4l0GOxKFKofLC3K7Ya06Xm5uUMdDLk8E9nhHqRo0cxrCrmoX7HB
pSm8F/bitQs1UvkI/Tdi3AubuznRL0CKz6i+T4YEuzUmDGixLfje8NUbVns/
nmyn/RhLaYPxWre6QCLHyf052Tpm7Th8LB5U1QDo7nFjfuH3cWcPsXRXPgfv
98Ultzse4rp+9ZiQMYj2rBxR/lePMPzLviiHL5TI/bRr9PiixziWm5md9Mcr
1BoI7Y4oe3GhXvixXDKE6dQq55ibYoh9uTeYY8PwumxnUpQkwYUpjpXWtjfI
7zd1rlXvx5+HxeOq2hHs36Xpv54uRXPANuX22lF8s/+1/7ksGd7u1DkjsRqH
75ry4DyqHO/V5/ikcQJs7bNbJ4VyiDnxnskZ77FDtLpHppTDStG+YZb+N8L7
EjN1q+XwFGiGO6VPYY2i9K71KjmKl32ihd2dgU8Gv8yUKsPIpGLwbOAnlPbm
1KicpJhtDqm6la9G2DZDlktnniKPLo5mmS8gvAfXTSuKJWjt2xJo/UyDWL2R
nV++vg/pQR9PCbu1SArXrcy87gn+e4UO4ezaE29i3wu69g2RX7ou8a2I43nd
6kG/bZPzQc8lpLHZLO6K1yN48zurTu8wIFMes/x9jV2gTFpmpxsYEv6YXRlP
8wHc8waHWjYaEWsYqSYP3IO3LqNGo2wFueUj8hoauYsA5sFVwSxT4vKKMsXk
tEEVNTfY/dqM7HuWypyJbEVwaFq91pFVxCNBg0f9tRmh0w+6BGMWhGUfvfJM
QwNKJJSip6PWJC5G3FVhxQe/NrFNem0dibb1dl/YxwUrdolubtgmAm/xd3Vd
dfAcro1I32hHHrrHnxswqoYGPfLDZgtHsrnMp1NkfA134qsD1DN3EGnZD7dD
Ll5FReSA/16mKzH3e6ey8LyERvcLhvojXiRxeFSYtbMQDVd3mvwcEkiWsm3X
ZYcVIDEncJpZGkbWSH4aXTzvwhOtlbkWDdGkpc2v4Pi8G8EZrpWR5xlEmWXG
SJt3JZv25Ril8yhJk7oXDc278zHhNz5FVEq63oVs/uzSP7ceMSY=
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxdk/9fy3kcwBuW1eKsxENIVjvVyZdO6cse3m9liT00prXIteiUy3VD5NOI
pFCEuFKusxKP9M0imr7t1TKFaZlaU+uLUlxSj1KGbuq+/XbPx+P5eP4Fz8W7
hNzdU4yMjNh/+0//D7fe9Vy0nIk+NS+I9XLHsC2QvXewfgcSGgTUXmYIWNxu
mn3GdR/KD916xod9AAotDxd1dx9FWaNC5MOOgy7dbJ1cfAqpfT3smaeSYMMH
cmca/yIavSsOowkvAdVczFzln45EJqTgj06ZsJF2v34d+3dEdFuc3B2fDfa2
jKO5OddR9oOVLYThBhSIAildi/NQ3+Y8+8/TC+CpSZZLtmMRqnUt8M7Ik0Bk
pJqz61UJkuynjvYP3YWa0M3rX4+VIpJQMCUooAxcDq0L6uVJEYlm+0ZpWgEu
qUYv1MaV6GrU3DV7zGQwYJ+QKKICCg/L9uM5yeH7auNNZvfkyOZ8fgNN9BAm
RytKi2cpUGrqo8r5A4+gMi1a4H6tDqkIZ4ufjj0GE8vXnSmCJ0jNjXE0WakE
Zq97qZb/DLVE1RH6iQZIJ0XkZCY3In1EjVnU/udgXnpvri5WjZiHHKuoA2oo
m7N0TTW/CXHkGa0We5qA9y8aZHni+OPo181wyHd4pm+MFjksfLPEmd8CP5v3
vU+oa0V55eyIgCotWC7xKuHgdpTKcNbMobZCbHw4Yr/rROwfu5YPerRB7XZs
6937CiUTiT3NXjq4NbNoRCHsQQm3VunF89qh/+wPAherXiRXmTmElbVDfPKR
xF/e9KHlF7rpVFoHXClTGG5q3yJb37DxZnoHaDaUFotG+hGJWG1FedsOV76k
2ZHd3qNr4/EvYoLa4Y9YzYd3kiHE6zvgSTmhA5mfW6+HZBgJDjos6wtqg8Et
lPNauw+oJp+SnDv6Ej6SJqW4ahR95ainjXO1oEkLZ+2L+Yh2SY+ddDmtAbuu
uqVfQz6hHZP+UcHiJmBVTuO7E19Qm56Va1OohizaRGDAoz/R9i++KkZUIwzp
u3oucSbQM+UMqnmJEr7K/AvLLxhh9vMNqnX0x3AuRLMzYdEUvGww2vLMSwXI
W1ZyGB1TcTXFa8BJJwdisyFJ0UjG7HvqtIltMvjvCgquVzQkHcwshxDjYtVG
whT3h1tTXCLvQ6tjNTOCNQP7FQr03yjvwHrp08IUz1m4dBG5m8UpBmu9bSIx
yxxPp7d+9h3KA+9zPW9rnGbjFEvdA0lQLqw3Fd6emjsHF6q/awolicFPFGHD
TZiHV5y+pvK+kAHvBJM9jQML8FnqQqvdbpeByztcRj5mg4MZd5rjb6cAb1zZ
UDlCxzuNM2ytLp+CbK115sthBr5RvTqdeBUHUknkw7Y8B2w3lr61tpqAhNAZ
pskBy7CRgenHL98PrH5JEOHkjFud46oKpHtgakjw5+V0V0x2zJ22oCQEasOL
/EhHPLGZeEz0oIAH+cGdm3aI1mIvxMuIU26EKu8r5jOHfPBNew/POAaCiutb
5h735+D3pPybY5IVEHmaMy7KCcBuijjhRcMiaCbPT6ZX7MQdN7L2raCZAjdm
bUHwr0J8YC3r2/LIYVli4MIR66cn8HV9OL+y54nMsPeq1FqVg31W/ya30SbJ
/gKh9lHM
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    ImageSize->Small,
    PlotRange->{{0., 27.309073119326918`}, {-0.45525097325401215`, 
     0.45146842406322535`}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{3.483944002785182*^9, 3.483945756595428*^9, 
  3.484215675966221*^9, 3.484224244656814*^9, 3.48430926232192*^9, 
  3.4843131282566957`*^9, 3.4843143709805603`*^9, 3.487485499772729*^9, 
  3.4875029068286858`*^9, 3.4875030499862547`*^9, 3.487503096206262*^9, 
  3.4875031837939157`*^9, 3.4875044376718388`*^9, 3.494224261375012*^9, 
  3.494224414555359*^9, 3.494226862179187*^9, 3.494847164555499*^9, 
  3.494851390518271*^9}]
}, Open  ]],

Cell["The Cauchy transform is still accurate", "Text",
 CellChangeTimes->{{3.4839390146664467`*^9, 3.483939024027082*^9}, {
  3.483942378074213*^9, 3.4839423900825872`*^9}, {3.483943303433009*^9, 
  3.4839433179061527`*^9}, {3.4839438416962843`*^9, 3.483943926840757*^9}, {
  3.483943957482317*^9, 3.483943966338396*^9}, {3.483944021092628*^9, 
  3.483944053909815*^9}, {3.483945762422402*^9, 3.483945768341103*^9}, {
  3.483945834067512*^9, 3.483945843273717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cauchy", "[", 
   RowBox[{"hf", ",", 
    RowBox[{"2.", " ", "\[ImaginaryI]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", "I"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"t", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}]], 
      FractionBox[
       RowBox[{"Erf", "[", "t", "]"}], 
       RowBox[{"t", "+", "\[ImaginaryI]"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4839440057568483`*^9, 3.4839440417939987`*^9}, 
   3.483945773513974*^9, {3.487503052765167*^9, 3.487503061528363*^9}}],

Cell[BoxData[
 RowBox[{"5.204170427930421`*^-16", "-", 
  RowBox[{"1.3877787807814457`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.483944009612321*^9, 3.4839440424574347`*^9}, 
   3.48394577400075*^9, 3.484215677874202*^9, 3.484224246990508*^9, 
   3.484309264501794*^9, 3.4843131284756002`*^9, 3.484314371179937*^9, 
   3.4874855014805527`*^9, 3.487502907035556*^9, 3.4875030625154543`*^9, 
   3.487503183996852*^9, 3.487504437893962*^9, 3.494224261567959*^9, 
   3.494224414746834*^9, 3.494226862374874*^9, 3.494847166857052*^9, 
   3.4948513907310534`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hastings\[Dash]McLeod", "Section",
 CellChangeTimes->{{3.4835340750892677`*^9, 3.483534080262928*^9}}],

Cell["\<\
We now setup the Painlev\[EAcute] II RH problem, for the \
Hastings\[Dash]McLeod solution, cf. [Fokas et al. 2006].  \
\>", "Text",
 CellChangeTimes->{3.487504199735875*^9}],

Cell[CellGroupData[{

Cell["Setting up the jump curves", "Subsection",
 CellChangeTimes->{{3.483953701595611*^9, 3.483953710979085*^9}, {
  3.484028171889319*^9, 3.484028176356489*^9}}],

Cell[TextData[{
 "We want to solve the RH problem\n\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalPhi]", "+"], "=", " ", 
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", "-"], "G"}]}], " ", ",", 
    FormBox[
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", "\[Infinity]", "]"}], " ", "=", " ", "0"}],
     TraditionalForm]}], TraditionalForm]]],
 "\n\nwhere ",
 StyleBox["G",
  FontSlant->"Italic"],
 " depends on ",
 StyleBox["x",
  FontSlant->"Italic"],
 ".  Then the solution to Painlev\[EAcute] II is\n\n\t ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "[", "x", "]"}], "=", 
    RowBox[{"2", " ", 
     RowBox[{
      UnderscriptBox["lim", 
       RowBox[{"z", "\[Rule]", "\[Infinity]"}]], 
      RowBox[{"z", " ", 
       RowBox[{
        RowBox[{"\[CapitalPhi]", "[", "z", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}]}], 
   TraditionalForm]]],
 "\n\nThe steps we need to take are\n\n\t(a) Define a list of Fun's which \
represent the jump curve ",
 StyleBox["G.\n\t ",
  FontSlant->"Italic"],
 "(b) Use RHSolver to find a function ",
 StyleBox["U",
  FontSlant->"Italic"],
 " defined on the same curve as ",
 StyleBox["G. ",
  FontSlant->"Italic"],
 "This ",
 StyleBox["U",
  FontSlant->"Italic"],
 " satisfies  \[CapitalPhi][",
 StyleBox["z",
  FontSlant->"Italic"],
 "] = IdentityMatrix[2] + Cauchy[",
 StyleBox["U,z",
  FontSlant->"Italic"],
 "].\n\t(c) Compute ",
 StyleBox["p",
  FontSlant->"Italic"],
 ", using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"z", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{"z", " ", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", "z", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
   TraditionalForm]]],
 ", which can be found by integrating ",
 StyleBox["U",
  FontSlant->"Italic"],
 ".\n\nTo setup ",
 StyleBox["G",
  FontSlant->"Italic"],
 ", we first choose the Stokes' multipliers"
}], "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
   3.483705035021916*^9, 3.48370505871178*^9}, {3.48386865553936*^9, 
   3.483868664306522*^9}, {3.483945868466632*^9, 3.4839458976675*^9}, {
   3.483946948265936*^9, 3.483946966226915*^9}, {3.4839859710810966`*^9, 
   3.4839859847064037`*^9}, {3.483986567458593*^9, 3.4839870685762787`*^9}, {
   3.4874886025917883`*^9, 3.487488604558551*^9}, {3.487503082781644*^9, 
   3.487503083763979*^9}, 3.487504193758354*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"I", ",", "0", ",", 
     RowBox[{"-", "I"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "4", "]"}], ",", 
     RowBox[{"s", "[", "5", "]"}], ",", 
     RowBox[{"s", "[", "6", "]"}]}], "}"}], "=", 
   RowBox[{"-", 
    RowBox[{"Array", "[", 
     RowBox[{"s", ",", "3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483534098191519*^9, 3.483534121288732*^9}, {
  3.48353417333419*^9, 3.483534197611909*^9}, {3.483534240389817*^9, 
  3.483534336682715*^9}, {3.483703230389113*^9, 3.483703230749571*^9}, {
  3.48370501565246*^9, 3.483705015970914*^9}, {3.483868794234153*^9, 
  3.483868795550787*^9}, {3.483885462418798*^9, 3.483885470030558*^9}, {
  3.483985987215592*^9, 3.483986004481682*^9}, {3.483987074007008*^9, 
  3.483987077156212*^9}}],

Cell["We define functions for the jump function", "Text",
 CellChangeTimes->{{3.483987087382971*^9, 3.483987133711948*^9}, {
  3.4840277877691708`*^9, 3.484027788668972*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", "I"}], "3"], 
     RowBox[{"z", "^", "3"}]}], "+", " ", 
    RowBox[{"2", " ", "I", " ", "x", " ", "z"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "1", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "3", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "3", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "4", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "4", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "6", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "6", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<unfl\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.484041184550807*^9, 3.484041186691311*^9}}],

Cell[TextData[{
 "We need to construct Funs (interpolations by mapped Chebyshev polynomials) \
of the jump functions defined above.  GG returns the jump curve sampled at ",
 StyleBox["n",
  FontSlant->"Italic"],
 " points along each ray."
}], "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
   3.483705035021916*^9, 3.48370505871178*^9}, {3.4839459044037027`*^9, 
   3.4839459112109003`*^9}, 3.483986006036242*^9, {3.48398713718258*^9, 
   3.4839871889103937`*^9}, 3.487503099604124*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "1", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "3", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "4", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "6", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "6"}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4835341285876102`*^9, 3.48353430694979*^9}, {
   3.4835343464077253`*^9, 3.48353442182684*^9}, {3.483534510913375*^9, 
   3.4835345145689497`*^9}, {3.483534802707912*^9, 3.483534810938017*^9}, {
   3.4835348429931517`*^9, 3.4835348430703163`*^9}, {3.483535612045465*^9, 
   3.48353561237816*^9}, 3.4835372492972403`*^9, {3.483700379133095*^9, 
   3.483700379364772*^9}, {3.483700420086055*^9, 3.483700420314332*^9}, {
   3.483700645290639*^9, 3.483700645599826*^9}, {3.483700799133174*^9, 
   3.483700827698254*^9}, {3.4837008888982677`*^9, 3.4837008897736187`*^9}, {
   3.4837037656220093`*^9, 3.4837037662987757`*^9}, {3.4837040283461523`*^9, 
   3.483704048140493*^9}, {3.48370504381546*^9, 3.4837050439876003`*^9}, {
   3.483885472380365*^9, 3.483885481002095*^9}, {3.483986007140946*^9, 
   3.483986011100771*^9}, {3.4839871922141657`*^9, 3.4839871956224623`*^9}, {
   3.4875031014254713`*^9, 3.4875031040253696`*^9}}],

Cell["We can plot the domain of our jump curve", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
  3.483705035021916*^9, 3.483705040788938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "[", 
   RowBox[{"80", ",", "0."}], "]"}], "//", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.4835343005342073`*^9, 3.4835343022501717`*^9}, {
   3.4837040504538183`*^9, 3.483704052479437*^9}, {3.483945933997724*^9, 
   3.483945934229574*^9}, 3.483986011765085*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], 1}}, {{0, 0}, {
       1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], 1}}, {{0, 
       0}, {-1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], -1}}, {{0, 
       0}, {-1.7320508075688772`, -1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], -1}}, {{0, 0}, {
       1.7320508075688772`, -1}}]]}},
  Axes->True]], "Output",
 CellChangeTimes->{
  3.483534302436573*^9, {3.483534349730088*^9, 3.4835343708384733`*^9}, 
   3.483534424854615*^9, 3.4835345181039867`*^9, 3.4835348125478687`*^9, 
   3.4835348444325247`*^9, 3.4835356142140913`*^9, 3.483537252771473*^9, {
   3.483700374056423*^9, 3.483700380484953*^9}, 3.483700421500204*^9, {
   3.483700802364541*^9, 3.48370083141947*^9}, 3.4837040529132013`*^9, {
   3.4838687526468143`*^9, 3.483868762739881*^9}, 3.483868802336193*^9, 
   3.483885483166663*^9, {3.483945931971674*^9, 3.483945934759091*^9}, 
   3.483987208142911*^9, 3.484037379087864*^9, 3.484041195184537*^9, 
   3.4842061588992243`*^9, 3.4842242580405416`*^9, 3.484313135492949*^9, 
   3.484314389540987*^9, 3.487485041514098*^9, 3.487503071294654*^9, 
   3.4875031905471582`*^9, 3.487503827792313*^9, 3.487503921929304*^9, 
   3.487504438042041*^9, 3.49422686270154*^9, 3.4948514064323807`*^9, 
   3.5038383335806427`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The solution to the RH problem at ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "= 0"
}], "Subsection",
 CellChangeTimes->{{3.4840282161725388`*^9, 3.4840282461936626`*^9}}],

Cell["\<\
We can compute the solution to a RH problem with the jump curve GG using the \
command\
\>", "Text",
 CellChangeTimes->{{3.484028258994722*^9, 3.484028297087385*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"RHSolve", "[", 
    RowBox[{"GG", "[", 
     RowBox[{"n", ",", "0."}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.484028298346074*^9, 3.484028324735532*^9}, {
  3.484206184890297*^9, 3.4842061854543056`*^9}}],

Cell["\<\
The solution is the identity matrix + the Cauchy transform of U.  Here we \
demonstrate its accuracy, by comparing the + and - values with the jump curve \
at a point along the first ray:\
\>", "Text",
 CellChangeTimes->{{3.484028258994722*^9, 3.484028297087385*^9}, {
  3.4840283355255003`*^9, 3.484028371012206*^9}, {3.484028401036256*^9, 
  3.48402841708996*^9}, {3.484028507730563*^9, 3.4840285151184797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
  RowBox[{"Cauchy", "[", 
   RowBox[{"U", ",", 
    RowBox[{
     RowBox[{".5", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "^", 
       RowBox[{"(", 
        RowBox[{"-", "11"}], ")"}]}], " ", "I"}]}]}], "]"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
     RowBox[{"Cauchy", "[", 
      RowBox[{"U", ",", 
       RowBox[{
        RowBox[{".5", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", 
           RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"10.", "^", 
          RowBox[{"(", 
           RowBox[{"-", "11"}], ")"}]}], " ", "I"}]}]}], "]"}]}], ")"}], ".", 
   
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"0.", ",", 
     RowBox[{"0.5", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", 
        RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4840283734720488`*^9, 3.484028388205003*^9}, {
  3.4840284189323606`*^9, 3.484028534665007*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.1990877180068082`*^-8"}], "-", 
      RowBox[{"8.797996581266787`*^-9", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"3.836014839109225`*^-12", "-", 
      RowBox[{"3.0317415244951462`*^-12", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.4110403401268456`*^-9"}], "+", 
      RowBox[{"2.086675948698158`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "5.182521078950231`*^-13"}], "-", 
      RowBox[{"5.958705751041293`*^-13", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.484028502214787*^9, 3.4840285348446302`*^9}, 
   3.484037398606627*^9, 3.484037468844975*^9, {3.484206175559877*^9, 
   3.48420619291846*^9}, 3.484224267431006*^9, 3.484313146497554*^9, 
   3.484314398909398*^9, 3.487485057847604*^9, 3.487503077209947*^9, 
   3.487503196643393*^9, 3.487504444011548*^9, 3.494226868626205*^9, 
   3.494851418911973*^9}]
}, Open  ]],

Cell[TextData[{
 "What we actually want is the limit of the Cauchy transform \n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     RowBox[{
      UnderscriptBox["lim", 
       RowBox[{"z", "\[Rule]", "\[Infinity]"}]], 
      RowBox[{"z", 
       FractionBox["1", 
        RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
       RowBox[{
        SubscriptBox["\[Integral]", 
         RowBox[{"Domain", "[", "U", "]"}]], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"U", "[", "t", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
          RowBox[{"t", "-", "z"}]], 
         RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]}], "  ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], 
     RowBox[{
      SubscriptBox["\[Integral]", 
       RowBox[{"Domain", "[", "U", "]"}]], 
      RowBox[{
       RowBox[{
        RowBox[{"U", "[", "t", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
       RowBox[{"\[DifferentialD]", "t", " "}]}]}]}]}], TraditionalForm]]],
 "\n\t\nThus we obtain the following approximation"
}], "Text",
 CellChangeTimes->{{3.484028258994722*^9, 3.484028297087385*^9}, {
  3.4840283355255003`*^9, 3.484028371012206*^9}, {3.484028401036256*^9, 
  3.48402841708996*^9}, {3.484028507730563*^9, 3.4840285151184797`*^9}, {
  3.484028546318883*^9, 3.484028689946849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], 
  RowBox[{
   RowBox[{"DomainIntegrate", "[", "U", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.484028676189353*^9, 3.484028703776342*^9}, {
  3.4840288904889717`*^9, 3.4840288968933687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.3670615515960688`"}], "+", 
  RowBox[{"3.526900105636651`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4840286809526253`*^9, 3.484028704271759*^9}, 
   3.4840288981474867`*^9, 3.484037471837036*^9, {3.48420617886052*^9, 
   3.484206199216547*^9}, 3.484224268806696*^9, 3.484313146547666*^9, 
   3.484314398952694*^9, 3.487485059167737*^9, 3.4875030772613897`*^9, 
   3.487503196719411*^9, 3.487504444062043*^9, 3.494226868674984*^9, 
   3.4948514235333643`*^9}]
}, Open  ]],

Cell[TextData[{
 "In the next section, we will compare this value (and those for other values \
of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ")",
 StyleBox[" ",
  FontSlant->"Italic"],
 "to precomputed values available from [Pr\[ADoubleDot]hofer & Spohn 2003]"
}], "Text",
 CellChangeTimes->{{3.484028709936593*^9, 3.484028752759797*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using RHSolver to speed up computation at multiple values of ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.484028237986026*^9, 3.4840282543693047`*^9}}],

Cell[TextData[{
 "RHSolve, used in the previous section, recomputes the same matrices of \
Cauchy transform values for each value of ",
 StyleBox["x.",
  FontSlant->"Italic"],
 " RHSolver precomputes these matrices (for a given ",
 StyleBox["n",
  FontSlant->"Italic"],
 "), significantly speeding up evaluation for multiple ",
 StyleBox["x",
  FontSlant->"Italic"],
 "'s.  "
}], "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, 
   3.483946758172183*^9, 3.4839471604373817`*^9, {3.4840287597436647`*^9, 
   3.484028845910819*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "//", "Clear"}], ";", 
  RowBox[{"n", "//", "Clear"}], ";", 
  RowBox[{"x", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", "[", "n", "]"}], "=", 
    RowBox[{"RHSolver", "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "0."}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483704059473811*^9, 3.483704084796417*^9}, {
   3.4838686818317337`*^9, 3.4838686877682533`*^9}, {3.4838688055309353`*^9, 
   3.483868807893404*^9}, {3.48394593885419*^9, 3.483945939253743*^9}, {
   3.483945970689331*^9, 3.483945972508366*^9}, {3.483946530550324*^9, 
   3.483946532556075*^9}, 3.48394673502254*^9, {3.4839860129058733`*^9, 
   3.4839860335919247`*^9}, {3.484028855902452*^9, 3.484028861435276*^9}}],

Cell["\<\
U returns the jump curve, so that the top row of the solution to the RH \
problem is IdentityMatrix[2] + Cauchy[U[n,x], z]\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046593092823`*^9}, {
  3.483868705986638*^9, 3.483868710099099*^9}, {3.483946743988546*^9, 
  3.483946754242897*^9}, {3.4839860447345333`*^9, 3.483986048770546*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{"R", "[", "n", "]"}], "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "x"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483704136197484*^9, 3.483704177950693*^9}, {
  3.483868690332923*^9, 3.483868695300831*^9}, {3.4838688101315203`*^9, 
  3.4838688121352177`*^9}, {3.483945941608038*^9, 3.48394594201553*^9}, {
  3.483945974689599*^9, 3.483945976351905*^9}, {3.483986050759377*^9, 
  3.4839860532768297`*^9}}],

Cell["\<\
p is the value of the Hastings\[Dash]McLeod solution\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, 
   3.48386870454757*^9, 3.4839860554902554`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], " ", 
    RowBox[{
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{"U", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.483704184291832*^9, 3.483704191836005*^9}, {
  3.483704822797823*^9, 3.483704824140067*^9}, {3.4838686987902107`*^9, 
  3.4838687360598507`*^9}, {3.483868815020658*^9, 3.483868827944105*^9}, {
  3.483945944706315*^9, 3.483945945378501*^9}, {3.4839459789789677`*^9, 
  3.483945980903613*^9}, {3.483946778617774*^9, 3.4839467787274218`*^9}, {
  3.483986056191382*^9, 3.483986058645659*^9}, {3.484028881412284*^9, 
  3.484028906905645*^9}}],

Cell["\<\
We can now evaluate the Hastings-McLeod at points (real or complex)\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, 
   3.48386870454757*^9, 3.4839860554902554`*^9, {3.483987232026153*^9, 
   3.483987298264481*^9}, {3.4839882362942057`*^9, 3.4839882512860937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"50", ",", "0."}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"50", ",", 
     RowBox[{"1.", " ", "I"}]}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"50", ",", "1."}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4839882525207243`*^9, 3.4839882776785507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.3670615515960688`"}], "+", 
    RowBox[{"3.529204537544361`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.31154436990851586`"}], "+", 
    RowBox[{"0.31950280801549436`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.13564354348645602`"}], "-", 
    RowBox[{"2.3957575325130138`*^-20", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4839885400785522`*^9, 3.484037489906739*^9, 
  3.484224284195694*^9, 3.4843131728468237`*^9, 3.484314413328671*^9, 
  3.487503084173922*^9, 3.487503204188031*^9, 3.4875044512936707`*^9, 
  3.494226875487461*^9}]
}, Open  ]],

Cell["\<\
We can plot the solution (this takes half a second per point, so almost a \
minute to generate the plot)\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, 
   3.48386870454757*^9, 3.4839860554902554`*^9, {3.483987232026153*^9, 
   3.483987298264481*^9}, {3.487503458333911*^9, 3.487503486627722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"TablePlot", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"50", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5."}], ",", "5.", ",", ".1"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Hastings\[Dash]McLeod solution\>\""}]}], 
    "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.483704223848497*^9, 3.4837042316373177`*^9}, {
   3.483704334952297*^9, 3.483704349013042*^9}, {3.483704383806059*^9, 
   3.48370438391581*^9}, {3.483704535636174*^9, 3.483704536308423*^9}, {
   3.4837046850789623`*^9, 3.483704732261632*^9}, {3.4837050852631273`*^9, 
   3.483705086102219*^9}, {3.483885454205223*^9, 3.4838854562111473`*^9}, {
   3.483946157952426*^9, 3.4839461735197144`*^9}, 3.483986060767049*^9, {
   3.483987238068766*^9, 3.483987239412341*^9}, {3.48398805432108*^9, 
   3.483988057518875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw11QswnFcUAOCNrEe8rTQ1Xo3KkolXVZCKzn+TYRSJd9DQVChllAxSKqmQ
mFCtaUTS1ooiTdRbu2nVoM29Sjoi7LCyZEnFazYhXsvaRwit3fOfmZ2dnXvP
d/57du9Zq9hzIfFqDAYj/v/Xzrsq9hJH7OxUZ6PA5ZydMCYyI7/XiYty7KIM
Y3J1uaimjCvHA/07wSINbKey/Aw5TlAGiwiaAmLSXORY5bGI/hWZtEosA8+I
aF3haB5vkYFnRBoFTfOXkmTgGZIzrVuFGdYy8AxJd87tKpenUvAMidwh3e7R
DSnkGxBBL7eZ8pPCfn1yU5sbfn17HerpkdLSPxSdv61jJd+vS2oNNwfbEtbB
0yWmoyZvXDBZB0+HXGcmp673SsDTJifLR3xMv5CAt4fEHXHUHmVLwNMiz5sj
fEz4a+BpkaET3PHeL9fA0yRlYbq6fPYaeBokXiSqMRtYxUqOo05mnepti9NX
wWOS5AJvqda+VfCYhFdcUZPZJgZvNxEVj0e2h4vBUyNUroBqXVsBbxdhJY24
Bn67Ah6DKBIeX02xWQGPQdx+eb9ZnLUM+VvYJTY6r+PHJdi/iXlOIqM37y/i
d5X1NrDHwRr99ScLuEzpK3DSsjMKXnoJnhwnej1u9tiaB0+Kw8d8ugVa8+BJ
sHmcZ8TH+nPgrWHxoucnTgYvwBPj2aBTxzp1noO3gsMKzrB/YIpwrzJ/Ac/c
CenKfDUL++ewvNyhx35pBicq64nwKQ2WTf3kNH5H6c/g7drsg1L+FHiTmGUf
oHf4n0lcoswXYnHO7x62Wc9g/zBe5m2frkr8F+cp1x/iwlqK5x83Dp/bcahe
WnBlkpDuH8MxcqlzOWcUE9U6ZUlNnE37SYCrVflU/4m3p94SDmOk8qnOEL60
zZoP60LKPDBQ0Jw/SD8fVakp/DpAMoCPqJ6f4mTpnBYbPKLPR1kMt/N8o3oh
f4762ebap3jkAR5U9YfS0WwlB6500/2jvtIty++J7sIVqv5SXt+5bU/13ceH
Vf2nqhfvrR5y7YR8CWWReYtTImmDelKqPnjIuYPZSn+/VEFDT9lCzD3wFFTm
Tff9dsxfwduguO6xuIHfCN4mFWUbY5i/rw68Lar1LwNZzcO7dP9QkDfH1XT6
Nuapfp+oY4J1q6ipEu7XLhQVdLyR4VEO+Wpo42+nzaio76HebuT7nt/Ly4wb
9P1AXJ/+sSLTEvCYKNa0YuGy+zfgqaP9hVYng5YLwNNA6iudlkLvfPA00ajU
pLbNJo++v2jsQe5U2PYF+n6jvhBBxnReJpx/D0r5MzsyqDUdPG20JTw0XaBx
DjwdFBLf1cOoT6LnC7LIYesgu3h6/iC188ynxclnwdND7FTr7c850eDpo/PZ
TWaByRHgGaAncx/Jcq1C6fmHmK8uvvB3DKTnI+pz6DBt/tAXzm+IPpC5soeu
eUG+EXrNLa2rvoPo+YtaFo7Zu0940PMZHbXkRbfcdYX6LDSU5x/kFu8MHgtd
vKRITRHZgWeMjhrnHXAItaH/H1BfuOdn1sNW4O1FZhMM22cJ5vg/zycKxA==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Hastings\[Dash]McLeod solution\"", TraditionalForm],
  PlotRange->{{-5., 5.}, {-1.5719377368477114`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483704243425623*^9, 3.483704346499186*^9, {3.483704382667766*^9, 
   3.483704389280013*^9}, 3.4837045647317038`*^9, 3.4837047048521957`*^9, 
   3.483704735205851*^9, {3.483946155085792*^9, 3.483946169055881*^9}, 
   3.483946234996176*^9, 3.484314468285205*^9, 3.4875030861332684`*^9, 
   3.48750326252765*^9, 3.487504505187256*^9, 3.494226928323372*^9}]
}, Open  ]],

Cell["\<\
We can compare with the [Pr\[ADoubleDot]hofer & Spohn 2003] computed values:\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.483704683332165*^9}, {
   3.483704714076076*^9, 3.4837047698326883`*^9}, {3.483947958742804*^9, 
   3.483947975103579*^9}, 3.483987306874814*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
      "\"\<RiemannHilbert/Data/McLeodSolution.txt\>\"", ",", "Number"}], 
      "]"}], ",", "7"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3."}], "<=", 
       RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", "3."}], "&"}]}], 
    "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLineLogPlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"25", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
                "//", "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"50", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], "-", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "//", "Abs"}]}], "}"}], "&"}], "/@", "data2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"75", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
                "//", "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "=", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"100", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "-", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
                "//", "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Error in approximating the Hastings\[Dash]McLeod \
solution\>\""}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.483704899100596*^9, 3.4837049814796667`*^9}, {
  3.4839475891111526`*^9, 3.483947615508149*^9}, {3.483986064769115*^9, 
  3.4839860833364*^9}, {3.4839873369993887`*^9, 3.483987370083581*^9}, {
  3.4840347101732273`*^9, 3.484034715859729*^9}, {3.484224361262281*^9, 
  3.484224390749359*^9}, {3.484225316209055*^9, 3.484225322359745*^9}, {
  3.484313192693275*^9, 3.4843131937709627`*^9}, {3.4875033995110598`*^9, 
  3.4875034214647293`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw90A1Q02UcwPH/xnhpBeeOOAgB5SWC0URZvBTC8zfjMmgnFSSIHbgapnAa
V4JR0gKOkC6CCSIRoIaHCpTEQQrI8xBTIeNu52DUHC/Gi9yiMccGqLD14vNr
d//bfe57/+f5/36+0iNvyrgMw+z/5/n3//HPiRj5Pw/kCNzJf5Q7kvWaWaa3
zOOxGUciGCk593akJ+0ORL0ovPJLpBftDkSBdigOjvvQbk8i9CHK+D5f2u2J
euHk4qklP9p5hCe+F4xvbaadR+puZvz5lRu13I40ayqmG4s30W5HLrhITPrt
1HIuMb0Rov5CBJ1LfDqzu+/shM4hvuatAflHoXNIZ+XVcUsPdIYgTctU6RNw
P0NasvVnDNFgG/5VdIvj/RHYiodJcn18O3gdt4RKkiZM4DU8MxZxbn8UzPsI
l7sebsz7HPwQy74+tagZBj/AMv5qZZw33Qezin9wnzRWHwGvYJkYX29Sgpex
MiW3dI+XP7UFe//uEVaXCzbjxZvlAe+qwUv4u4q7/AthAdQmbK6YLMqsAt/H
Z95Lkdavgo14rG/DKwnpz1Ib8FRbhDhrELyAS9+PWlkUB1Lr8Y/3rG3XzoLn
cdXQX6+eFTxHPYeZqLmmuCLwDG4rcD0euAz+A3uFum0rPBhEPYX3pU7skejA
OszPSSsUSYKpf8OC/OZLRd3gEZz0JC+iwk9IrcIuQu1sVxF4EPelD1wc14EJ
Zq+YmlSiEOrLGL+YcOjLPDDDpIq0+sTe/ztqiD35TK0NTFD/AY5uLe55OB/V
xA90S6vBKjTd2Rg7agGPIOeS2+FrH4rg+1F3VqX2etAWmA8l39gVm7s3FOZH
yqpYh46GbbAftLGW5zplhj6D0FTM+YwMeH8OeWxWDrxVDOfPo87WDf16I9yv
R9PnL/mXloAXkJeY6z4WCTagfMXGDDcrzGdEvrtiPv1sFHwfqbqq0ww9YBP6
KS87ePtl8BI6Mcktt7WDzUiuucHP7QdbUOHR+kzFJHgZJR+QmsNd4P4VZHlN
UN6RCF5Fx7Xjr5tbwQ+QOXf2tmQLzPcQ1Y8mxgsN4EfoRE+YLSEa9rOG9Gpt
gTA9jHodrb6j29FeDN2KOMXKtDoP2J8N3ZW+ZLYlwnkMG62RjLcO0/vlDFv2
AX+oLwe+h8NWNH98qGcrdA4rS67teJkHncseC9/7vWqezivnsp847245poP5
7dhNpHd36gR0O9an4eppmQE6j1V1XRuUOsP5PLYgJdPfMwbOt2dR2U7/O3Lo
9mxSkJPfxQnoDqw1y/nbF6R0HrkD+5RdzemnA2FeRzZ7H/8bfQHdh9yRHUpQ
Ii+VmHYn9nC9Z8+IIpT8DewA9kA=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw90QtMU1cYwPHbN5ujQhxbuow4XXiIpVLGU3Tn1gEVCI6YySSCDwJlrmLD
CLA2gV2IujLjZDhJ5sajqIQRJkxKFHCeIyAPQcJLEcN0QSegUKC8RKDswfm8
yc3NL/+cc3K+uyletzeRzzDMkX/f/75rjx2xvEiXW6tcyf/kJOR4ilnoL3Rb
MyMhXXqzw5dx1JyYJOgcOyMboIuJciEsv8HZnXYRGRi7MVF8gpoREUP9uujF
SehCMtrXlDxwaAvtQlLQtNsa20/NCci5iYgIEulBu4DIRDKXqE5qjk+KRtKL
9VFbaecTk7Yyr/chNccj5/cV1W8+JqedR85cfWx/QuRJO0PkLac7ssupGYa4
3P/5bMLnCupV7M3aUsuctlHbsFXTf8dpDLyCW/xqptyOe1Ev475EZZ9UoKRe
wnfDKv3394Nf4cogU8Lq4EfUizjmmC5HVe5N/RLPxIwYhh3BCziluu+LtIew
fh7v0DREDbaA57BKMVRx4bVnsVljSGrvBc/got2FcQMjYCvWNE8XNghg/2lM
rtTgABfwFDZPJhYYI8AWfPGwu02ZDh7HyzeXzlgvgZ/jDp3y6dUB8Cg2376V
ki2F+z3DUe1bV38IAz/FlsSNM6pc8DAeunk5aXMX+C98zzc8bZ3Mh3oIF3YG
RrNa8ANcZPzgZG0LuB/n877xKVP4Unfjzn0lRuZXcBvWe0lUtbv8qAk2XApN
k3/oT12NeyLPJx2VbqdmGPX+rN/zGl93dLRnLi4gHEzQgYvPfpK6gduQRHC6
I2MLuBuF1sTmeAeD+5FVmpxp+Qr8AEVYpZFNteAhlDU1t+LjGAD3RyX1B/f0
5IOHkbM6RuepDYT5oboN34k+mQyC+aKxj7PrmJPQR1HJ986pejH4OdrAZRmf
dMF+40h9/WuZ8RrYgobfNdeU1YCn0G+u36bH/wGeRk1clZ2hB2xF782Puw9O
gGfQHXmuYtkBzptFhuZr64sDwXOoNfyFKV8Dnkdv77oXbioAL6AnYfYVuW3g
lyjHHslkS+BF1BoyUR/rCf/nFXrLI8m0fBC8hAKdNnWb8sDLyPXT2QMZzeAV
FHh9ILvdBrahJvmP9yvVML9VpAluFJVWgxn2TY/S2cnUHWvmGNbhM3mI3cpO
2nlsH66r3WkPncem/lmoOKWF9Xz2nSAn1yNvUHN89kZs8inn23C+gJ175NmY
eY6aE7Chbe9vz9FBF7LrLa3jF6KhC1m3UueMTDV0EZtyeNutX1TQRezfZq9p
cQh0MRvv7iRO3AtdzPpufCTx00KXsI+vVPAO5UOXsPqY4I7yu9DtWGWVojfW
I4j8Az5s8cc=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxN0AtMU1cYwPHbNxsPKWyGDRA2DA3ERBBEwcG5RqG6Rl4DJuKQEdDJJoLb
0ASWFHAJkfEQxaA4tAjWySNaA2zyOMcyBwzMKoHSUcY7QqR2gDwqFBnbzrfs
Jjc3v/u/59xzznuJpyOTuQzDfLpx//3897IgSmmVpavQm/xDuYjceSQTNwdS
MyJSFrJSbn8OupBcTWvbOtEAXUhOO9++ZVyELiBave9+pf8O2gXkTlDpk4Js
ajmfxKpDRo70QOeTgDBVSL2jD+08csruxq8z6dQMj6xqAlN9eqBzSe1UaZiz
ty/tXKJ2jdafqKCWcwindKeXbOtO2jkkW1/XfL2NWs6QlabNArsqP9oZEqcQ
tz9u3k29jn8M+83FzXkX9WucPCcVq/vh+zW8/Hv/T025YDO+lu+J7UrAq1i8
NlZhkoNX8GDpgHGqGvwK5z5NavVoB5twZnevZPcUeBn73NJJem3h/0vYEOCp
34LAi9jLJHxwPh28sLGeenJRCX6JbaXdecZR8DxulKQURDvD/uawv5P3H4VH
wbM4WqPQfF4BNuL03PCarnGwAefcXbK64OFP/Rx/qC4+UHcGPI2zRlSmPW3g
Z7i58o0v460CqCextmVMm/UJeBwfcQgmMhV4FI86LTuZLfdQD+G3IsQdxV+A
dZgf95GsYwDchzkdqqijUR9Qa3D8yMD7KfPgTswPM86VTwdSE3w3lLHu7UfU
9zDf7eBglxn6xps/q/ubCsH3UEwok2BI+G88Ss35LKM6HNyJ0nIFnOpIsAZd
0B5Kdk8E96GxBxYnerPAOlSinhkcVICHUOOLr9xtnoJHkRcvfr/OMgjOB5UE
X/qhJhI8iWKtxW6tteBn6KGy9nyZK+xnGvVs06VJu8DP0cR3jvvYIpbagJwm
vh6K/hZsRNv2HZ+x2wyeReM2flVX9DB+DpXkb7F+swU8j1yv2ruMNoBfosST
KMXlZ/ACariU7p83DF5E8T6tlw/zYP4llK1wPzXnAl5Gwb8Mb+JKwSbEVJyz
bc8Ev0IxCV6O6RrwCnq47md74Npe6lV0PyHVengH2IzyKs88Dn8C36+hEI+G
YnM1+DW6fEzSmVQIXkcRZ6Nii3LBDPtIlXr4+2xqOcO+0+f7v/PisH7d+Rlx
cJ5yDlu+XTFwvxI6lw095vlNUSt0LlvwrqRpYQI6j+1cnRXJnOh65Tx28HjQ
C+Y6rJ/PNvlzzTGT0Pnsx0kRI5F7oQvY+hoblXIV5hewwQ5vT23SwvxCdui2
1c2LLdCFrEOm1iOnDrqIPdmwa3tjFXQRa3+2rPHKTegWbL+HQZ+x4b8APVT0
hg==
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxN0XtMW1UcwPHbN+qCwwUcRTEEFioP3RydkEHPpTDGAjgtoH9sFemG3ZBY
ZDqJWFPwMVmYW1KF0DJCBzNZdIBYYZSNczCimzMraP8Yg2WAhW1dbYAy+qAP
X/d3tyZN88n3nPM79zZBpVFUcSmKqvzn++/v/58I4m5NE//lfZH8R52IXKrN
nukdY0yJyKt9aQX2y5lMFxL1TxNDWgNjSkgaf6i9Sl2ALiD7pzIq4m9BF5C2
8/Wjju/hfD6Jui37uLAIOp/sfmusqrwF9vOIKUbelbkI83nk6I6CbH4WdC7p
T5rVHS/PYjqXjCwNGGpvQueQHo3gXD87n0Os3fv/ELthPkWkspt10sOwnyKh
fbnG9GJYH8bJj1X0yyugh/D7BfqrMhP0IP7qXqlUFYQewHvCy7FqL/R17CtX
Sy7Ogf14LlX1iKUG7MPr76We0XblMPbibkt0c84BGWMPjlF+Es/vRozXcJv8
zXtPxNCM7+OnNRrJb/nQV3HjO8fEbUHY78Yzw/tqPE7wCr4k8d5Ic4OXcfJI
AW4Xwf4lbNU3rciSwS7cYzmeEasAO3GNsgmPfAR24GnJzkSbGXwHG60Lni4H
eBErS1vzNJvgvnZsQFtDvu3geTy8WmhWlYFncb32WmdFM3gG88qqXUV94OvY
1GFY2jwPtmES/25mODqX8QS2JJw89GgZ+DJu59TmX3gbTPAvH0rId8/KGffj
5/b6op8XgCnq587RXVP9bEcH563aB+sJGo3Se3adZM9HzZ+vP9U0yc5HW3Tj
fd4JsA3Fnt7SsPd12H8dHc5b9FmfAc+g9uJUTSs7fxYdUCT6vzgBnkdnto1/
GuCB7WiwJe5YxBB4EQ30bdaPPZ4H7x9tnHNI1G9AdyDhjfiH1jtR6GLiQ/dx
oVX9duUpdt4SMkZKigM+8DJqVxjTX9GBV9BQZMdnLra7kSlHkSjtBK+iW8IJ
w8bfwfcRzySdVpSA15BtoaSangR7UPXtK2o/e54XfTNsXrBs2s3Yh+RJZ2V1
56H7EdlRMpDyK/R1pCsrfPmgC3oArQ2akzR2cBB97TQHhd3gENppO9fxwSF4
X2EU2FZVfi0FTNFtcSnfimC9jqKnsmWvfZkBnUNrxqKKpqehc+jCtJeMYvZ5
uXTl7BVVyQlmvY5L6+f9lT2NcF8e7e2M5jjXYD+PvnvXbnxwHz6tTFg5VQv/
l45Pv5AuPPJjGM4X0HF7qkqLMHQB7dxAJ/7JPr+Q1m6ov5ML71cnpI9OPtk1
sARdRIsbtmqPjEMX0VkNLafP1uUzPYI2DPZG9lJ55G90NvmL
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-3., -47.5794279934903},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-48.35428695287496, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "21"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-41.44653167389282, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "18"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-34.538776394910684`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-27.631021115928547`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-20.72326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-43.63578808157987, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.947115181414844`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.54314595989826, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.25621267070872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.033518658624374`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-41.85149690695933, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-41.69756042869657, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-41.56418971736105, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-36.72803280259773, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-36.0393599024327, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-35.635390680916124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-35.34845739172658, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-35.12576337964224, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-34.9437416279772, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-34.78980514971443, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-34.656434438378916`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.82027752361559, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.131604623450567`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.727635401933984`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.440702112744447`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.218008100660104`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.03598634899506, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.882049870732292`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.74867915939678, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.912522244633454`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.22384934446843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.819880122951847`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.532946833762306`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.310252821677967`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.128231070012923`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.974294591750155`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.840923880414643`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.004766965651317`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.316094065486292`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.91212484396971, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.625191554780171`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.402497542695828`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.220475791030788`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.06653931276802, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.933168601432506`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.09701168666918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.408338786504155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.004369564987574, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.7174362757980335`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.494742263713692, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.31272051204865, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.158784033785882, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.02541332245037, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-48.35428695287496, 
       FormBox["\"\"", TraditionalForm]}, {-41.44653167389282, 
       FormBox["\"\"", TraditionalForm]}, {-34.538776394910684`, 
       FormBox["\"\"", TraditionalForm]}, {-27.631021115928547`, 
       FormBox["\"\"", TraditionalForm]}, {-20.72326583694641, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-43.63578808157987, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.947115181414844`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.54314595989826, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.25621267070872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-42.033518658624374`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-41.85149690695933, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-41.69756042869657, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-41.56418971736105, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-36.72803280259773, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-36.0393599024327, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-35.635390680916124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-35.34845739172658, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-35.12576337964224, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-34.9437416279772, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-34.78980514971443, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-34.656434438378916`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.82027752361559, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.131604623450567`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.727635401933984`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.440702112744447`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.218008100660104`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.03598634899506, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.882049870732292`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.74867915939678, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.912522244633454`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.22384934446843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.819880122951847`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.532946833762306`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.310252821677967`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.128231070012923`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.974294591750155`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.840923880414643`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.004766965651317`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.316094065486292`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.91212484396971, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.625191554780171`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.402497542695828`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.220475791030788`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.06653931276802, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.933168601432506`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.09701168666918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.408338786504155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.004369564987574, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.7174362757980335`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.494742263713692, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.31272051204865, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.158784033785882, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.02541332245037, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Error in approximating the Hastings\[Dash]McLeod solution\"", 
    TraditionalForm],
  PlotRange->{{-3., 3.}, {-47.5794279934903, -5.7670355403122215`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-48.35428695287496, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "21"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-41.44653167389282, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "18"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-34.538776394910684`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "15"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-27.631021115928547`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-20.72326583694641, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-43.63578808157987, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-42.947115181414844`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-42.54314595989826, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-42.25621267070872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-42.033518658624374`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-41.85149690695933, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-41.69756042869657, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-41.56418971736105, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-36.72803280259773, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-36.0393599024327, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-35.635390680916124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-35.34845739172658, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-35.12576337964224, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-34.9437416279772, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-34.78980514971443, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-34.656434438378916`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-29.82027752361559, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-29.131604623450567`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.727635401933984`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.440702112744447`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.218008100660104`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.03598634899506, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.882049870732292`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.74867915939678, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-22.912522244633454`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-22.22384934446843, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.819880122951847`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.532946833762306`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.310252821677967`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.128231070012923`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.974294591750155`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.840923880414643`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.004766965651317`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.316094065486292`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.91212484396971, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.625191554780171`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.402497542695828`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.220475791030788`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.06653931276802, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.933168601432506`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.09701168666918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.408338786504155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.004369564987574, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.7174362757980335`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.494742263713692, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.31272051204865, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.158784033785882, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.02541332245037, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.483704942615612*^9, 3.483704951120318*^9}, 
   3.48370509110963*^9, 3.48398748935837*^9, 3.484037871463777*^9, 
   3.4842242937283688`*^9, {3.484224358766386*^9, 3.484224383377935*^9}, 
   3.4842246960324583`*^9, 3.484314846342731*^9, 3.487503358666337*^9, 
   3.4875033953955812`*^9, 3.487503447296482*^9, 3.4875035769371233`*^9, 
   3.4875036828406897`*^9, 3.487504852835619*^9, 3.494227255096567*^9}]
}, Open  ]],

Cell["We can even do a complex plot: (which takes some time)", "Text",
 CellChangeTimes->{{3.484028931838593*^9, 3.4840289357402782`*^9}, {
  3.484034225672072*^9, 3.484034245112227*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TablePlot3D", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"p", "[", 
       RowBox[{"50", ",", 
        RowBox[{"x", "+", 
         RowBox[{"I", " ", "y"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3."}], ",", "3.", ",", "0.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3.5"}], ",", "3.5", ",", "0.25"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Hastings\[Dash]McLeod solution in the complex plane\>\""}]}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.484029070089178*^9, 3.484029150781715*^9}, {
  3.484029194790024*^9, 3.484029198715837*^9}, {3.484029312394601*^9, 
  3.4840293160548162`*^9}, {3.484032592800659*^9, 3.4840326027261868`*^9}, {
  3.484034236403985*^9, 3.484034242089651*^9}, {3.484034671189992*^9, 
  3.4840346885909033`*^9}, {3.487503500673008*^9, 3.487503520541003*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
lYVehZwaEzIR6qBAo5i6KdGc4QvxgnyoswrFMftSiAQnpebP6sL+qtEHZt+L
kbLF3EcFh6BPtKgL01elKKxP+ItqAdCHOmTN9G0ZOh09vvs068OwX/gf5row
wZKgKz4Rs44BzsdJzHVnin9E9r0/5NgJuK4xe12b4YKERcoo31DAhXgOc98w
x2c7J8pyap8DXIQbMfclC/y859bTprcvAi7GQua+Z4nx+foXo6SG1y/u+x2c
UBS3s95wc2zM4X2zaWRuoWnt3Wurft9UcCJvbWNfeP9zGmk7cXS3ombwPuQ0
sm/6LQ+v3P/H+T3N6b+/RTTZs7aPrh84T1PPO6bWO1TfzcD/xOv38zMB4xZa
joLndZrRm0ke9jYHAfc0oa1Ml9St9vbP95WeQo4f3/qy1Yal8JxQDZnqdPO8
cp0acCXpHdTUS1UIzzmVkaCljbdMCfnDDfPS58kYZpJzZwTMI0Ot71eK5+al
JB2Wtbxquw/mV6J/0ljjapB6YKU6DfPS1zP5yvmOg38VQh3wnZLFFTpU6Ia3
HmPpJsJZ/PoV+nuaGTgNfjf57acIcL6knpd96WleN6UY6CBD6l7W9XbPh+dm
mlFr80Ol80QwjwmV3OwwqCX3vTOnD0oK6da+626YR0PsLiaPXvzQoL+AyxOw
tVaLo5lQHw2aN9WnRogS5lESn0m9ps5tA7mMtHAOfbo2rhByNGJgJc752QSj
li+7xlyD53Uq0TVvVn4N+rGvUv0VPscjraLvrxpVRR9c82AlfQzz1dcpm1Cr
xpiGhcDnItxwVN96nYrheaBm2I4cZOgvwtuLKvfR1MDpteeOH/OF4BxGPe+y
eItDaK9iY5/o9Vm4wX3uQ3947qQZ3bnP1+WRJzj/Ud+vy8lT5tpz55SZcvHS
QTMD2jnB8yI1ZPGj44/khnNPPPlcnuZ59g1uL1KDeCWR+28efX0irEdGFBs+
XwzOgOdsytD6TZW4QQf9uOF2P2omyQqN56vvy4O8Nd63msM6lWjaNta4GjT1
daX6ufkqSfpdj+vd4Lmf+vzBaZX0McxXX79Tyr74hh1h/WZ4/gKWziKs2125
XyYGTpva83btdQbnFer5xXOrurT31wAdZGhXB+nFoDB4bqMZLZt94MNCAcyj
34ejlHYhzoa+mHDxtfaPGprzEvZdiXofsO0q/wLza0i8w4hWzQz31XvyuPwh
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
aQ==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
jJ4U+ZGdJwqfLbhUcduj05Y+Mw4WPq30uXp45H0n6uF8i37ymuDM0rxtVGnZ
/GbQ6azM9cALJqru5zLLdPr2TPTvtpDfyO7nM+vE0PYLESYO3ZGy6JJHlS5z
cOk60U3oN/EPxVjgozNClpKOLoEuc0VuPe/K0OMWR18Zy8IYz9vBZ0hHh0En
QQebFeOAh40sfYcwpPTdEnTdUfBM6Tsl7pqgb+TjehFP+g/I4dx3VW8JvynY
K8LwinfZT5r/V4JWlwdPYD8tC3qEFqkbetkuaOa53PuYfUJc24inbxtE/9ZQ
va8pvUvNYe5muAtCdnGHgpxgTMgI7pLOiLSLSqeR54FIfyryjAxef1bQ6Y9B
q+jn6OHcKb2a+05pefDm9aP/yAv6hv7wem4+/IbwzaV1pZ1qXodbY526lb6X
2Bs9QrinoEfmO4MzMt8bjFQdpwsODro/I2i/qeqaJVlziPAfqvsgxf0ZPAze
DS//KzffJv4S8ZeJghGC6wTXC84W/Ky0vsrzCzJC34MEowS/5l7fX4JP9Iw6
B0YfzmQu1P5o5b1D+DHBDQrPED5Faf0EJ8Mr1L/z4Rca4wjhiYIT6ZO+L6lk
Kw+8EyoODw84oeK4sdEm47lUcJngJEFdtXETPLmwnnNUxTL9pKibvKso7Ubh
OsL16GfkvzTyTIw858KXCu9Z1mtoxXrC3sKvhL5A/9Glvow2vov4oZH2Rekw
8rdvjLtftEP+A6MsaW8Lj6qYJ58lmJs859cl1zM65uqDyPeL8Kel5+Vr9KDS
8g1ZtmZu2bxWbvnHWM6rOHx4fDM3yGvGc3SEiZvJ/FS9h9CFSEOPZX8Mr3q/
0O8+MQ72A2N6v3Cfz1L6vGQ5PCLyUW5ClD0x4kZEf+jXEYFHRxhZhE57fOyH
ETHGf0rPIfN8rtrrqfrOE16muCeYZ8HZaruz4kcLNxfuImghuF3fFwjfJ3yy
8CmCfqSr/Gsq11l4XcHVCv+tMVULz3OlsO7DfruoYp36uAivqT38r/J2446F
c0vF35S9TuG8cH/ox/GcQZRvG4VHKjxaafsqfL7wBYLtIny+0vZHPxQ+v+o+
HykYo+9Nmb/ksRyl8M3CO8f4GOfU5HHNjrbOUX19a47vr/grhY+mLsGFgk5V
z1WzgKYRB23WV9ndax4DY+EMMi7WhLVZTfG3CDcQXkMwRuHVC6/PpIpp/QzV
dYjg9KrPK6dEWlH4XFMWXlPot6r6O+n7x1iLJDgn8jQU3Br1Hxz1Ue9xgmMF
FwnWVNqFytOocB/p63jB/0rjf4XXCH7YSPhMlTlUMLDqvh8d+79+7jPUarnL
wnO+Ks1nKQvfHc96CsZV3SZlqYNzH99/Cd+h8QxT+pTkdmgP2oBnXym4KvbU
2NhL46JOygwLGuDcAo1DS+i3H5bWyd8QXqfwXlxPuEnu+toWPjMuqPgcujay
AD6g8GrJfG/VZB75gGBRxf0ZGX16RDC14jMwdbDu97EGKnOFcEr+Jv7aimnl
3or3/TUR5py5PMq/UnFbN0Z7LYPPblo4bUHU/5hgRsXn84M0/gGC0wTbqL3n
Fbdtcniewk2EN1H52VFPM8FMhZsXPn/fL7ih4vES3ijO0AsjvkVhmdI8yiJP
mvIeW7gPhJcKvyt4T1CHewfF7am5bFx4fpjzNZL3f/3k8IPUKdwoeY+zn7lP
eJh+Ju/fxRXfZTAPdwhvJtxKMEfh1sJLhG+v+Jy5pb7vEt4q9v4tUf7hyLMk
8kyOsm0El0d+zvusTy15TV6KdZkW68v4Ni9Md/Rhu8Jzy/5hTzCWmyveY5RZ
P+TqooifH3VyF/OC4EXBPYLGnAeUd5+a72pYW+4cpsbe+m9el8Y37bLvto05
fzT6SF3zou6vBd9EG21U1wrhneJeh/l5puL5eya+ZybziKuFN09Oaxx3SG9V
fDf0huDNGOdDMa+kzUjmJ7cJN0veV2tGPU8ztxH/uMJbCD9V8To+GXPDHn+9
4rsgaKCd8GbJ9bM37oz8lOPMCi3DXziTnV3xWZTv4ZFO3DkRj3wn/Gvptt6I
/t+VzI8eFM6T90bD6Bt9pk34BjwRPsb8jFT+Ocn8E955cdX9ZE46JNMBNMk4
X61YPkJLs2OsjOGDSCcfd27sx41DviBbjhF01Lr+wHoVBsJ7KU/7ZHnNHK6j
vdJBaT2En1Pc3Irv8sB8Q//Q4fuxP1YEDbxTMY9gLPCMdyKeflD/h8JdYq3o
K9+91M63wtvzRpOsN7RKDjM2+OSiWEPmd2GMn7HTX/LDT1skrzW8hTDzs31y
2szIy9jZAzsW7vfSGEd7fX9X8ZjZb2PV94Wxdmspbo+aZf0uzCN8I/k+Z1ay
bjBWefopzyaK61p1vgoPyoINBA0ErQUN43vDSG8aMr4QrCFoI2gkaCtoXLX+
Qbkto+zhyeFTk/NuHfkPgx+yvsJHJNd/bHK9ebRD2dWRr8nfxG8UbdDW2sju
ZDwkuU7635s5QJZXrScN0ncrdDXhoegE6ELCB+j7c83hLsIbK24VQa3qspTb
VnC00krhvsn6EWWbR3yz0MeOSh7XyAjT7uAo1zzK0N8/Ku5rNcaRxxxuFfPY
MZku2EtdC++fnQvHf0wYnTSZR8FD1tX6dUf/q1kvOzVkHnQzNmjntIgjbVfl
/UVldytc9q2g06eDl3wadPnJ//v+LOiffq4eff0y6Am62jV5XPsJDy6c/zDh
vQvT0l7CvZLXfHCsNePvkxz/P+XpEfKZer8SfFExX2Ztdi+cZ4/CbfUU3q/m
Ofg88vUoTM/7IF8Fv0W7zNVnsb5rx/z/LuiXvB5DWa/C7bIfDs39Vj4w93vz
cZnfvA/L/YbN2zR5eN8fFHlIHxdnbfJzDz8ms40B97D9c79XDsh9h3+ewruX
judtr1/ut8a+me/rCZ8c37yDYpvHW+ARgtGZbZ0403PnP1ZwUG4bhYNz2wTQ
B/rFuz82MoyH+H0j7di4Bzgm8vBOP4i7gNx3AtTDmwL5N4r+DslsXzAgxtJH
8VuWzt9VeJfS492rtP0C76t9on/HRlu8RxC/U+l316Exnj65x3mg8N9ah78E
62pt/hVer2oeAe2uJtii6jjS/qn4m/j6goOT8UHIo8Ly/ljhIYXp8AjhA5PX
f9/gA+wz4terOW/vmvcO+w0a/i0w/KAesk2wedV9XKfqfq4a8aR3Kj2OrVRP
l9J38bwLX5D5jZhxEzcm9kaXSOPNmnnArrJ33G9x3ucO4Ovc99rcnzOuOmpn
WOEzXEtB3ehHk6rnr118079uyboPem+3wnIZ2mft2BvYYn0atA7Nkx/6646O
H2ekm+J8yRkZnWZycvgSdMPCvOU6zmGFz4CE9xHeu+qz5b5R7rgoC09CLzoV
WoU/oW8mnzs5azMmxrarYJzS2tMWZzHBbgpPEx5ZWKZQ9urCvO+awjoD9feo
+q6Au4beVd83cRfF/dOESDtBcHPh898t6OOF25xSeFydok7iB0W7G9WcfnDN
Yzw62jog6hsede4c87ZhzXcDnJevEuyn8KXC1ySf0aYJnybYQeFzhE9GbiOn
Cq8n67i9YLy+u9GG8HBBd8YmvH7NuE/NZaGTk4Q7BN1AK2cXlk2jYn5YE87t
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtm3UcFlUThbfuvgYqYYsCgiipgCg2Kq2AIKFiECqKKCZiF3aLndhYiB3Y
3dioGNjd9dnfeTjzx/zec/fevbt7a2bOzNtm/JTh+xRZlk0vs6zS7936/VC/
CyV3CbdLWTZSeH/JhsKnST4QvkN1GzWyrHedZZ/kWbajbh6u8lcqv6oO75J8
IXyc2p2u9qdJjhVeoGtzVXe55BnhiZJVhP9VHzsJj1f/N0TbddXfnuq3ofrF
JJOEn5WcJXwm9wvvqnuWF/5D948S7qn7J+v+oZKuwi+qnzVVV+r3Y7V/Wr+b
q/yn7vmocv9fq/yVZA/hbdTHn8IrqH474UGSH1VeWuWtha9Xn+1U/kPlP1Ue
I1lK+AddGyB8u/r/S8/+O8ZomK79o7qVC3/f25I7hV+J8VmFcVTbjSUthZur
/02EVxNur++/Xr/vqPy25Drh72t/zxKSb4X30bXjGC/J3sJjJRcKXyQZJ/yk
vukGPetGyWPCW0ve073vSrYSnqI20zP3sZ/wEZJThE+WHC7cp/bYvCjZXHgr
vd9JqjtUdT30fgfoWsfCY7Cj8BzJocIXSB4VPlXtblH72awB4S30zF/U16+S
LYVP17UXVfeC5Abh9XTPm6rbTHVD1P92ujZNdQdLRgsfJLlK+GrJ1NLvP1P4
StZo6fG4IvM1vudu9Tdd73Kb+ttZ/e2YfP+Bquuu8loqj8n8jI7CA9Tudz3/
f5KBwndKrtL9V7OmKz//BLU9Pvo4SnK98CzJ0cLr6Hkv6N4vY7wO0bVrVHdt
jNkTunah+josxucRyTnCL6nv8XqfE9XmJrW9WXJS6fn/Tfh3yY3C26rdX+r7
b8k2ws/p/it0/wOSF2rvj5uFb5E8J3y/5Frh6yRzK/d/pvo6Q3KC8GzJH8J/
Sm6N8nvC70puEZ5V+tn/k9zEek6+n3frqfe9LPl+2m6o8tn6/VrlbyTnCO9c
e+90kowVnqRrl6nucslewg/pnU5V3SmSByuvL9Yee7iv8OaSQ4V3Utu11f+h
6qNH4T0/WXh7SS3cVrK38Lpqv2fmOdoieX19KfwV3yy8r9q0K3ym0P7c5Pc9
i7Wn/kfrWlLdrnqXbVW+WL87qDxGconwf/o9XGM/VpLpnqT204SbCTfUvqHy
RdSpbV+V/9H1w1Q+VLKSrn3CuhPuJlko/Iaev43wZ5xLar+k2lyu8hWSJsy1
ro/hfGXOS5c3E96UM0z4g+R3OULyoXBe+fkXSwrhJDlK+EhJJXwdZ0bhMb+1
dv0lqrtUUgt/KmkRz6R/3neI8FD6F36q9PnXVvKR8COSz/S5n0oeFl5Nfd6j
utclrYVf0rW1cp9ZnMWU+wj3lcyjP73z2sLvCffW9z+BHlI5SZ4UfoB3UN8f
S+YKn5P8vEeFN2n4TC+izxfjfQrO+9xtNqx91j0s6Vz7/Xvn1gHoAnQAZ3m7
KL8r2Up463inXyWjhbeT/MbalgwX3lbyTen9dbLuP0lyn/BTkjOET4/zlvMX
fBr7XXiW5FLhyyQ3CH+h79k79xp4X/j15GfvyRmdvD4Y+8lR/2Lt/cyzdtH3
z9HvTJWvjDPuldr7H904TvXL6B1n6N5zJU2Fb66sezkzbon3OVr4KMkTlb9v
PbXtiU4UfrC2rt1fcqfwB2pzj/C9kuuFv1ebEWo7UvKD8I+l8SjJT1HeQLhX
1NMevL7kuxjfjYQ3lPxSevzQVTdJHhe+Wt+c5Z77jfU9YyrbGx9LdmC9qn6P
3HP2jvCfkuNzX/tW+IHaa/1htR3b8Hlzvcqz4tr1qt+v8JzxfYwn+uI49gfj
qT4Gqq/57Dvdv4nafKjyE5J10d/Mv/BJ2AzC60puF74Dna97mmEzCK+q6wN1
fwv0icpXS5YV/lv9nxB4APPF81U+Dpujcv/XCl8nWZGy+rs79x5frLY+x/bB
ZhksvJSuzYx7+6u/lfV7Te4+eL+69lrohi3Q8Puer/J5kh7Cq3EeC58S79xD
7V/L/cyWwp11bbbwrZIuwu1q7y2+aXnh9rp2k/DN7Hnh1Vn/wqdJ2lSuP1P4
DMkaUX+D8I2cKZXHi299nOcLr4W9l/se+qNM37dIOlR+n3OEz5Z0El5HMkf4
tvjGprXH+hHGT3iF2u9P260abs94sEfWFl6p9rehw7vUHg/mb5aklfDGte0n
xnqbOK+PVfkYyRLCi1fGRzM/wptKfhL+ObdN00fytvBbue0f6rF33pBsUtk+
om4+Z5Tw61pDnYQ7Sl4TfrU07iB5Bdu29lgtjPW4YeWzlznbgL7UpgtnX6zh
9XTtO+Hv2YPRf3/hAbxDaftnAXtJ0r+yPYPtNyfGo33tsWQM1hYeUdkWwcYd
Jrw3Y6C9s4Skp/AStXUROqGJcFZ7PTDXgxq2j7H9R6k8rGH75gPOOsnQyv3z
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
D7dKLG6mpEmyr7Ji2B/w6XDxV0b9UbXjIcQqzqkcozujcsyH2M+xtWNRq8Pv
Cu8jaVM4RkaZGNhRlflfYmPwl8SymCPiFeQ/dQ/u9TjJ/iqvUTgmxXidWTvW
Nz3q8UHa2cxcxJ8TbyF21oozWHgvyWqFYzCUyZEjjwSf/b7a+Wlw31Nj/Min
I/a5h+RqvqV2/IjY0/aV872WKRzzJl+SmO7IKuLDvHtt3wqOvG9tvhzufF6U
h6NLMp9vw4T7lbb1emDvlI7/ErttwRzV5kcuKO3Pwv2Qs0XcjvjdtpyHtWPv
TdV+SO14MLHvJoXzNUdgwxTOJeH9yWGFV4dfX7nhGP+Qyj4ivuIukmaFcxjp
b9NkX2iHOM8n6VrLwmvg4Nr+PrEqctseqLw/yC1hzREfO7d2bIs9ciVnp2Ri
4RwUxhf7aEJmGxv9zH5irY+O9oP07cMz21j45Csn++K7xnlFjPaaynuKvXVe
7dgqe+Ja4Xtr5y7tJZkV+4e9RQz5BmwtyaTCMfBZsZ9YC9vH/X1K59puE/MD
BwQXxB4iv4z48+TCOVLw/cSnyaWbFv13Kx1LIkaDD8H6JbbAPcSr4d+xNfqG
j9C2dCxo9cw+KvmV2MLYzPjIG5e29bfO7HNg49F/9+Aqepe2jbHp4Rng0+HC
8Enhbzkvyb/dNHMMakwyVwWHBL/A89HV6BR4zQ6SLTLbOB1L29vkkm4f/jn5
ofgC5NQeWdoe4nvgSLA9ub89a4czEDurNGbPti+dPw23BSeJj09+7nWZc07p
D5ukW3wLtgrfj78FXwJvAn8J90Vsm1gA/sLRmdcU9jb8Knw/+gK9gb5j7RwT
9jLxDvhUOGw4C/gXxpYcS/yLS0pz83BKxBtYD+xV7KUtS9cTi8DmvLS0fzQl
85rtEfbRVvGu+N7r6XdgZptpg9L26k/xbug21gt7oX/Mac/Supl7epW293l3
OEa4Ruo7Z7b31y2dD4gtT27voMr5qLRnTOAk8A/JdSfHFb4f/3Ud4RaSPPl8
wncczZ6L8edbl5NUyedt21gbcEEjStt6B0n2Ff4dHz7znNGe/cXeI6Z2Tu0Y
OLFw9uhqwr8JN888pzyfnA7yGNAhM2qvF2zfLWL9DCltb8DXwNugQ9Alk6J/
zhfObnI6zhA+tbaunxhlziPOlhmhv+Bj4E6w8bH1sTl7Rd/YojyPMpwLNs7g
ZO6JOcb/HV/alzs8cz46PjOxMDhMfOndS5eJoeDDku99rvB5sYd2LO1b48PC
eZHfTl/46LtEPXwY/jF+Ms8j9x3/fELp/vEtj4xn4tOw9uAc8XXQL5xd+Dv9
S/OHcFe8A/Ebzle4ip5xD/N5Tmb/fWRpH562cGL49vBzvDscG/El/EnyschN
2lgyXuVlC+cwob9Y7+QOdI71yxj/XJoDWxD2PXlscJIrNJzDRC4T+V0rNpwf
S34kNuyDpfkq8vaIyS5e2x/oWNmGx5bH3m9X2WfHd5+ZnPsNR4f/g/7bqXL8
uHfob/JCyA8ZWFsfkvtGvuGWtf8fga7fJL4P+7lZHjFD4eeSY0H4VPhW+MPN
c3Pu2OvYA+h+cia7hT4mlwUdOq52vBjdMTf0J3wauZLk9JW1+bhGZRscW5x8
M7i1Kvgy7IEJlePb5HaTX/xFZn/68dL8EnFq4tXLCl+anAvEO+KvY7+R10J+
y8m1v+Hb0vmrfBt8B//zwGZv2jA/TJ4dPkJz+PnS/iw+PTnexM9eLm3zY/tz
JnM288wzk9uTCzwsfGD+A9G7MicHN0e+P7GZW8O+5jy4tLJOXZT71XBeDTZz
q4btdeJqxNdaN2zf3V7ZhsOWI35DHiw5Oo/XjjeS90wO8ovhbyzKi1F924bj
beT6E6M7L3n94DsTyya+RU4euXlwjis1HD8iF5kc4mdrx4/mVbYpsS3nF471
wp/Ao8BfkOv7sfq8Ijme9EblGAmxEnIqyK3g/0CrNBzfZFwZ35eS49ufZN4L
8CPwJ+SBkw/erOH4KrGeZuHfwWeRKwunvFzD9tuqODyx/rAXOKvRAZvF9/Wr
bINii8K3wr2Sk7xR7fxMuApyKsnXZA+xl56JevwDcv1WDfuQ/9eQb0Zu0cTK
a5S1ik+wp/BBtXNDsKn5/wT/d1qusA/A/x/w1w6pnE9CbiFrkrW5cu74K/48
vjs5H5vW5vexbfjPC3wD50mvyjYxtjFrEt95XqzVv1S3SuYzHr4QvhjuGZt/
/dp8BrYvNhN8Hv4AudlPRT3+DLl95EeuCpdS2zZ/Pt4HHwxfbMXC+R5Da+cz
bxX6mXwzfDNyYw6qvB/Io8Wm3wB9WXst4APtV9ufwrdKMX74m+TKY+O2aVi/
nl/ZB8IXYswYO2z6CcIja9v++ES7hb2P79Al6pkP8g0PjPdhPe5V2YfBl+H/
KPy3ZI+YT/JZ+Db+s8P/yfi/GL4HOSf8Xwp/lLxQcu6OY+xKc1f854L/h1Dm
vyJwHB+UzmHZr7JPiG+IPsEXIsdoj9p8CrG+LPiF65LXfuvgS6bVnotloz3+
I7724jF+9E+uDPmULRv2D/EVixgP5of/RrEG+b8d8X7WGjkq8BX/B6rE1uc=

         "]], Polygon3DBox[CompressedData["
1:eJwV03loz3Ecx/GvbcwY5maOmatmKdnKpmjMMS3X2AqZ5fjLTcl9ToyalWZi
Eo1ylYwcpdj+kBwbNkLOkr+QI5Hz8fnjuf2er+/r/fl8vt/f95c6f3nBspgo
inLQEqX+NPlfHRtFR9AhPooaW0XRKaWbcVF0A/V8jt5RvaU6SzCF/0FZiyjq
odMbCXqf0dr1l+ZTXLuj80x2mb/UeYEB9hgre+/6fL4AM/ho3TX2KDRfhFG8
Uj7LbJXOAfQ1WyiLkRXzuUiWNcvOyxp5A/rLKmQFst18F3bwafhl36l8CnL5
WgzT28y3oI/Z7eE8ssO8Gvt5HSplTbwZj/ix8Byc+ZLzXkSS2SLZQdk8Xoxx
/Lpuudl6c7dwmx9CiewEr0GK2VzdTWYXmFuIRFmJ7KRsI9+AdrLJsr2yrXxb
2IeX463sKr+Go/yOPY7bo9b6F3CV12Kr7BQ/jX7WO62b4LnEm2uJDzo/ZNtl
iTrt0FVvk3yE2T28HGU8CTV63UIHsXw2EvSW8MXoZXavLF+2nq8L8Aw8NDuC
Z6GHXr7sm2wMz0E2r3KWT+7toLNVYSffgnuycr4Pm3kiMmUTeR768NXm0+y7
wlorw7tqjxT5VL1cnbFoIxul99q+03UKMYkn44Isgw9Hd72usjOyQXwgusli
ZBWyND4EnXmTPSbLXoXfA+7xp5gp+xieMTqbrZOly5r5Y3SSLZKdc749vAzt
ZVnWfKo33voT0FP2VW+D7K/OP3SR5clKza7iqzGTtzV7RK+1uXj8DO8U4mT1
OnXoGO5NNsbsYD4Isbwa32Un+YnwrHk8hsqy+chwH/wWhlvvDX+H++G3Ed5r
vd7hu8BvfsVZdvk+LofPSLXvXd1ss190vuIJT0ae2UyeEd57PhBFsul8Gtqa
LZM9l53hZ1HJYzBYNoSnI0GvQTbBHg94I+r5f18Llxw=
         "]]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkMFOAkEQRHtn2Vl/waOJ8BV6Ab+Am15MTLzikb/jrMiZgEIMHlBMXAgC
CzdfpefQqeqampqevnh46vaCmV1SObVsmL0hPNPU1G1mdgQ/0a7g5/BjNLuH
12AVnK/BF87a8CH4Rc4cbQTf4LtG30bvpRclb1J36PPC7Dvl6x3l/4J56dmd
zHMz+j36Fv8uuvYHnnLP15wHzvvwHdjEvwIPeAbcaaJXaQZl7uEBz3twvSr8
v/KvmP8HfQHWKVPZ4+A5kYwGd5fBc07RPZpNORv0WPq+9K8P+inVgs/ASeLS
NJv2/Yj/Nc2mGbUfvX+T9Fbarfa54N4Z+j/0GUh7
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtkbFOAlEQRee9t+zyFSYm6ldIA3yBHTQmJrZa+nf2qDWhIWhAgairLuBC
x7mZLSZ778ydeXNnT2/ur+6imZ0QGTGDXAazDvEK3uRmC77vxBa8Iz7AS8Qv
yewfvob/EmXLrCIe6K3hoTCbwofBcwe02+hYuQqc0PzwvYbvqT8xswvuEc/J
ezbUP6PPquFf4O/oeu0j7RKeMauCz8Fv2glcEufUx/BIvU7ubwVfZe5P743I
31LfJ/cujbTa5yL4DGlyNH/0DkLjN7oXceX71A/Jc2eFz1Sf+h9bfkPdUh7k
Re8NmnuoTzndQjtJK1/yp1wJbhf+X7Sj/Oneu+g30q3y5i3tPIl+j04zW7sd
AeLwUwo=
         "]], 
        Polygon3DBox[{{1774, 731, 1254, 968, 1470}, {1797, 732, 294, 971, 
         972}, {1893, 968, 730, 740, 1779}, {1860, 1249, 746, 739, 1778}, {
         1782, 345, 1015, 1256, 1829}, {1501, 747, 1257, 1249, 
         1828}}]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rtO03EcxuFfwQJaEDzbiibggDdASHTQQW+gDDroYC+gMsAAg14ALjDo
ALthgUEGAY9gPdAKrYfJQDwFLNgGCIEoDDyNDA+f78vQwz9tSd1JpiMhhAES
1SE8NvKUaD8QwqGqENq4Stq+rXcZ4pH9RL/wmT81IXzSj6y4C5qn6J7XOT6w
bOc0y5J7Vt/zy/1O3/KGn3ZGX/PdPaPTfHO/0pe8YNF+rs9YcD/VKb66J3WC
4crr+Lz3NMU1+u0LGqPs+ybtgo7zkLjdp7e4wg/P57zWUPS8RuycjjFIl92j
N7hEh31OK8/XW4RVr+dfQULJn6j6iKHsrtU6DrJWee4aY91drw1suA9rI01s
2kf0KFvuY3qcbfcJPckp/tqnNc4/d0LPsONu1rNcpNOHu67d+7+H+/aoZvlN
xo76Mq1cZte+qb08iPz//ewBe3FO8Q==
       "]], 
      Line3DBox[{774, 726, 1794, 731, 1254, 730, 740, 741, 748, 749, 1795, 
       751, 750, 743, 1796, 742, 1255, 733, 1797, 732, 729, 728, 774}], 
      Line3DBox[{1786, 761, 1250, 762, 763, 764, 765, 766, 1791, 767, 768, 
       769, 1789, 770, 1251, 771, 1787, 772, 773, 775, 727, 760, 1786}], 
      Line3DBox[{793, 738, 744, 1256, 1829, 745, 752, 1798, 753, 754, 756, 
       758, 759, 1793, 757, 755, 747, 1257, 746, 739, 737, 1800, 736, 735, 
       793}], Line3DBox[{734, 792, 791, 1788, 790, 789, 788, 1253, 787, 786, 
       785, 1799, 784, 783, 782, 781, 780, 1792, 779, 778, 1790, 1252, 777, 
       776, 734}]}, {
      Line3DBox[{1259, 1258, 1277, 1276, 1830, 1298, 1297, 1318, 1317, 1342, 
       1341, 1838, 1363, 1362, 1383, 1382, 1407, 1406, 1846, 1428, 1427, 1448,
        1447, 1786}], 
      Line3DBox[{1261, 1260, 1279, 801, 1300, 1302, 1320, 1322, 1344, 858, 
       1365, 1367, 1385, 1387, 1409, 915, 1430, 1432, 1450, 1773, 1775, 
       1787}], Line3DBox[{1262, 1263, 1280, 1831, 1283, 1301, 1304, 1321, 
       1325, 1345, 1839, 1348, 1366, 1369, 1386, 1390, 1410, 1847, 1413, 1431,
        1434, 1451, 1454, 1472, 1854, 1475, 1487, 1490, 1504, 1508, 1526, 
       1862, 1529, 1547, 1550, 1567, 1571, 1590, 1870, 1593, 1611, 1614, 1631,
        1635, 1654, 1878, 1657, 1675, 1678, 1695, 1699, 1718, 1886, 1721, 
       1739, 1742, 1758}], 
      Line3DBox[{8, 37, 808, 66, 95, 124, 865, 153, 182, 211, 922, 240, 269, 
       298, 979, 327, 356, 385, 1034, 414, 443, 472, 1091, 501, 530, 559, 
       1148, 588, 617, 646, 1205, 675, 704}], 
      Line3DBox[{1264, 1267, 1282, 1801, 1832, 1303, 1308, 1324, 1330, 1347, 
       1804, 1840, 1368, 1373, 1389, 1395, 1412, 1807, 1848, 1433, 1438, 1453,
        1459, 1474, 1810, 1855, 1489, 1494, 1507, 1513, 1528, 1813, 1863, 
       1549, 1554, 1570, 1576, 1592, 1817, 1871, 1613, 1618, 1634, 1640, 1656,
        1821, 1879, 1677, 1682, 1698, 1704, 1720, 1825, 1887, 1741, 1746, 
       1760}], Line3DBox[{1265, 1269, 1285, 815, 1305, 1312, 1327, 1334, 1350,
        872, 1370, 1377, 1392, 1399, 1415, 929, 1435, 1442, 1456, 1463, 1477, 
       986, 1491, 1498, 1509, 1517, 1530, 1041, 1551, 1558, 1572, 1580, 1594, 
       1098, 1615, 1622, 1636, 1644, 1658, 1155, 1679, 1686, 1700, 1708, 1722,
        1212, 1743, 1750, 1761}], 
      Line3DBox[{1266, 1272, 1286, 1833, 1293, 1306, 1314, 1328, 1337, 1351, 
       1841, 1358, 1371, 1379, 1393, 1402, 1416, 1849, 1423, 1436, 1444, 1457,
        1466, 1478, 1856, 1485, 1492, 1500, 1511, 1520, 1532, 1864, 1539, 
       1552, 1560, 1574, 1583, 1596, 1872, 1603, 1616, 1624, 1638, 1647, 1660,
        1880, 1667, 1680, 1688, 1702, 1711, 1724, 1888, 1731, 1744, 1752, 
       1763}], Line3DBox[{15, 44, 824, 73, 102, 131, 881, 160, 189, 218, 938, 
       247, 276, 305, 992, 334, 363, 392, 1047, 421, 450, 479, 1104, 508, 537,
        566, 1161, 595, 624, 653, 1218, 682, 711}], 
      Line3DBox[{1268, 1278, 1287, 1299, 1834, 1307, 1319, 1329, 1343, 1352, 
       1364, 1842, 1372, 1384, 1394, 1408, 1417, 1429, 1850, 1437, 1449, 1458,
        1471, 1479, 1486, 1857, 1493, 1502, 1512, 1524, 1533, 1545, 1865, 
       1553, 1565, 1575, 1588, 1597, 1609, 1873, 1617, 1629, 1639, 1652, 1661,
        1673, 1881, 1681, 1693, 1703, 1716, 1725, 1737, 1889, 1745, 1756, 
       1764}], Line3DBox[{1270, 1281, 1289, 830, 1310, 1323, 1332, 1346, 1354,
        887, 1375, 1388, 1397, 1411, 1419, 944, 1440, 1452, 1461, 1473, 1481, 
       1001, 1496, 1506, 1515, 1527, 1535, 1056, 1556, 1569, 1578, 1591, 1599,
        1113, 1620, 1633, 1642, 1655, 1663, 1170, 1684, 1697, 1706, 1719, 
       1727, 1227, 1748, 1759, 1766}], 
      Line3DBox[{1271, 1284, 1290, 1835, 1802, 1311, 1326, 1333, 1349, 1355, 
       1843, 1805, 1376, 1391, 1398, 1414, 1420, 1851, 1808, 1441, 1455, 1462,
        1476, 1482, 1858, 1811, 1497, 1510, 1516, 1531, 1536, 1866, 1814, 
       1557, 1573, 1579, 1595, 1600, 1874, 1818, 1621, 1637, 1643, 1659, 1664,
        1882, 1822, 1685, 1701, 1707, 1723, 1728, 1890, 1826, 1749, 1762, 
       1767}], Line3DBox[{22, 51, 837, 80, 109, 138, 894, 167, 196, 225, 951, 
       254, 283, 312, 1008, 341, 370, 399, 1063, 428, 457, 486, 1120, 515, 
       544, 573, 1177, 602, 631, 660, 1234, 689, 718}], 
      Line3DBox[{1273, 1288, 1292, 1309, 1836, 1313, 1331, 1336, 1353, 1357, 
       1374, 1844, 1378, 1396, 1401, 1418, 1422, 1439, 1852, 1443, 1460, 1465,
        1480, 1484, 1495, 1859, 1499, 1514, 1519, 1534, 1538, 1555, 1867, 
       1559, 1577, 1582, 1598, 1602, 1619, 1875, 1623, 1641, 1646, 1662, 1666,
        1683, 1883, 1687, 1705, 1710, 1726, 1730, 1747, 1891, 1751, 1765, 
       1769}], Line3DBox[{1274, 1291, 1295, 844, 1315, 1335, 1339, 1356, 1360,
        901, 1380, 1400, 1404, 1421, 1425, 958, 1445, 1464, 1468, 1483, 1777, 
       1248, 1790}], 
      Line3DBox[{1275, 1294, 1296, 1837, 1803, 1316, 1338, 1340, 1359, 1361, 
       1845, 1806, 1381, 1403, 1405, 1424, 1426, 1853, 1809, 1446, 1467, 1469,
        1788}], 
      Line3DBox[{1755, 1736, 1735, 1885, 1824, 1715, 1692, 1691, 1672, 1671, 
       1877, 1820, 1651, 1628, 1627, 1608, 1607, 1869, 1816, 1587, 1564, 1563,
        1544, 1543, 1861, 1812, 1523, 1791}], 
      Line3DBox[{1757, 1740, 1738, 1198, 1717, 1696, 1694, 1676, 1674, 1141, 
       1653, 1632, 1630, 1612, 1610, 1084, 1589, 1568, 1566, 1548, 1546, 1027,
        1525, 1505, 1503, 1488, 1789}], 
      Line3DBox[{1770, 1768, 1753, 1241, 1732, 1729, 1712, 1709, 1689, 1184, 
       1668, 1665, 1648, 1645, 1625, 1127, 1604, 1601, 1584, 1581, 1561, 1070,
        1540, 1537, 1521, 1792}], 
      Line3DBox[{1772, 1771, 1754, 1827, 1892, 1734, 1733, 1714, 1713, 1690, 
       1823, 1884, 1670, 1669, 1650, 1649, 1626, 1819, 1876, 1606, 1605, 1586,
        1585, 1562, 1815, 1868, 1542, 1541, 1799}]}, {
      Line3DBox[{794, 1076, 1075, 1074, 1868, 1073, 1072, 1071, 1070, 1069, 
       1068, 1067, 1867, 1066, 1065, 1064, 1063, 1062, 1061, 1060, 1866, 1059,
        1058, 1057, 1056, 1055, 1054, 1053, 1865, 1052, 1048, 1051, 1047, 
       1050, 1046, 1045, 1864, 1044, 1043, 1042, 1041, 1040, 1039, 1038, 1863,
        1037, 1036, 1035, 1034, 1033, 1032, 1031, 1862, 1030, 1029, 1028, 
       1027, 1026, 1025, 1024, 1861, 1023, 1022, 1021, 1049}], 
      Line3DBox[{377, 376, 785}], 
      Line3DBox[{823, 795, 796, 797, 1830, 798, 799, 800, 801, 802, 803, 804, 
       1831, 805, 806, 807, 808, 809, 810, 811, 1832, 812, 813, 814, 815, 816,
        817, 818, 1833, 819, 820, 821, 824, 822, 825, 826, 1834, 827, 828, 
       829, 830, 831, 832, 833, 1835, 834, 835, 836, 837, 838, 839, 840, 1836,
        841, 842, 843, 844, 845, 846, 847, 1837, 848, 849, 850, 851}], 
      Line3DBox[{88, 89, 1318, 90, 91, 1320, 92, 93, 1321, 94, 95, 96, 1324, 
       97, 98, 1327, 99, 100, 1328, 101, 102, 103, 1329, 104, 105, 1332, 106, 
       107, 1333, 108, 109, 110, 1336, 111, 112, 1339, 113, 114, 1340, 115, 
       116}], Line3DBox[{880, 852, 853, 854, 1838, 855, 856, 857, 858, 859, 
       860, 861, 1839, 862, 863, 864, 865, 866, 867, 868, 1840, 869, 870, 871,
        872, 873, 874, 875, 1841, 876, 877, 878, 881, 879, 882, 883, 1842, 
       884, 885, 886, 887, 888, 889, 890, 1843, 891, 892, 893, 894, 895, 896, 
       897, 1844, 898, 899, 900, 901, 902, 903, 904, 1845, 905, 906, 907, 
       908}], Line3DBox[{175, 176, 1383, 177, 178, 1385, 179, 180, 1386, 181, 
       182, 183, 1389, 184, 185, 1392, 186, 187, 1393, 188, 189, 190, 1394, 
       191, 192, 1397, 193, 194, 1398, 195, 196, 197, 1401, 198, 199, 1404, 
       200, 201, 1405, 202, 203}], 
      Line3DBox[{937, 909, 910, 911, 1846, 912, 913, 914, 915, 916, 917, 918, 
       1847, 919, 920, 921, 922, 923, 924, 925, 1848, 926, 927, 928, 929, 930,
        931, 932, 1849, 933, 934, 935, 938, 936, 939, 940, 1850, 941, 942, 
       943, 944, 945, 946, 947, 1851, 948, 949, 950, 951, 952, 953, 954, 1852,
        955, 956, 957, 958, 959, 960, 961, 1853, 962, 963, 964, 965}], 
      Line3DBox[{262, 263, 1448, 264, 265, 1450, 266, 267, 1451, 268, 269, 
       270, 1453, 271, 272, 1456, 273, 274, 1457, 275, 276, 277, 1458, 278, 
       279, 1461, 280, 281, 1462, 282, 283, 284, 1465, 285, 286, 1468, 287, 
       288, 1469, 289, 290}], Line3DBox[{994, 966, 967, 1250}], 
      Line3DBox[{1020, 1019, 1018, 1253}], Line3DBox[{349, 350, 765}], 
      Line3DBox[{464, 463, 1586, 462, 461, 1584, 460, 459, 1582, 458, 457, 
       456, 1579, 455, 454, 1578, 453, 452, 1575, 451, 450, 449, 1574, 448, 
       447, 1572, 446, 445, 1570, 444, 443, 442, 1567, 441, 440, 1566, 439, 
       438, 1563, 437, 436}], 
      Line3DBox[{1077, 1133, 1132, 1131, 1876, 1130, 1129, 1128, 1127, 1126, 
       1125, 1124, 1875, 1123, 1122, 1121, 1120, 1119, 1118, 1117, 1874, 1116,
        1115, 1114, 1113, 1112, 1111, 1110, 1873, 1109, 1105, 1108, 1104, 
       1107, 1103, 1102, 1872, 1101, 1100, 1099, 1098, 1097, 1096, 1095, 1871,
        1094, 1093, 1092, 1091, 1090, 1089, 1088, 1870, 1087, 1086, 1085, 
       1084, 1083, 1082, 1081, 1869, 1080, 1079, 1078, 1106}], 
      Line3DBox[{551, 550, 1650, 549, 548, 1648, 547, 546, 1646, 545, 544, 
       543, 1643, 542, 541, 1642, 540, 539, 1639, 538, 537, 536, 1638, 535, 
       534, 1636, 533, 532, 1634, 531, 530, 529, 1631, 528, 527, 1630, 526, 
       525, 1627, 524, 523}], 
      Line3DBox[{1134, 1190, 1189, 1188, 1884, 1187, 1186, 1185, 1184, 1183, 
       1182, 1181, 1883, 1180, 1179, 1178, 1177, 1176, 1175, 1174, 1882, 1173,
        1172, 1171, 1170, 1169, 1168, 1167, 1881, 1166, 1162, 1165, 1161, 
       1164, 1160, 1159, 1880, 1158, 1157, 1156, 1155, 1154, 1153, 1152, 1879,
        1151, 1150, 1149, 1148, 1147, 1146, 1145, 1878, 1144, 1143, 1142, 
       1141, 1140, 1139, 1138, 1877, 1137, 1136, 1135, 1163}], 
      Line3DBox[{638, 637, 1714, 636, 635, 1712, 634, 633, 1710, 632, 631, 
       630, 1707, 629, 628, 1706, 627, 626, 1703, 625, 624, 623, 1702, 622, 
       621, 1700, 620, 619, 1698, 618, 617, 616, 1695, 615, 614, 1694, 613, 
       612, 1691, 611, 610}], 
      Line3DBox[{1191, 1247, 1246, 1245, 1892, 1244, 1243, 1242, 1241, 1240, 
       1239, 1238, 1891, 1237, 1236, 1235, 1234, 1233, 1232, 1231, 1890, 1230,
        1229, 1228, 1227, 1226, 1225, 1224, 1889, 1223, 1219, 1222, 1218, 
       1221, 1217, 1216, 1888, 1215, 1214, 1213, 1212, 1211, 1210, 1209, 1887,
        1208, 1207, 1206, 1205, 1204, 1203, 1202, 1886, 1201, 1200, 1199, 
       1198, 1197, 1196, 1195, 1885, 1194, 1193, 1192, 1220}], 
      Line3DBox[{1251, 973, 974, 975, 1854, 976, 977, 978, 979, 980, 981, 982,
        1855, 983, 984, 985, 986, 987, 988, 989, 1856, 990, 991, 995, 992, 
       996, 993, 997, 1857, 998, 999, 1000, 1001, 1002, 1003, 1004, 1858, 
       1005, 1006, 1007, 1008, 1009, 1010, 1011, 1859, 1012, 1013, 1014, 1248,
        1252}], 
      Line3DBox[{768, 352, 1503, 353, 354, 1504, 355, 356, 357, 1507, 358, 
       359, 1509, 360, 361, 1511, 362, 363, 364, 1512, 365, 366, 1515, 367, 
       368, 1516, 369, 370, 371, 1519, 372, 373, 1521, 374, 782}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
VTHFI5MdqKPrYum0Gwkq3Ybzzp0Pglrt8IjhA0S0Te74JQz3jYUt/7RkunKQ
Q9S6evFaCwoVIibL7sdgxZ/n2KPoamTxdGLrRHYpOvhC8kOULgYdj5jp56Jq
0MXMwpDvs3mQ5XgtoeoV7p+FqoQYxmKRI03A3Rn6Tig77ORM8wXvX16NBV37
FphlI9wQI/XBI3pH1QW3JdB9FhXjIjsAJ74SHzZqjID3gbu/JlbmgDn358De
eA+Eht1j1l2bQLOfF8X92Wbh1NvA9dSeWMCoeF/6O08jlw+HHjckzcJuuhkd
NtOJBson7U60jaKNiLCSF0vzEJuyzGboOILaNP49vu1ejc4Om1wMSlqElfid
b6Nz/Wj50TV6ZaM6IFxOnHiA6zmb4Ylue8cmpPKAO6X7fC8svqOLeEqxDF7S
Z7vr2WLQSsaz8ZqofvhHr21UobYMVjyerB5XisC67/Hz7GD8fHnkVezbMuQX
pxBlTOuANabiq8ZaJxCcvrBT9yzDpz2BW8WbLdBj42tBub8d3NK/XzxNRwL+
9Sau67PtsDN39aCkZz1IscbSPgScP7Nf9TlxXlEpH11lKSAAQeLM32093Ecd
/LTsHUYER5kDHt0r+WD7oPtLki3O/zURFqcZIlhErdHEfk+EvReivMoeJDh4
iqU5aYcI40EHftGzSMFRl60tBx9c9zrd23+OEgEzkuvu5U5EAo8ET6bg/dJW
rFEo602EoI9URtMh+Yjj4Z5bDt6PX2qEPcpJHaD3TZpuwpyAPO/92JEyIoHq
QE2KaFc7jJ/5487OUo/ImjKO118jQdyZqYNHZ1ug8uHDv94325D/0UNk9zlI
cP5e4IRsZh0Ir0fa5ep3IpGja1R6C8sQ+F1ZMMK8BDCHiJXfTT2IL8tn61Tu
MlzpMv0p9NgN8Ssxxyem9qGzUllNdF+WgYK5r/hneS2yUJTk8/nSg+w1Pvbq
GS1Dbevn1yzkvWhLwuXMJ+MGtHHByNH+LO4zexJkrVeGUOOxXdL1nULoOEEb
2am9BJ4HemP0ObpRu0UXmyLTMGSHHvUm2ixAKO1tB9eWB9D6qb9Ahm8a+mJb
ox0o5qBPqc1rhr8erLbWVJ8qzMFBJ8mfY78ngeNg4LdLNyPQTb4rr3ZvLaDw
v93mkqIT0P/tVxmPQw9qPu3n5VY+h56y8PFhE2OwwqB1/q7oNAqpKJBIkRhD
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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"Hastings\[Dash]McLeod solution in the complex plane\"", TraditionalForm],
  PlotRange->{{-3., 3.}, {-3.5, 3.5}, {0., 3.1310092089158097`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.484029103446576*^9, 3.484029145568039*^9}, 
   3.484029183953415*^9, 3.48402930594178*^9, 3.484029487587036*^9, 
   3.4840335008370667`*^9, 3.484034448667873*^9, 3.484034786051607*^9, 
   3.484315260580414*^9, 3.487503809730196*^9, 3.487505262055883*^9, 
   3.494227643550376*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Computing the derivative of the Hastings\[Dash]McLeod solution\
\>", "Subsection",
 CellChangeTimes->{{3.48386900994193*^9, 3.483869011653343*^9}, {
  3.4839464218300123`*^9, 3.4839464240934267`*^9}, {3.483953715285821*^9, 
  3.483953720426712*^9}}],

Cell[TextData[{
 "We can also compute the derivative of the Hastings\[Dash]McLeod solution.  \
We need to use a different right hand side to the RH problem, since the \
derivative satisfies \n\n\t",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[CapitalPhi]", "x", "+"], TraditionalForm]]],
 " \[Dash] ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[CapitalPhi]", "x", "-"], TraditionalForm]]],
 " G =  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalPhi]", "-"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "x"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalPhi]", "x"], "(", "\[Infinity]", ")"}], " ", "=", 
    " ", "0"}], TraditionalForm]]],
 ",\n\t\nby differentiation of both sides.  First we construct the derivative \
with respect to x of the jump matrix GG."
}], "Text",
 CellChangeTimes->{{3.483869013197392*^9, 3.483869017580845*^9}, {
   3.4839461897835283`*^9, 3.4839462020449877`*^9}, {3.483946372757473*^9, 
   3.483946390812764*^9}, 3.483946944693314*^9, {3.4839469764757547`*^9, 
   3.48394714602002*^9}, 3.483986085899598*^9, {3.483987380941092*^9, 
   3.483987401404345*^9}, {3.4840326402889214`*^9, 3.484032650024782*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]x", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", " ", 
   RowBox[{"2", " ", "I", "  ", "z"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {"0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "1", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "1", "]"}], 
         RowBox[{"\[Theta]x", "[", 
          RowBox[{"x", ",", "z"}], "]"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "3", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "3", "]"}], 
         RowBox[{"\[Theta]x", "[", 
          RowBox[{"x", ",", "z"}], "]"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "4", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], " ", 
         RowBox[{"s", "[", "4", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", "6", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], " ", 
         RowBox[{"s", "[", "6", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "0"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGx", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "1", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "3", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "4", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", "6", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "6"}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.483869020862625*^9, 3.483869129998797*^9}, {
  3.48394622210963*^9, 3.483946230593299*^9}, {3.4839860893718243`*^9, 
  3.483986102731062*^9}, {3.484225538392785*^9, 3.484225538669325*^9}, {
  3.487503109740671*^9, 3.48750311200231*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4835341285876102`*^9, 3.48353430694979*^9}, {
   3.4835343464077253`*^9, 3.48353442182684*^9}, {3.483534510913375*^9, 
   3.4835345145689497`*^9}, {3.483534802707912*^9, 3.483534810938017*^9}, {
   3.4835348429931517`*^9, 3.4835348430703163`*^9}, {3.483535612045465*^9, 
   3.48353561237816*^9}, 3.4835372492972403`*^9, {3.483700379133095*^9, 
   3.483700379364772*^9}, {3.483700420086055*^9, 3.483700420314332*^9}, {
   3.483700645290639*^9, 3.483700645599826*^9}, {3.483700799133174*^9, 
   3.483700827698254*^9}, {3.4837008888982677`*^9, 3.4837008897736187`*^9}, {
   3.4837037656220093`*^9, 3.4837037662987757`*^9}, {3.4837040283461523`*^9, 
   3.483704048140493*^9}, {3.48370504381546*^9, 3.4837050439876003`*^9}, {
   3.483869135628381*^9, 3.483869142640871*^9}, {3.4839462324881973`*^9, 
   3.483946243120829*^9}, {3.483986093379991*^9, 3.48398609738571*^9}, 
   3.484225537131452*^9}],

Cell[TextData[{
 "We need ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalPhi]", "-"], TraditionalForm]]],
 ", which is the identity matrix plus the cauchy transform of U.  The \
function CauchyOperator precomputes the Cauchy matrices for a fixed ",
 StyleBox["n",
  FontSlant->"Italic"],
 ".  The function AddIdentityMatrix adds the identity matrix to a list of ",
 "Fun",
 "s.\n\nAlternatively, we could have written\n\n\t",
 StyleBox["\[CapitalPhi]m[n_, x_] := \[CapitalPhi]m[n, x] =  Cauchy[-1,U[n, \
x]]//AddIdentityMatrix;",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.483946366971883*^9, 3.483946484840274*^9}, {
   3.4839471789875517`*^9, 3.483947186301552*^9}, {3.4839475157159433`*^9, 
   3.483947521636133*^9}, {3.483947846169919*^9, 3.4839478606438704`*^9}, {
   3.483986146184496*^9, 3.483986152390943*^9}, {3.4839862087918653`*^9, 
   3.48398628000203*^9}, {3.483986448193275*^9, 3.483986534282301*^9}, 
   3.487503127284173*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]m", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cm", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cm", "[", "n", "]"}], "=", 
    RowBox[{"CauchyOperator", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"R", "[", "n", "]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]m", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalPhi]m", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Cm", "[", "n", "]"}], "[", 
      RowBox[{"U", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "//", "AddIdentityMatrix"}]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.483986302874404*^9, 3.48398630769308*^9}, {
  3.487503572372519*^9, 3.487503573110272*^9}}],

Cell[TextData[{
 "We now use our precomputed RHSolver.  Specifying a second argument is \
equivalent to changing the right\[Dash]hand side.  We want the new right-hand \
side to be  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalPhi]", "-"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "x"], TraditionalForm]]],
 ".  The multiplication is accomplished using FunListDot, which takes two \
lists of Funs and dots the lists component-wise "
}], "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
  3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483987438170971*^9, 
  3.483987439826622*^9}, {3.487503627030449*^9, 3.487503689244257*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ux", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ux", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Ux", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"R", "[", "n", "]"}], "[", 
    RowBox[{
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "x"}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalPhi]m", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "~", "FunListDot", "~", 
      RowBox[{"GGx", "[", 
       RowBox[{"n", ",", "x"}], "]"}]}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.48394626675776*^9, 3.48394626832169*^9}, {
   3.4839463277241993`*^9, 3.483946328011894*^9}, 3.483946513434458*^9, {
   3.4839468351920567`*^9, 3.4839469045728617`*^9}, {3.483946939312194*^9, 
   3.48394694165464*^9}, 3.4839472386720552`*^9, {3.483960804029976*^9, 
   3.483960810902066*^9}, {3.4839861082006817`*^9, 3.483986118148151*^9}, {
   3.483987470036564*^9, 3.483987471993949*^9}, {3.487503614491884*^9, 
   3.4875036244175043`*^9}}],

Cell["We can now define the derivative of the solution", "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
  3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483947297737791*^9, 
  3.4839473081864758`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"px", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"px", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"px", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], " ", 
    RowBox[{
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{"Ux", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.483869741612471*^9, 3.483869762838874*^9}, {
  3.4838698367287893`*^9, 3.483869843564246*^9}, {3.483947267516725*^9, 
  3.483947274220769*^9}, {3.483947315454978*^9, 3.4839473175028048`*^9}, {
  3.483947374779566*^9, 3.483947374929497*^9}, {3.4839613164353228`*^9, 
  3.483961323199203*^9}, {3.483986119525629*^9, 3.483986121291061*^9}, {
  3.4839874739011927`*^9, 3.483987475397687*^9}, {3.484032712458864*^9, 
  3.4840327282314177`*^9}}],

Cell["\<\
We can plot the derivative of the solution (chopping off the small imaginary \
part that is due to round-off error)\
\>", "Text",
 CellChangeTimes->{{3.483946909416238*^9, 3.4839469318648787`*^9}, {
   3.483947192950884*^9, 3.4839472328557043`*^9}, {3.483947297737791*^9, 
   3.4839473081864758`*^9}, {3.48394742249831*^9, 3.483947423423778*^9}, {
   3.483947478821151*^9, 3.483947551053198*^9}, 3.483947844674869*^9, {
   3.483988495970057*^9, 3.483988505390643*^9}, {3.484032743573892*^9, 
   3.484032748268325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"TablePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"px", "[", 
       RowBox[{"75", ",", "x"}], "]"}], "//", "Re"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5."}], ",", "5.", ",", ".1"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Hastings\[Dash]McLeod derivative\>\""}]}], 
    "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.483704223848497*^9, 3.4837042316373177`*^9}, {
   3.483704334952297*^9, 3.483704349013042*^9}, {3.483704383806059*^9, 
   3.48370438391581*^9}, {3.483704535636174*^9, 3.483704536308423*^9}, {
   3.4837046850789623`*^9, 3.483704732261632*^9}, {3.4837050852631273`*^9, 
   3.483705086102219*^9}, {3.483885454205223*^9, 3.4838854562111473`*^9}, {
   3.483946157952426*^9, 3.4839461735197144`*^9}, {3.4839474288361187`*^9, 
   3.483947431705813*^9}, {3.4839475563935747`*^9, 3.483947557192994*^9}, 
   3.4839861222723494`*^9, {3.4839875170604343`*^9, 3.483987518715699*^9}, {
   3.483987863025803*^9, 3.483987866175435*^9}, {3.483988032188925*^9, 
   3.483988039073682*^9}, {3.48398815020989*^9, 3.48398815030072*^9}, {
   3.483988464454267*^9, 3.4839885187454157`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw11QtU01UYAPDxfo2xF/mA1Djm4RzkuNAjIBzulWWaGURhJ42AoDHyIKE0
IhVsIr4SRASBEZEkcdR4hqWC/O9gG9vkMbbhgxIRAsGQlygBisX2/e85Ozs7
936/73+/7fv2RsxXH4osGQyG6P/X4rt58UnJhUtDgkgFkhUtLh6ZcLtesDFP
gdabFo9kCVezg9oUqL1tcXHJ8XOvliTaKlGcaXFJbDETjwQrkdnjko7CG51d
UiV4HBIYsHz7jhYleBzSELqKJ7VTgccmUb2KkyUhKvDY5P7VxhvGQhV4bPKR
xd3BqCEVxLsQaXrD3XTfVjjPIgd/yVuferoV8jmTYuG7Z4sGW5GJb2MSdbkx
11eoBo9JvF3vNVaWq8FzIm9Kp9winTXgOZL7rFVFNQc04DmQB0l/D3DGNODZ
E88tqXcmxVrw7AlzJN5fPqwFz47IjvRUjyXdAs+W9Er4mn5GGzJxRTaEO8qa
nitsA8+aLPGd2prh3w6eNTmdlmNZ3d8OnhWZfmmsO5PXAZ4l+Vm+j+cU2gme
BVE+De55ZK8Dj0FubObtWp2oA49BOj+wSlTf1kH8AlUkdJ7wCe6C8y8o2SEP
9+zqLuRjyjdPRS5JF2tf16NCkz9L1VmENMi+14P3L9U88+21/TN68J5TMWGR
FcejDOBNU9/MFVYZ5QbwnlKzKUldHu5G8CapynUDtq4JRvAmqLF4fopftRGp
TfGj1NuzrOylA/T5EQoFjr/3sU03ijflG6LyBRtL5LxuJDD5A1Qe+TMpmdkN
Xh/1Rd1+1dATI8oxxd+jYsr4o6w/jHDeQAWctff6UmxE35n2NVRE48lY+1cG
+HydCpMMZRalG+j6MbYFCsXRj/SImPfR1VMNHO8APfrJHI/G9eKQ7Ye6EDb7
6FLy3pq4Sh3s30NCRX3+07JO+vmQkyv+K+ROO/IzPz/yaVKd37Jwi74fKsnq
jV6zQgvxI0h5fteRmUA10pnrgypKDdEh0XR/TCDv/LQVgiwF+sFcX9QadEIz
39qMNpjrj7JdY3Sf8eUQP41OWLE7Ch43Qb7nyMFLsJvd00B/v2hmxjM2fO4a
eLOI5ylVfvL+7+DNo88zHzNnDb+B9wKtkeVNuWXXgreAxiOij9Y9q6Lrh4/P
VN0KeusK6jD/PvEeyTFplbYC+ssCB2Z+2uJ48yLEW+LKKOc7nZZlkM8KZ/xY
sle4tpTuD1wsc98w9VAGnjUOF0Wsy11eAJ4N3tPkcjhAew48WyzpX5oQP5gD
nh12d6t5uL75NN2/eJvowbMB0Qm6v/GmEcnlk2VH4f4OeJJZEPROnBQ8R3xG
K8hK2ZwGnhP27Wt6yT6WSs8XfEBT25dx+Gt6/mCvVI9i4roPPGd8vVtSXR+X
AB4L1/ol/FN7SgyeC95kiEnnpMTS8w/nrAw9etYpmp6P+KBu2EUUuxvuz8a/
lr4mr7y4E+I5eGX1cExbfRg9f/Hwzgv9dwd30PMZW2tabg5lboX8XJy49krl
7WVC8Lj4cu+ykCeTQeDxcDJX3VFr4U//P+Ca5fLyCc8N4PExJz089/FGAfoP
YFfZKA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Hastings\[Dash]McLeod derivative\"", TraditionalForm],
  
  PlotRange->{{-5., 5.}, {0., 0.32933082916930206`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.483704243425623*^9, 3.483704346499186*^9, {3.483704382667766*^9, 
   3.483704389280013*^9}, 3.4837045647317038`*^9, 3.4837047048521957`*^9, 
   3.483704735205851*^9, {3.483946155085792*^9, 3.483946169055881*^9}, 
   3.483946234996176*^9, 3.483947443972715*^9, 3.48394750477885*^9, 
   3.483947555254313*^9, 3.483947619270499*^9, 3.48394777163452*^9, 
   3.4839875140641403`*^9, {3.483987849535138*^9, 3.483987866574881*^9}, 
   3.483988121689067*^9, {3.483988460613451*^9, 3.483988491936095*^9}, 
   3.4839885363621063`*^9, 3.4839889833288727`*^9, 3.484315502060028*^9, 
   3.487505482180421*^9, 3.494227855298546*^9}]
}, Open  ]],

Cell["\<\
We can compare this too with the values from [Pr\[ADoubleDot]hofer & Spohn \
2003]\
\>", "Text",
 CellChangeTimes->{{3.483947950239595*^9, 3.4839479865445957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLineLogPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"25", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"50", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"75", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"px", "[", 
             RowBox[{"100", ",", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "-", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}]}], "}"}], ")"}], "&"}], "/@", "data2"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Error in approximating the derivative of the Hastings\[Dash]McLeod \
solution\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483704899100596*^9, 3.4837049814796667`*^9}, {
  3.483947737190786*^9, 3.483947737740926*^9}, {3.4839477918368607`*^9, 
  3.483947794920754*^9}, {3.48394786686578*^9, 3.483947909922564*^9}, {
  3.483947992932021*^9, 3.483947994607346*^9}, {3.48395353774935*^9, 
  3.48395361223071*^9}, {3.483953692761897*^9, 3.483953692945444*^9}, {
  3.483986123434526*^9, 3.483986124598263*^9}, {3.484040291281361*^9, 
  3.484040295973773*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw10QtMU1cYwPFb+gSmqTzmcyBCQRSFqIyJ1HNp0uCsTCEuGOwkMqAOhlJC
MGIctRMGVQFjYL5wzIm2douiDghizmFkDpHXsgZBarDYAAEEocij5TE3z3eT
m5tf/jfnnvNdn8RjsclODMMcfn//9/xwiYhkmzTSvllM/qdGSLrd3A90hi37
YEZIVN6R12TRbrQLiE5lC2lQu9MuINb9xvo+vQftfDIy1bowNu1JO58oazjy
barltPNIy3fPJ5t5K2nnkZCq4J664VW0c8m64+tzHfGf0M4lVR63+9vL1tLu
RC7EtpPoo360OxEJDxdnVEPnkOAcfGaf3pt2DnEe++OytteLdoY89/LLys2j
ZhhSqOeGP04FL+KlOQ8b4k6AF/Abnm2FqhI8jyfP7XxQOwCew/NXmvPLd8D3
HLgxUHjvZTnYjlsNN/I9BXR/zCzWPom/cEQGnsG/umdfkn0Pnsa6h42hfk3g
KXz/2pHTd8Q+1O+w7ofMhQIleBLHb+I8yTOCbbglzSvi+Dx4AofJo7tlseuo
x/Fgame12QB+i8UVf5dH8XypR3FRQW9C6WHwCN5y1bZzoAE8hO+eWO19VALz
H8R/DUj9U8+B+/FKqasscBpsxbVGTj03RULdh79gzZlfdoNfYT//9Fh1jD+1
Gc8WHLDp2sBdOKK8t6J4XwC1Cbv0XEyxdoI7MK/92RtHwnrqJmwyZFkfDYIJ
lrqG5TxNC6S+h89+YyjcZAEzTI0hSi9HG6Aj0Z7yB+ZTYIL6F2/+vvcKuAkV
icNUuy+DO1CrI8gefQZsQpmeSct1yeAutGRU8ShMDjYj4T+5u0WB4FcoQ5F0
2ugB7kOmjJddJS5gK5Ju4aGij8D9yO488XPSGvAg0qr/lG2PAA+hFy4/ugYd
A48gpYp/J64OPIosIQsRnICN1G9Rev7TqhtN4HFUlv/stz2mIOoJpNievV+X
FkxtQ1cTm8dvxm2mnkShxS3qr7Pg/XfIknBLsbQA1ptCIzmR58Xj8P1p9Mv1
zCF+AXgGJRvOi0Kk4Fl0Ulc63yoC21HeLW1NZT/8LwcS7zgUc9AEnkOvc9TN
9R3geRQw17Yxuwe8gPrGtr5YnAQvIsGpXdrHXrA+w44nRjUcOkitYdg1XYpa
fBc6h73vqpUIJfQ8Gg57ydlXbGyD8zmxVmVo47CFnl/jxH6s1IksWpgXl53y
HpaHp9N5ad579Wff5pbAvHhse4s8uU4P6/PYkzORrxM9YX0+W7Zkxjcc9qPh
sz8V++89mwL7E7CFJZ/mlm6FLmB3KUpXrXCDLmRvf+VTYVik59cI2dGYajvj
gHmI2LWfc0WV3A3kX25m6Us=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxF0Q9MU0ccwPHXQikKZgaGZoFR/8AsVLACInRk91QWBSc4/mWKZRMGbDDB
WNxaBNaB2GBKtskwpFEmQjrcJnYEnEvBu9pNqsSl2SpjpExAwJYxKSAgtML+
eL/sJZeXT77v3f2S25hdnJLLZRjm6D/r3/fzx5OEv7jU7G0OIv9RySdvxgr5
7/OCn5vhk1UxXad891ArPcg7gvOqQRV0D1JdvS/K8Qt0Hvn8+P5Lus2v0M4j
gkRrzTUFtdKdWJoe2hst0N1JbtayV2LUFtrdSNsmhU9dAzXjRvpdrG8xR0g7
l9SmlZ0bK6JmuEQWUb9q7TB0DrEerzkT8FYI7RyyQSzxPmihVjLEKG1ReWWE
0s4QV+C6xl8HwSv46Gf+J7I+EFEv4xcab6druVupn+HseH2a12WwC3M2DhjV
b4RROzH+XqWJ4oVTL+Fsf9XYhBm8iBPXcjVv39hG/RTfjHxQezFPTL2AWUfp
eU3gdup5nDKeeTWjKIJ6Dt9IEu6vbwY/wb8PxneevgXfz+LBHzO6j8jBM1jh
FGi0meBpPNSbYW5MBztwa7U6s0IKfoxD/Wd/chaBJ/HP02XLnSrwBO4KsMp2
a8E2nHvzGjHeAY/jvtFL8uvT4FEsEhfq+16GeUdw80nL1z5J4CEcWGvXna4E
WzEJkHTK9OB+bPgE5RxaBFtwuEnxrSMuktqM1xwoD0lRgU24PhkniwbABPfw
ujnbY6KodXiWl+4K0YIZRrhou9cXtgM68vX5tN7PDibIJPE7+2rWTtgfFZRm
1sWHgc0o9f6XLZnHomE+dMVmKBSJwf1odcd8Q80GsBV9NbDzpbuh4CGUOqaW
3tkLHkGuqpIqewl4FP1mStjs3w4eR8PrEmxGDpxvQ/KoP+WHCsAT6MIfwd3D
LvAkyjHzeyaWYqgfowFvpk0qllA7kLiVc+CwCfo0itwm64t+FzyDoiu/e++L
OPAsMq70ts5FgJ8gifb+9f/7HFpoEduT0sDz6GrqI1nAR+AFFFEhxLrL4Kco
Z+uuPJ0FvIgUtqAOt9Wx1EvoRInk44TXwE6UP3XXbigEu1CpaW/Wh2rwMxRp
2CfvugBeRk3l6njpRfAKSt607FpTB2bYM4PBjx5UUSsZdlzRkO93EjqHfShq
d5UXQOewnrf0xwx50Lnsbsv6w06YR8llf2j4RnSkDLob2zLSs8Wlge7Gxuua
7AfvQXdnw6/ka5CA3ofSne0uDpzJ64D74bGd7Vmnem/H0c5j1cXDr1dMQfdg
K81DO3AI/O/BGp1Tu9Zj2J/P1vy1eE6vgPP5bNDkHkFsInRPttW3qM0nNJb8
DXUU8t0=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJw90A9Qk2UcwPFnG2xEIqVEDIRCDk3+DJimGzCeFzJSOsQQvcgzlWKKUhwq
ICfiBuKQpe0OS1vEeWARxYIIEK7V8wBldEfp+S/gVnDIjNYaCGNjyJ/++Px6
795773Pfe57n97zBWXnp2XyE0P5/3n+/jx4P+qHFUp5SE0X/o0pErR94x7w7
yYxEdGteSrfbmmjWhbQsX6Hs28WMhNReWeczXAXdnWaaR1YsdUN3p6rYN+vE
89Dd6EBNgU4hj2HdjSpdwVcOFzOrBFR+PfXINSN0Ae3qCwpzCaSs82nW6T8v
pqUxIz51+Kf/erYWOo/a0gQF1mnoPKpz6nv3pa1nHdGSyOJyw1fMCNGglvfP
/hW8gXmJoL7xXRmN4EUiDjB8+fNLzzMvkCqe5JVR6UbmeeLVffW3ixly5ofk
Ez9PPHMV+hzZFvFtSHM02EW0PqqeSk/wLGnImNQ9JwA7yXvqmJsFXmAHWeI1
P1MdAp4hwT2pua8nge0kPLuwYe4AeJpIWm0vrq8GT5GiE3lXNvSCH5D2sijr
G07wJLlUcS9oa9QmZhvReGyKVx0CW4mxeKm35VOwhazMtfVX/AEeJ5dXB4Q3
RciY75PPkWPgej54jKyzRp6s7QSPEqO/15qbCP7XCAn0Hi6XpoBN5Jsqk63t
AniAvLU36peKEfBtgnLKO9ZJYplvkOATkYNNpeA+krlnRfbYLTAl3pYfyvqi
45hbSM2Czz2dHozQUC3v2cGAeOi4Pm6VKOsGmOKv5VmD3tsTYH9s2e0suWVS
wPlY+VPRnmE/8G28OT5g//F+WD+AP1Ke1rR/Bjbhjvltipcvg0ewZ+t3rqmP
waO43ywJze0Ej+E67cKr8rvg+1jy48rfdYvgcdxyhp5MlML5FmxPSL207CjY
ikv0gojkXrANe31Rr/QPh/tMYvr49+eMXeAH2FJ3/thBA2aewulxcclCLcc8
jZNMpRO4Aroda3C26Qk/8Ax+0iZLUo/Dfg5coNk5q70DduKnXmjUN98Fz+K9
vvqGQ2awCw81LrQZEOw3hz2rd+/jrQU/xO2GQEP0a+B5XCfOD2ytAS/g5DCN
7vw0eBH7xPpJPGUw/xKWFSpPSevBiNtYmamRqhMfWYW4sK7SjJJ3oPO4eN/l
1/RbmFU8bnWH+Y4zBDqfO7Y92dy2HDqfk8kPh1p40AVceNOyLTucbB6VgFOH
oNI0B8znxilCTy3uXITuxj3W8/aQQwTr3Tl16nHvo76wvzsXSCaUE2HQhVxO
oTFB+/98Qm6t8+kdU0egi7gcR5HW2AldxM22dFxoP8juizy4A6vsdrE4kf4N
EFTq2g==
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxNzwtMk1cUwPGPPiG6CVijK45BRUww1UyjQLTei2QCdiKvRN2MDoRhieKY
G2J9UFBphqgQCcasPBpR2Cq4LVEiTu5lIGM6BwtIVUpB7UrHoylQCqUCe/gd
sEnT/PK/59xb/6QjcSkchmES//3+9/vm404rUPLZy/kb6f9UCWmJRK/ICwt+
Y0ZI1R16/xYLa5WAfh99UO6dFMJ2AX3vZu+DexbWKj4NMElqt52DeT5dzrWP
2uJgnkeN1V+1yT6HzqNSz+EdbUuhc+knq1ebvESwn0tzAu+rzcGhbOdQX21G
8ZV6mOdQxTUUL82C+91oo+004qyDeTe6LOGQMnItdIYqyZkLH0uhMzSk6eL7
VfXsfmaWeM8m6KIGoc8QEc1AsQfA06RD3fvixmPwaxJUpOjOWgN2kVPj/dkP
xeAp8ko95Vd/FuwkypqZxzejN7GeJIGZSbbtdeAJ8rtX6sW+oM2sHaT/VJOq
9hZ4nIxvmPxREStjbSedjlcHrq7fwnqM6L4+rHTKMetRcjs/U+nPQaxHSM+X
dQXGHDhvI4axlnXbd4OtJOO57rfUePAQKa6OVnATwQNkk7hLX3McbCEyqSQu
QAM2k45qeYG2GWwizcd2Cqkd/JLkxHetfBYA7+kjQbLGBfc+AxsIYzrW9YEG
/JT0nJRuKOgBd5I0jXduqzf8v3Zy13VpIG8juJVMLjI1nE8GU9KbECn0KQT/
QIyFdx/cbwMzzDfDJ7U13DDo6EQqp2n/XjBFKHjViZ37tsJ+pPU96tkTCG5H
pQllofYsON+JLMsCG35KBz9F2/TWoeo5G9A532nD+UpwH5r4JUrybj74Jdr1
66HwR3PdhPZU+Ggr/wSb0X73kms5DrAFLfTKepKWC+8ZQI4F75Ra74CH0Fa/
FWr3OrAVffH34hsVNWAbqhzMXfnh3L4RNFZ0Z7A2DPooynYV7in2CGc9hppK
UjZHmKHb0WVxslHDgT6Ohm3ZpR7PoDvQ89i1uj/SwBOoPFnsXOMATyK5bUvI
KgHMO9G+qLz2xHTwFIoRPdT4GOC8Cxnxo4r5/a+RuZGK+tLB06hq4c+75987
g4q4nZ61T6DPoubI60v8WsEMHrWolricrFUMHvy0rCzNC+bdcAvjjRMxa5Ub
LiSZt9JvwzwHH0357q15Du41db91PxfLupdGzM9zccPp/hjxVeg8LLlQVT53
n4qH94qi4/UzsJ+Pi3m++K8I6Hy8i1+8/Nsu6AJ8PHK99LAOugAflL/wuBQF
+4VYa120w1AOXYhjPgo9IjBDd8cjIYvN6jPh9B9vjPb6
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-3., -39.79707136436866},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-39.14394658089878, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-34.42544770960368, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.73677480943866, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.332805587922074`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.04587229873253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.823178286648194`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.64115653498315, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.48722005672038, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.35384934538487, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.517692430621544`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.82901953045652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.42505030893994, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.1381170197504, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.915423007666057`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.733401256001017`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.57946477773825, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.446094066402736`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-39.14394658089878, 
       FormBox["\"\"", TraditionalForm]}, {-32.23619130191664, 
       FormBox["\"\"", TraditionalForm]}, {-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-34.42544770960368, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.73677480943866, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.332805587922074`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-33.04587229873253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.823178286648194`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.64115653498315, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.48722005672038, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-32.35384934538487, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.517692430621544`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.82901953045652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.42505030893994, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.1381170197504, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.915423007666057`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.733401256001017`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.57946477773825, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.446094066402736`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Error in approximating the derivative of the Hastings\[Dash]McLeod \
solution\"", TraditionalForm],
  PlotRange->{{-3., 3.}, {-39.79707136436866, -4.0458765214544075`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-39.14394658089878, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-34.42544770960368, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.73677480943866, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.332805587922074`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-33.04587229873253, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.823178286648194`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.64115653498315, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.48722005672038, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-32.35384934538487, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.517692430621544`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.82901953045652, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.42505030893994, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.1381170197504, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.915423007666057`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.733401256001017`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.57946477773825, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.446094066402736`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.609937151639407`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.921264251474383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.5172950299578, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.230361740768263`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.00766772868392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.82564597701888, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.671709498756112`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.5383387874206, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.70218187265727, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.013508972492247`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.609539750975665`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.322606461786126`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.099912449701783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.917890698036741`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.763954219773973`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.63058350843846, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.794426593675134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.10575369351011, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.701784471993528, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.414851182803988, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.192157170719646, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.010135419054604, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8561989407918364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.722828229456324, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.483953693143484*^9, 3.484040781136764*^9, 
  3.484315961299335*^9, 3.4875059086272583`*^9, 3.494228261327264*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Homogeneous Painlev\[EAcute] II equation\
\>", "Section",
 CellChangeTimes->{{3.4840343960415688`*^9, 3.484034418398766*^9}, 
   3.484034605072867*^9}],

Cell["\<\
To speed up the algorithm, in the Hastings\[Dash]McLeod solution we only used \
4 of the 6 rays.  There is no problem with adapting it to the full six rays, \
as the following example demonstrates:\
\>", "Text",
 CellChangeTimes->{{3.4837045475941553`*^9, 3.4837046222948847`*^9}, {
  3.483705035021916*^9, 3.48370505871178*^9}, {3.48386865553936*^9, 
  3.483868664306522*^9}, {3.483945868466632*^9, 3.4839458976675*^9}, {
  3.483946948265936*^9, 3.483946966226915*^9}, {3.4839859710810966`*^9, 
  3.4839859847064037`*^9}, {3.483986567458593*^9, 3.4839870685762787`*^9}, {
  3.48403445986523*^9, 3.484034531652897*^9}, {3.4840346092751503`*^9, 
  3.484034612087191*^9}, {3.487504015129738*^9, 3.4875040184713373`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "1", "]"}], ",", 
     RowBox[{"s", "[", "2", "]"}], ",", 
     RowBox[{"s", "[", "3", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"1", "/", "3."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", "4", "]"}], ",", 
     RowBox[{"s", "[", "5", "]"}], ",", 
     RowBox[{"s", "[", "6", "]"}]}], "}"}], "=", 
   RowBox[{"-", 
    RowBox[{"Array", "[", 
     RowBox[{"s", ",", "3"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483534098191519*^9, 3.483534121288732*^9}, {
  3.48353417333419*^9, 3.483534197611909*^9}, {3.483534240389817*^9, 
  3.483534336682715*^9}, {3.483703230389113*^9, 3.483703230749571*^9}, {
  3.48370501565246*^9, 3.483705015970914*^9}, {3.483868794234153*^9, 
  3.483868795550787*^9}, {3.483885462418798*^9, 3.483885470030558*^9}, {
  3.483985987215592*^9, 3.483986004481682*^9}, {3.483987074007008*^9, 
  3.483987077156212*^9}, {3.484034519014134*^9, 3.484034522062389*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", "I"}], "3"], 
     RowBox[{"z", "^", "3"}]}], "+", " ", 
    RowBox[{"2", " ", "I", " ", "x", " ", "z"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "1", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "2", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "2", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "3", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "3", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "4", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "4", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "5", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{
         RowBox[{"s", "[", "5", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "]"}]}], "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "6", "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"s", "[", "6", "]"}], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]},
       {"0", "1"}
      }], ")"}], "/.", 
    RowBox[{
     RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "1", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "}"}], "]"}], ",", 
       "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "2", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"\[Pi]", "/", "3"}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "3", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "6"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "4", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "5", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "6"}], "-", 
               RowBox[{"\[Pi]", "/", "3"}]}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "6", "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "6"}], ")"}]}], "]"}]}]}], "}"}], 
        "]"}], ",", "n"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4840345426884813`*^9, 3.484034557571624*^9}, {
  3.484034597436372*^9, 3.484034597685257*^9}, {3.487503130269346*^9, 
  3.487503132255534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "[", 
   RowBox[{"50", ",", "0."}], "]"}], "//", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.4835343005342073`*^9, 3.4835343022501717`*^9}, {
   3.4837040504538183`*^9, 3.483704052479437*^9}, {3.483945933997724*^9, 
   3.483945934229574*^9}, 3.483986011765085*^9, {3.4840347523109083`*^9, 
   3.484034752421955*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], 1}}, {{0, 0}, {
       1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], ArrowBox[{{0, 0}, {0, 2}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], 1}}, {{0, 
       0}, {-1.7320508075688772`, 1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {-3^Rational[1, 2], -1}}, {{0, 
       0}, {-1.7320508075688772`, -1}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], ArrowBox[{{0, 0}, {0, -2}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 0}], 
    ArrowBox[NCache[{{0, 0}, {3^Rational[1, 2], -1}}, {{0, 0}, {
       1.7320508075688772`, -1}}]]}},
  Axes->True]], "Output",
 CellChangeTimes->{
  3.483534302436573*^9, {3.483534349730088*^9, 3.4835343708384733`*^9}, 
   3.483534424854615*^9, 3.4835345181039867`*^9, 3.4835348125478687`*^9, 
   3.4835348444325247`*^9, 3.4835356142140913`*^9, 3.483537252771473*^9, {
   3.483700374056423*^9, 3.483700380484953*^9}, 3.483700421500204*^9, {
   3.483700802364541*^9, 3.48370083141947*^9}, 3.4837040529132013`*^9, {
   3.4838687526468143`*^9, 3.483868762739881*^9}, 3.483868802336193*^9, 
   3.483885483166663*^9, {3.483945931971674*^9, 3.483945934759091*^9}, 
   3.483987208142911*^9, 3.484034872979195*^9, 3.484036636918849*^9, 
   3.484041250493285*^9, 3.484313235304688*^9, 3.484315961462469*^9, 
   3.4875059088242693`*^9, 3.494228261497707*^9}]
}, Open  ]],

Cell["\<\
Since we don't need derivatives, we only need the top row of the RH problem \
(which takes less time to compute).  This is accomplished using the \
RHSolverTop command.\
\>", "Text",
 CellChangeTimes->{{3.4840349105633783`*^9, 3.484034949753427*^9}, {
  3.484035120154709*^9, 3.484035178048407*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"R", ",", "n", ",", "x", ",", "U", ",", "p"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", "[", "n", "]"}], "=", 
    RowBox[{"RHSolverTop", "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "0."}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{"R", "[", "n", "]"}], "[", 
     RowBox[{"GG", "[", 
      RowBox[{"n", ",", "x"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"n", ",", "x"}], "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]]}], " ", 
    RowBox[{
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{"U", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", "2", 
     "\[RightDoubleBracket]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.483704059473811*^9, 3.483704084796417*^9}, {
   3.4838686818317337`*^9, 3.4838686877682533`*^9}, {3.4838688055309353`*^9, 
   3.483868807893404*^9}, {3.48394593885419*^9, 3.483945939253743*^9}, {
   3.483945970689331*^9, 3.483945972508366*^9}, {3.483946530550324*^9, 
   3.483946532556075*^9}, 3.48394673502254*^9, {3.4839860129058733`*^9, 
   3.4839860335919247`*^9}, {3.484028855902452*^9, 3.484028861435276*^9}, {
   3.484034634440394*^9, 3.484034655074279*^9}, {3.484035147441305*^9, 
   3.484035151232192*^9}}],

Cell["\<\
Here's the solution (real part in blue and imaginary part in red) for the new \
choice of Stokes' multipliers\
\>", "Text",
 CellChangeTimes->{{3.4840349105633783`*^9, 3.484034949753427*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"ReImTablePlot", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"25", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3."}], ",", "3.", ",", ".01"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<A solution to Painlev\[EAcute] II\>\""}]}], 
    "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.484034876859997*^9, 3.4840349089170227`*^9}, {
  3.484034951668895*^9, 3.484035038167687*^9}, {3.4840352182174463`*^9, 
  3.484035269663251*^9}, {3.4875060973259068`*^9, 3.487506106643457*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
WdzwLLcmhx8/JL46e9jOLrn8+CKfDr9Z7zomF6/vCwkZ/X38w0W5/PgkUQ9N
T/yxPRdGcuOX9NI7PHfelVx+fJPtL1aeCQvPxev/RnrvLV92OCWXnx/k6Vl5
0pumXHjEzR8SbHPC0qVvHj+/yJio9Od/0zzsXyKp3nT0iWZNHj8/ycth9w82
Hc8Da27+kst5LsF/B+Xx85vQF9siNibmYf8VJGhv0qS8ujx+fSD5uQ6V2X3y
+fWDuJvOvOg2NZ9fX4h3ylzBPxvz+fWHHF1fMbT/pXx+fSKLMzb0Xv4mn1+/
yJ99T1QMycvn1zeyZpVrqp9RAb/+kaXn7Swfjyvg10eSUee1wsW1gF8/SdxB
rww4U8Cvr4RY+TklRBbw6y9xtBty5VJBAci49ZmYm11Z07FLIb9+kyf+btH2
kwuhJ7e+kyX3d8umehby6z/xde//WXq7EFZz+wOxu7TN4JqskN8/iEXs1d4t
OkWwmNtfSK/m3vcnjC3i9x/S13LjrsVuRdi/bKIXbnd6kX8Rv3+RoadtdG1l
RXCD299IaeSh4T0kxfz+Rzb8+/fR4knF2P9csj7ZPSxiezG/f5L3bn5+p4OL
+f2VXJsvsfUoKub3X7L76tkC5wEl/P5Mph8XGnmsKuH3b6J/Z8ua6/4l/P5O
hpxwS6tJLeH3f1Jz9VCAd69SPj8g09ILe81wLOXzBzJ/Umvb/BulfH5BvD7N
nPEgq5TPP8iCfxcOW2hexucnxHGSzNZ5YxmOl0KyX5i9JDG0jM9viHHorruR
TWVgxOU/5MFHzcO+08v5/IhIssXTDS+W43gqIq77V4afySzn8yti6t7TP3h4
BXoUk3DHTo179lfw+RlZWrtmcqusAj2KSeE61yX2Ayv5/I74xVw4/ec/lehR
QmBclzBneSWfH5Kn0qlm9sN/okcpcd5/O3j4yZ98fklsDnaINC36yeef5Mb3
kD5+Zio+PyXLRvZ3DV+s4vNXIp5g977mmIrPbwlrWDJ8xRsVn/+SqB+9i39W
qvj8mFQN+OkTZV7F58+kwtdhfMrKKj6/Jgs+XLW286ni828y4lHOptb4Kj4/
J06VDj3N9av5/J30bfJWv5lezef3ZJj+7HEJh6v5/J9c9M6+vDm6Gj1+Eo9H
v82+J6rh7x/I1OlLf99vX4MeP8ntbVZnjc7U8PcfRGprv9s5qQb7oyI09vaZ
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
uko/wg==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
B0/pZ+0cxf2+fB3yvhRqry/h5gfktbsVtOpJuPkD/vqJlXxdCTe/4KFFi/t9
Ha5/Mgg8cbSOkX+O8xN6Flt0Ow6V/x47fyF17xGNouESbn4DVd/6pnIM1/9U
EJ7fcsrDmDsPpkGoxRx7tb8k8JK9f+DCkt4vZiyQcPcX/HUszWHCKm586TDu
wSPXxi0S7v6EVpUbca4HJDCNvX/hsJratP7nJdz9DdJ6vfWn73PjzwRJRnVJ
ofw8iusDaFod/DpbysUjCx6GLHv+pljCrS9w5IL019geCbf+QFiH0ockvShu
fYLqLZtfuplFcesXPC+bsPH2lihufYODn+1H516I4tY/2Jze9G6fXxS3PsLM
/3zHb8yJ4tZPWO4/f2SYgHLrK1wzV3l/dRLl1l/I4qs6l2+jkMauz+DWN+BD
9j3Krd8geOIwZf9HCprs+g5GeaPdbATc+fcr/NPSYbn7TwY2s/sD3C3t71E4
m1uvCuFFVmtAii0Dq9n9BRxU0/vMOM9w+w8Uz1Z/NuEVg+MrBKW+dolhqQy3
f8GaO8OmFDYx8Ijd34C/eN3wwCHR3P4Hm6LHTp+6OBrHXwwwLsjj1GFuvS2G
BdoefDfvaG5/hUF8/cfnMqK5/RfGzps71UYYw+3PoBwXMHXC9Bhu/wb7xqbn
ov3cflUKFQdmT298HsPt/7Cryt9KpSiGyw/gryXjDVfrxXL5A+y/W//k+wZu
PyyDy+Z+5/IfxXL5B6wZuOPYrMJYLj+BkHna/UaMisP5Ug51STNzn/4bx+U3
YFHYe8/n8DjozeY/8L6+2C5NzJ2fK8Dw4sW412vjcT5VQJ2t1+Ezb+K5/Aqe
5qwv2s9PQI9K4DXOjnfZ+P/8DOy+ua/mRySgRyVoaPy1rEKHO89+h4uOH7Rs
HBPR4zsseKuTc6Xy//khRHvpXHZdLUWPH1Dg2THikTwfx/wS0nWcJGnTZFz+
Cc1OsZ4bAmVcfgoTNl08tccoictfYXV/O5fxAUlcfgu1LYvis6d84PJfSFd7
9cs95gOXH4PxQmiNWJXM5c/gx2gP2PsjmcuvoX6DRU/VhRQu/4aiIrOZZ8ak
cvk5VOxbsvbwp1Quf4ftD79PVj/zkcvvYdPBi0ardNO4/B8OXJk0Zv5/aejx
Cy49b2pX/ZrGnR+gqz6jMXteOnr8Ajur945f/NO58wdMuDPHZvnQTzieWrBd
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"A solution to Painlev\[EAcute] II\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.484034898273226*^9, {3.484034974039329*^9, 3.484035051858007*^9}, {
   3.484035208984539*^9, 3.4840352659947443`*^9}, 3.4840354149083433`*^9, 
   3.484037246132744*^9, 3.484316154687765*^9, {3.487506095116729*^9, 
   3.4875061230866823`*^9}, 3.494228452338524*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Painleve III", "Section",
 CellChangeTimes->{{3.483792607173275*^9, 3.483792609054174*^9}, {
  3.483964015241271*^9, 3.483964030943122*^9}}],

Cell[TextData[{
 "The Painlev\[EAcute] III differential equation is\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "''"}], " ", "=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"u", "'"}], ")"}], "2"], "u"], "-", 
     FractionBox[
      RowBox[{"u", "'"}], "x"], "+", 
     RowBox[{
      FractionBox["4", "x"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[CapitalTheta]", "0"], 
         SuperscriptBox["u", "2"]}], "+", "1", "-", 
        SubscriptBox["\[CapitalTheta]", "\[Infinity]"]}], ")"}]}], " ", "+", 
     " ", 
     RowBox[{"4", " ", 
      SuperscriptBox["u", "3"]}], "-", 
     FractionBox["4", "u"]}]}], TraditionalForm]]],
 "\n\nThe following example is based on an example in [Olver 2010] \
constructed from the RH problem in [Fokas et al. 2006]. "
}], "Text",
 CellChangeTimes->{{3.48395373459581*^9, 3.483953799439085*^9}, {
   3.4839640339149103`*^9, 3.4839640342561493`*^9}, {3.487485930076388*^9, 
   3.4874859593117313`*^9}, {3.487488611519506*^9, 3.487488613117949*^9}, {
   3.487489744965104*^9, 3.487489758318638*^9}, {3.487489905005719*^9, 
   3.487490018580587*^9}, {3.487491238181477*^9, 3.487491238695202*^9}, 
   3.48750408598372*^9, {3.4875042077297907`*^9, 3.487504220230197*^9}}],

Cell[CellGroupData[{

Cell["Setting up the jump curves", "Subsection",
 CellChangeTimes->{{3.48750409352287*^9, 3.487504097130541*^9}}],

Cell[TextData[{
 "We choose an arbitrary choice of Stokes' multipliers, and the constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "\[Infinity]"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "0"], TraditionalForm]]],
 ".  (In case it seems odd that we have 3 degrees of freedom where the ODE \
with initial conditions only has 2 degrees of freedom, note that there is an \
equivalency class for the Stokes' multipliers.)"
}], "Text",
 CellChangeTimes->{3.487504102477817*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalTheta]\[Infinity]", "=", 
   RowBox[{"1", "+", 
    RowBox[{"123", "/", "1000"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTheta]0", "=", 
   RowBox[{"3", "+", 
    RowBox[{"43", "/", "100"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"1", ",", "0"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"2", ",", "\[Infinity]"}], "]"}], "=", "3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"1", ",", "\[Infinity]"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "\[Infinity]"}], "]"}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", "\[CapitalTheta]0"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "0"}], "]"}], 
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "0"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "\[Pi]", " ", "\[CapitalTheta]0"}], 
           "]"}]}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", "\[CapitalTheta]\[Infinity]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "\[Infinity]"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]\[Infinity]"}], 
           "]"}]}]}]}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], "]"}]}], "//", 
    "First"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.483793009602326*^9, 3.4837930760202723`*^9}, {
   3.483793106073081*^9, 3.4837932730878143`*^9}, {3.4837934926722727`*^9, 
   3.483793507619803*^9}, {3.48379397995684*^9, 3.4837939804602747`*^9}, {
   3.483794014743149*^9, 3.483794042638172*^9}, {3.4837940917858343`*^9, 
   3.483794102845787*^9}, {3.483794136540511*^9, 3.4837942020504093`*^9}, {
   3.4837942322848663`*^9, 3.483794234728747*^9}, {3.483794280304882*^9, 
   3.483794345637453*^9}, {3.4837943800446863`*^9, 3.4837944654101458`*^9}, {
   3.483794517714616*^9, 3.483794571270279*^9}, {3.483795861714726*^9, 
   3.483795891983179*^9}, {3.483860879483436*^9, 3.483860895420171*^9}, {
   3.483953805960238*^9, 3.483953819116086*^9}, {3.483960307806177*^9, 
   3.483960616695137*^9}, {3.483964088628352*^9, 3.4839643624376183`*^9}, {
   3.4839645133113003`*^9, 3.4839645690534153`*^9}, {3.483964631784286*^9, 
   3.4839646457322283`*^9}, {3.483964699093856*^9, 3.483964766546376*^9}, {
   3.483965127481391*^9, 3.4839651356533203`*^9}, {3.483966044205883*^9, 
   3.483966061844757*^9}, {3.483969416605899*^9, 3.4839694335518703`*^9}, {
   3.4857612090469503`*^9, 3.485761209973154*^9}, {3.485761293676112*^9, 
   3.4857612943000793`*^9}, {3.485847802633506*^9, 3.485847825487997*^9}, {
   3.48611579317172*^9, 3.486115793851317*^9}, {3.486115851712677*^9, 
   3.4861158519287558`*^9}, 3.486196830804933*^9, 3.486202217689258*^9, {
   3.486202703228278*^9, 3.48620272219947*^9}, {3.486202754708049*^9, 
   3.486202827321539*^9}, {3.4862066073228407`*^9, 3.486206608667966*^9}, {
   3.48657131487991*^9, 3.486571314976543*^9}, {3.486571345380213*^9, 
   3.486571345557633*^9}, {3.487490149889411*^9, 3.4874901509019423`*^9}}],

Cell["\<\
We require a matrix EE, which is similar to an eigenvalue matrix.  We \
determine this matrix by solving a system of equations, where we impose that \
the bottom row of EE is (1,1) (which may break down for other choices of \
Stokes multipliers and \[CapitalTheta] constants).\
\>", "Text",
 CellChangeTimes->{{3.48748555370363*^9, 3.48748561178929*^9}, {
  3.4874856503659687`*^9, 3.487485667347102*^9}, {3.487485828221442*^9, 
  3.487485877483302*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EE", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"e1", "e2"},
        {"1", "1"}
       }], ")"}], "/.", 
     RowBox[{"First", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", GridBox[{
                {"e1", "e2"},
                {"1", "1"}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"1", "+", 
                  RowBox[{
                   RowBox[{"s", "[", 
                    RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
                   RowBox[{"s", "[", 
                    RowBox[{"2", ",", "\[Infinity]"}], "]"}]}]}], 
                 RowBox[{"s", "[", 
                  RowBox[{"1", ",", "\[Infinity]"}], "]"}]},
                {
                 RowBox[{"s", "[", 
                  RowBox[{"2", ",", "\[Infinity]"}], "]"}], "1"}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"Exp", "[", " ", 
                  RowBox[{
                  "I", " ", "\[Pi]", "\[NonBreakingSpace]", 
                   "\[CapitalTheta]\[Infinity]"}], "]"}], "0"},
                {"0", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", " ", "I"}], " ", "\[Pi]", 
                   "\[NonBreakingSpace]", "\[CapitalTheta]\[Infinity]"}], 
                  "]"}]}
               }], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"1", "+", 
                  RowBox[{
                   RowBox[{"s", "[", 
                    RowBox[{"1", ",", "0"}], "]"}], " ", 
                   RowBox[{"s", "[", 
                    RowBox[{"2", ",", "0"}], "]"}]}]}], 
                 RowBox[{"s", "[", 
                  RowBox[{"1", ",", "0"}], "]"}]},
                {
                 RowBox[{"s", "[", 
                  RowBox[{"2", ",", "0"}], "]"}], "1"}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", " ", "I"}], " ", "\[Pi]", 
                   "\[NonBreakingSpace]", "\[CapitalTheta]0"}], "]"}], "0"},
                {"0", 
                 RowBox[{"Exp", "[", " ", 
                  RowBox[{
                  "I", " ", "\[Pi]", "\[NonBreakingSpace]", 
                   "\[CapitalTheta]0"}], "]"}]}
               }], ")"}], ".", 
             RowBox[{"(", GridBox[{
                {"e1", "e2"},
                {"1", "1"}
               }], ")"}]}]}], "\[IndentingNewLine]", "]"}], "\[Equal]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"e1", ",", "e2"}], "}"}]}], "]"}], "]"}]}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.486202234687614*^9, 3.486202342451496*^9}, {
  3.4862023967873163`*^9, 3.48620240091542*^9}, {3.486202866912347*^9, 
  3.486202868623308*^9}, {3.486291620030908*^9, 3.4862916203410587`*^9}, {
  3.486292461571754*^9, 3.486292462076357*^9}, {3.487485676339238*^9, 
  3.4874858392143173`*^9}, {3.487485887461132*^9, 3.487485893012843*^9}}],

Cell["We can now construct the jump curve functions", "Text",
 CellChangeTimes->{{3.4874859114430933`*^9, 3.487485917480802*^9}, {
   3.487488639814295*^9, 3.487488695586135*^9}, 3.4875040499669647`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"I", " ", "x"}], "2"], 
      RowBox[{"(", 
       RowBox[{"z", "-", 
        RowBox[{"1", "/", "z"}]}], ")"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{"_", ",", 
       RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{"_", ",", 
       RowBox[{"_", "?", "ZeroQ"}]}], "]"}], ":=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"3", ",", "2"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}]}]}
        }], ")"}], ".", "EE", ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}]}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
        {"0", 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"4", ",", "0"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", "\[CapitalTheta]0", " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
        {"0", 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"1", ",", "4"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"s", "[", 
             RowBox[{"1", ",", "0"}], "]"}]}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]}
        }], ")"}], ".", "EE", ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{" ", 
           RowBox[{
            RowBox[{"PowerBranch", "[", 
             RowBox[{"z", ",", 
              RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ",", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{"-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}]}]},
         {"0", 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}]}]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", 
             ")"}]}]}]}
        }], ")"}], ".", 
      RowBox[{"Inverse", "[", "EE", "]"}], ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{" ", 
           RowBox[{
            RowBox[{"PowerBranch", "[", 
             RowBox[{"z", ",", 
              RowBox[{
               RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}],
              "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]0"}], "-", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], "0"},
         {
          RowBox[{
           RowBox[{"-", 
            RowBox[{"s", "[", 
             RowBox[{"2", ",", "0"}], "]"}]}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
            "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", "\[Pi]", "\[NonBreakingSpace]", 
              "\[CapitalTheta]0"}], " ", "-", " ", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ",", "0"}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}], "-", 
             RowBox[{
             "I", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]0"}]}],
             "]"}]}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"3", ",", "4"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}]}]}], 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"s", "[", 
             RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], "  ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ")"}], " "}]}]},
         {"0", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", 
             ")"}]}]}]}
        }], ")"}], ".", 
      RowBox[{"Inverse", "[", "EE", "]"}], ".", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}], 
           " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"2", ",", "0"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "0"}], "]"}]}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"-", "\[CapitalTheta]0"}], ",", "0"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
         RowBox[{"1", " "}]}
       }], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.485761492092494*^9, 3.485761503561166*^9}, {
   3.485761576281866*^9, 3.485761702013373*^9}, {3.4857618541789303`*^9, 
   3.485761866374658*^9}, {3.4857619239315*^9, 3.485761948506217*^9}, {
   3.485761986800727*^9, 3.4857620300110607`*^9}, {3.485762095872529*^9, 
   3.485762128074883*^9}, {3.485762248207458*^9, 3.485762321636221*^9}, {
   3.4857623664903917`*^9, 3.485762412855248*^9}, {3.485762469876068*^9, 
   3.4857625059072123`*^9}, {3.4857625522050858`*^9, 3.485762555583623*^9}, {
   3.485762612252857*^9, 3.4857626458195066`*^9}, {3.485762765657028*^9, 
   3.485762767676353*^9}, {3.485762824768569*^9, 3.485762844404627*^9}, {
   3.4857634905197783`*^9, 3.4857635630720043`*^9}, {3.4857638619167433`*^9, 
   3.485763872143361*^9}, {3.4857733676601667`*^9, 3.485773405269556*^9}, {
   3.4857734423597937`*^9, 3.485773492172261*^9}, {3.485774883151413*^9, 
   3.485774899144347*^9}, {3.485774955033268*^9, 3.485774972541909*^9}, {
   3.485775030670403*^9, 3.48577503607489*^9}, {3.485775075742154*^9, 
   3.485775086437928*^9}, {3.4857751224687777`*^9, 3.485775125704262*^9}, 
   3.485775177680366*^9, {3.485775428521337*^9, 3.485775453044413*^9}, {
   3.485775855748686*^9, 3.4857758754019747`*^9}, {3.485775994710734*^9, 
   3.485776011766486*^9}, {3.486115980739867*^9, 3.48611610511839*^9}, {
   3.486116136733714*^9, 3.4861162084057617`*^9}, {3.486116287674693*^9, 
   3.4861163258964376`*^9}, {3.486116491995373*^9, 3.486116879768591*^9}, 
   3.486117167970155*^9, {3.4861201612804403`*^9, 3.486120166520549*^9}, 
   3.486126311110031*^9, 3.4861264596121902`*^9, {3.486208457427186*^9, 
   3.486208703812707*^9}, {3.4862089376922293`*^9, 3.4862089413091803`*^9}, {
   3.486292479913151*^9, 3.4862924822400417`*^9}, {3.486292589101178*^9, 
   3.486292590420898*^9}, {3.487504057530204*^9, 3.487504060264277*^9}}],

Cell[TextData[{
 "We also need the derivative with respect to ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.487504063004365*^9, 3.487504070131681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Gx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]x", "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["I", "2"], 
    RowBox[{"(", 
     RowBox[{"z", "-", 
      RowBox[{"1", "/", "z"}]}], ")"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"ZeroMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "ZeroQ"}]}], "]"}], ":=", 
   RowBox[{"ZeroMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"3", ",", "2"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "  ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}], 
          " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"z", "^", 
            RowBox[{"(", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], "   ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], "  ", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
        RowBox[{"z", "^", 
         RowBox[{"(", 
          RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], " ", ")"}]}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
      {"0", 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"4", ",", "0"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], "  ", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "0"}], "]"}], " ", 
        RowBox[{"z", "^", 
         RowBox[{"(", "\[CapitalTheta]0", " ", ")"}]}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}]},
      {"0", 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"1", ",", "4"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], 
         RowBox[{" ", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
             ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}]},
        {"0", 
         RowBox[{
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}]}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], " ", "\[CapitalTheta]0"}], ",", 
            
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}]}
       }], ")"}], ".", "EE", ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Theta]x", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], " ", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}]}]},
        {"0", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ",", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}]}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], 
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{
              RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
            "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]0"}], "-", 
             RowBox[{"\[Theta]", "[", 
              RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}]}], "0"},
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "0"}], "]"}]}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
           "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "I"}], " ", "\[Pi]", "\[NonBreakingSpace]", 
             "\[CapitalTheta]0"}], " ", "-", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ",", "0"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "-", 
            RowBox[{
            "I", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]0"}]}], 
           "]"}]}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], "  ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
           "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"I", " ", "\[Pi]", " ", "\[CapitalTheta]0"}], "-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], "0"},
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "0"}], "]"}], 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ",", "0"}], 
           "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "I"}], " ", "\[Pi]", "\[NonBreakingSpace]", 
             "\[CapitalTheta]0"}], " ", "-", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ",", "0"}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}], "-", 
            RowBox[{
            "I", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]0"}]}], 
           "]"}]}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"s", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], "  ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}], " "}]}]},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], "  ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], "/", "2"}], " ", 
            ")"}], " "}]}]},
        {"0", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]\[Infinity]", "/", "2"}], " ", ")"}]}]}]}
       }], ")"}], ".", 
     RowBox[{"Inverse", "[", "EE", "]"}], ".", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[Theta]x", "[", 
            RowBox[{"x", ",", "z"}], "]"}]}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[CapitalTheta]0"}], "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"\[Theta]x", "[", 
           RowBox[{"x", ",", "z"}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"\[CapitalTheta]0", "/", "2"}], " ", ")"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"x", ",", "z"}], "]"}], "]"}], " "}]}
       }], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {
       RowBox[{"2", " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], " ", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "0"}], "]"}], " ", 
        RowBox[{"PowerBranch", "[", 
         RowBox[{"z", ",", 
          RowBox[{"-", "\[CapitalTheta]0"}], ",", "0"}], "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {
       RowBox[{"2", " ", 
        RowBox[{"\[Theta]x", "[", 
         RowBox[{"x", ",", "z"}], "]"}], " ", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], " ", 
        RowBox[{"PowerBranch", "[", 
         RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"\[Theta]", "[", 
           RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " "}], 
       RowBox[{"0", " "}]}
     }], ")"}]}], ";"}]}], "Input"],

Cell["\<\
We construct the list of Funs corresponding to the jump curve, with the \
number of points chosen adaptively to obtain an accuracy of tol.  Here we \
demonstrate that we needn't only use lines, but can also use arcs.\
\>", "Text",
 CellChangeTimes->{{3.487488706321376*^9, 3.4874887489195232`*^9}, {
  3.487488785068836*^9, 3.487488803533421*^9}, {3.487488883058488*^9, 
  3.487488884466282*^9}, {3.487491420112252*^9, 3.4874914206693077`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GG", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"x_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"3", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"4", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"3", " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"1", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"5", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"2", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "  ", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"3", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGx", "[", 
    RowBox[{"x_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"3", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
       ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"4", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"3", " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"1", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"5", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"2", ",", "0"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "I"}], " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "  ", 
            RowBox[{"\[Pi]", "/", "4"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"3", ",", "4"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1.", ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
       ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "I", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "I", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.485761356731779*^9, 3.485761362182665*^9}, {
   3.4857614735555143`*^9, 3.485761480141344*^9}, {3.485761708850906*^9, 
   3.485761713826528*^9}, {3.485761785085877*^9, 3.485761816125149*^9}, {
   3.485761904982132*^9, 3.4857619342868423`*^9}, {3.4857619664481153`*^9, 
   3.48576196786344*^9}, {3.485762041572873*^9, 3.485762071696319*^9}, {
   3.485762129450769*^9, 3.485762130957165*^9}, {3.485762172372815*^9, 
   3.485762198726289*^9}, {3.485762329220106*^9, 3.4857623602123203`*^9}, {
   3.485762416017398*^9, 3.48576243680163*^9}, {3.4857625107372427`*^9, 
   3.4857625424675293`*^9}, {3.4857626539632463`*^9, 3.485762675231332*^9}, {
   3.485763241192918*^9, 3.4857634526164923`*^9}, {3.485763573564083*^9, 
   3.48576359698658*^9}, {3.485763726325634*^9, 3.485763848500395*^9}, {
   3.485773419255393*^9, 3.4857734306537867`*^9}, {3.485773496815475*^9, 
   3.485773519695578*^9}, {3.4857735604832478`*^9, 3.48577370485777*^9}, {
   3.485848811299396*^9, 3.485848821260841*^9}, {3.4858489072156076`*^9, 
   3.4858489117912817`*^9}, {3.4858489820700197`*^9, 
   3.4858490204802923`*^9}, {3.486116907741741*^9, 3.486116908032866*^9}, 
   3.4861174206268673`*^9, {3.486117491108941*^9, 3.4861175028493147`*^9}, {
   3.486121551304685*^9, 3.486121577528928*^9}, {3.48620871258302*^9, 
   3.486208729769105*^9}, {3.48620881465942*^9, 3.4862088291261806`*^9}, {
   3.48620886389688*^9, 3.4862088745158787`*^9}, {3.487488751656217*^9, 
   3.4874887707325363`*^9}}],

Cell["\<\
For speed, we want to reuse the RHSolver for multiple values of x.  This is \
only possible if we ensure that the lengths do not depend on x.  Therefore we \
fix the lengths of each curve.  Since we will evaluate the solution in the \
interval (3,5), we take the maximum of these two points as our lengths.\
\>", "Text",
 CellChangeTimes->{{3.4874888329891233`*^9, 3.487488975918322*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tol", "=", 
      RowBox[{"10.", "^", 
       RowBox[{"(", 
        RowBox[{"-", "8"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"lngs", "=", 
     RowBox[{"Max", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "/@", 
           RowBox[{"GGx", "[", 
            RowBox[{"5.", ",", "tol"}], "]"}]}], ",", 
          RowBox[{"Length", "/@", 
           RowBox[{"GGx", "[", 
            RowBox[{"3.", ",", "tol"}], "]"}]}]}], "}"}], "//", "Thread"}], 
       ")"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.486121616063117*^9, 3.486121616141993*^9}, {
   3.486121648407321*^9, 3.486121683149433*^9}, {3.486193616172421*^9, 
   3.486193631707151*^9}, {3.486202954795515*^9, 3.486202955081759*^9}, {
   3.4862040036033382`*^9, 3.486204003879485*^9}, {3.486206413822317*^9, 
   3.486206429434413*^9}, {3.486206534072114*^9, 3.486206553070509*^9}, {
   3.486208967643529*^9, 3.486208969545773*^9}, {3.486209063054384*^9, 
   3.4862090642937803`*^9}, 3.486292581718381*^9, {3.486292643550961*^9, 
   3.486292643963415*^9}, {3.487488982379719*^9, 3.487488999024117*^9}, 
   3.4874891577008343`*^9}],

Cell["\<\
We can now construct jump curves with the fixed number of points.\
\>", "Text",
 CellChangeTimes->{{3.487489004157441*^9, 3.487489020028335*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GG", "[", "x_", "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"3", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"4", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"3", " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"1", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"5", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"2", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], "  ", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"3", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "3"}], " ", "I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "3"}], " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GGx", "[", "x_", "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"3", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "3"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"4", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"3", " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"1", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"5", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"2", ",", "0"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", "0"}], "}"}], "]"}], 
         ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], "  ", 
              RowBox[{"\[Pi]", "/", "4"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "4"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"3", ",", "4"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Arc", "[", 
          RowBox[{"0", ",", "1.", ",", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "4"}], ",", 
             RowBox[{"3", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Gx", "[", 
            RowBox[{"\[Infinity]", ",", "1"}], "]"}], "[", 
           RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "3"}], " ", "I", " ", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "\[Infinity]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "3"}], " ", "I", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{
         "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4861217092181377`*^9, 3.486121740424041*^9}, {
  3.486209003145423*^9, 3.486209013941434*^9}, {3.4875031330833273`*^9, 
  3.487503138489785*^9}}],

Cell["The jump curve is defined over the following domain:", "Text",
 CellChangeTimes->{{3.487490123744315*^9, 3.487490133175757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DomainPlot", "[", 
  RowBox[{
   RowBox[{"GG", "[", "1.", "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.485849342462214*^9, 3.485849353189301*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.7071067811865476, 0.7071067811865475}], 
    PointBox[{0.7071067811865476, -0.7071067811865475}], 
    ArrowBox[{{0.7071774883290145, -0.7070360669730128}, {
     0.7071067811865476, -0.7071067811865475}}], 
    CircleBox[{0, 0}, 1., {-0.7853981633974483, 0.7853981633974483}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      0.7071067811865475, 0.7071067811865475}]], 
    ArrowBox[NCache[{{3 2^Rational[-1, 2], 3 2^Rational[-1, 2]}, {
       2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{2.1213203435596424`, 
      2.1213203435596424`}, {0.7071067811865475, 0.7071067811865475}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[
     NCache[{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {-0.7071067811865475, 
      0.7071067811865475}]], PointBox[{0, 0}], 
    ArrowBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {0, 
       0}}, {{-0.7071067811865475, 0.7071067811865475}, {0, 0}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.7071067811865475, -0.7071067811865476}], 
    PointBox[{-0.7071067811865475, 0.7071067811865476}], 
    ArrowBox[{{-0.7071774883290145, 0.7070360669730127}, {-0.7071067811865475,
      0.7071067811865476}}], 
    CircleBox[{0, 0}, 1., {2.356194490192345, 3.9269908169872414`}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[
     NCache[{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      0.7071067811865475, -0.7071067811865475}]], PointBox[{0, 0}], 
    ArrowBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {0, 0}}, {{
       0.7071067811865475, -0.7071067811865475}, {0, 0}}]]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.7071067811865475, -0.7071067811865476}], 
    PointBox[{0.7071067811865476, -0.7071067811865475}], 
    ArrowBox[{{0.7070360669730129, -0.7071774883290143}, {
     0.7071067811865476, -0.7071067811865475}}], 
    CircleBox[{0, 0}, 1., {-2.356194490192345, -0.7853981633974483}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.7071067811865476, 0.7071067811865475}], 
    PointBox[{-0.7071067811865475, 0.7071067811865476}], 
    ArrowBox[{{-0.7070360669730126, 0.7071774883290147}, {-0.7071067811865475,
      0.7071067811865476}}], 
    CircleBox[{0, 0}, 1., {0.7853981633974483, 2.356194490192345}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[NCache[{-2^Rational[-1, 2], -2^
        Rational[-1, 2]}, {-0.7071067811865475, -0.7071067811865475}]], 
    ArrowBox[NCache[{{(-3) 2^Rational[-1, 2], (-3) 
        2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
         Rational[-1, 
           2]}}, {{-2.1213203435596424`, -2.1213203435596424`}, \
{-0.7071067811865475, -0.7071067811865475}}]]}},
  Axes->False,
  ImageSize->{Automatic, 458.42560000000003`}]], "Output",
 CellChangeTimes->{{3.4858493448643227`*^9, 3.485849353650868*^9}, 
   3.4874901617965612`*^9, 3.4874923761887007`*^9, 3.4875061256365223`*^9, 
   3.4942284550163383`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Constructing the solution", "Subsection",
 CellChangeTimes->{{3.487504115290043*^9, 3.487504133985238*^9}}],

Cell["\<\
R is the RHSolver, which we construct once for one choice of x (arbitrarily, \
x = 3).  U is then the solution.\
\>", "Text",
 CellChangeTimes->{{3.487489031974717*^9, 3.487489073538479*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"RHSolver", "[", 
    RowBox[{"GG", "[", "3.", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{"GG", "[", "x", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.486121743149794*^9, 3.48612177831146*^9}, 
   3.486209190568563*^9, {3.487492380879369*^9, 3.487492381145381*^9}}],

Cell["\<\
To evaluate the derivative of U (with respect to x), we need the minus values \
of \[CapitalPhi] = I + C U\
\>", "Text",
 CellChangeTimes->{{3.4874896529471416`*^9, 3.487489680266054*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cm", "=", 
   RowBox[{"CauchyOperator", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "R"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPhi]m", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"\[CapitalPhi]m", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cm", "[", 
     RowBox[{"U", "[", "x", "]"}], "]"}], "//", "AddIdentityMatrix"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ux", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"Ux", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Ux", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{
      RowBox[{"GG", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalPhi]m", "[", "x", "]"}], "~", "FunListDot", "~", 
       RowBox[{"GGx", "[", "x", "]"}]}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4862092271770563`*^9, 3.4862092274228992`*^9}, {
  3.486209322900364*^9, 3.4862093231644*^9}, {3.486209425664197*^9, 
  3.4862094260613613`*^9}, {3.486209658845689*^9, 3.486209674276226*^9}, {
  3.487489581825473*^9, 3.487489609735515*^9}, {3.4874896886529408`*^9, 
  3.487489688871664*^9}, {3.4875041545525503`*^9, 3.487504160638308*^9}}],

Cell["\<\
We can now convert from U to the value and derivative of a variable y\
\>", "Text",
 CellChangeTimes->{{3.487489703227069*^9, 3.487489726648142*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]"}], ")"}]}], 
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"U", "[", "x", "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yx", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yx", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"yx", "[", "x", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]"}], ")"}]}], 
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"U", "[", "x", "]"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"x", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]"}], ")"}]}], 
     RowBox[{"DomainIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"Ux", "[", "x", "]"}]}], "]"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.4861186708918867`*^9, 3.4861187140692873`*^9}, {
   3.486118819588092*^9, 3.4861188228637753`*^9}, {3.4861217969838123`*^9, 
   3.4861217986473494`*^9}, {3.4861228126018887`*^9, 3.4861228148579817`*^9}, 
   3.486196614858274*^9, {3.486204258344925*^9, 3.4862042794192953`*^9}, {
   3.486208983230133*^9, 3.486208995346046*^9}, 3.4862090787177887`*^9, {
   3.486209737649621*^9, 3.4862097433870573`*^9}, {3.486209795036072*^9, 
   3.486209795233889*^9}}],

Cell["\<\
u is the solution to Painlev\[EAcute] III\
\>", "Text",
 CellChangeTimes->{{3.4874897309781313`*^9, 3.487489738311674*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "x_", "]"}], ":=", 
  RowBox[{"2", " ", 
   RowBox[{"y", "[", "x", "]"}], " ", 
   RowBox[{"x", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"yx", "[", "x", "]"}]}], "-", 
      RowBox[{"\[CapitalTheta]\[Infinity]", " ", 
       RowBox[{"y", "[", "x", "]"}]}]}], " ", ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.486209751957507*^9, 3.486209778409738*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting the solution", "Subsection",
 CellChangeTimes->{{3.4875041402172117`*^9, 3.487504142504753*^9}}],

Cell["\<\
We construct evaluate it at several Chebyshev points x to construct an \
approximation.  The numerical approximation is badly conditioned near 5.\
\>", "Text",
 CellChangeTimes->{{3.487490292689237*^9, 3.487490319456086*^9}, {
  3.487491051070054*^9, 3.487491074217731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{
    RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uf", "=", 
       RowBox[{"Fun", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "=", "#"}], ";", 
            RowBox[{"u", "[", "#", "]"}]}], ")"}], "&"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{"3.", ",", "5."}], "}"}], "]"}], ",", 
         RowBox[{
          RowBox[{"2", "^", "6"}], "+", "1"}]}], "]"}]}], 
      "\[IndentingNewLine]", ",", "x"}], "]"}], ";"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.486209080572691*^9, 3.486209089893503*^9}, {
  3.4862097037042837`*^9, 3.486209736899102*^9}, {3.4862098080236893`*^9, 
  3.4862098624849577`*^9}, {3.4862099310748777`*^9, 3.486209931306849*^9}, {
  3.486210179085312*^9, 3.486210179615728*^9}, {3.487490218066106*^9, 
  3.4874902893894873`*^9}, {3.4874903322613783`*^9, 3.487490332971571*^9}, {
  3.4874909370358477`*^9, 3.487490938427292*^9}, {3.4875061599864817`*^9, 
  3.487506161665139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearSolve", "::", "\<\"luc\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Result for \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(LinearSolve\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" of badly conditioned \
matrix \\\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\({\
\\(\\(\\(\\(0.5647908980250013` \[InvisibleSpace]\\)\\) + \
\\(\\(2.536884682548818`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.27120905706561826`\\)\\) - \\(\\(0.8439999223937491`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.1091842088214801`\\)\\) - \
\\(\\(0.32042014492245985`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.09076131624120982`\\)\\) - \\(\\(0.2506163519522051`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.0667866001872576`\\)\\) - \
\\(\\(0.1634150753779598`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.06296879619905214`\\)\\) - \\(\\(0.1405782107343418`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 40 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(0.011408055789785506` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03599547183807198`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01121864392553697` \[InvisibleSpace]\\)\\) + \
\\(\\(0.0353978266695185`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01115568461895184` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03519917319263427`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01104557969194036` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03485176265463332`\\\\ \[ImaginaryI]\\)\\)\\)\\), \\(\\(\
\[LeftSkeleton] 768 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 47 \
\[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 768 \[RightSkeleton]\\)\\)}\
\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" may contain \
significant numerical errors.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"LinearSolve::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.487490256456005*^9, 3.4874902882581263`*^9, 3.4874903814277563`*^9, 
   3.4874910412477903`*^9, {3.4875064402285547`*^9, 3.487506469837166*^9}, 
   3.4942287462394*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearSolve", "::", "\<\"luc\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Result for \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(LinearSolve\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" of badly conditioned \
matrix \\\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\({\
\\(\\(\\(\\(0.5647908980250013` \[InvisibleSpace]\\)\\) + \
\\(\\(2.536884682548818`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.27120905706561826`\\)\\) - \\(\\(0.8439999223937491`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.1091842088214801`\\)\\) - \
\\(\\(0.32042014492245985`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.09076131624120982`\\)\\) - \\(\\(0.2506163519522051`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.0667866001872576`\\)\\) - \
\\(\\(0.1634150753779598`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.06296879619905214`\\)\\) - \\(\\(0.1405782107343418`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 40 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(0.011408055789785506` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03599547183807198`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01121864392553697` \[InvisibleSpace]\\)\\) + \
\\(\\(0.0353978266695185`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01115568461895184` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03519917319263427`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01104557969194036` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03485176265463332`\\\\ \[ImaginaryI]\\)\\)\\)\\), \\(\\(\
\[LeftSkeleton] 768 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 47 \
\[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 768 \[RightSkeleton]\\)\\)}\
\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" may contain \
significant numerical errors.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"LinearSolve::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.487490256456005*^9, 3.4874902882581263`*^9, 3.4874903814277563`*^9, 
   3.4874910412477903`*^9, {3.4875064402285547`*^9, 3.487506469837166*^9}, 
   3.494228748926353*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearSolve", "::", "\<\"luc\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Result for \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(LinearSolve\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" of badly conditioned \
matrix \\\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\({\
\\(\\(\\(\\(0.5647908980250013` \[InvisibleSpace]\\)\\) + \
\\(\\(2.536884682548818`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.27120905706561826`\\)\\) - \\(\\(0.8439999223937491`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.1091842088214801`\\)\\) - \
\\(\\(0.32042014492245985`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.09076131624120982`\\)\\) - \\(\\(0.2506163519522051`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.0667866001872576`\\)\\) - \
\\(\\(0.1634150753779598`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(-0.06296879619905214`\\)\\) - \\(\\(0.1405782107343418`\\\\ \
\[ImaginaryI]\\)\\)\\)\\), \\(\\(\[LeftSkeleton] 40 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(0.011408055789785506` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03599547183807198`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01121864392553697` \[InvisibleSpace]\\)\\) + \
\\(\\(0.0353978266695185`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01115568461895184` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03519917319263427`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(\\(\\(0.01104557969194036` \[InvisibleSpace]\\)\\) + \
\\(\\(0.03485176265463332`\\\\ \[ImaginaryI]\\)\\)\\)\\), \\(\\(\
\[LeftSkeleton] 768 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\[LeftSkeleton] \
1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 47 \
\[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] 768 \[RightSkeleton]\\)\\)}\
\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" may contain \
significant numerical errors.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"LinearSolve::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.487490256456005*^9, 3.4874902882581263`*^9, 3.4874903814277563`*^9, 
   3.4874910412477903`*^9, {3.4875064402285547`*^9, 3.487506469837166*^9}, 
   3.494228751021586*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"stop\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Further output of \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(LinearSolve :: \
\\\"luc\\\"\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" will \
be suppressed during this calculation.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.487490256456005*^9, 3.4874902882581263`*^9, 3.4874903814277563`*^9, 
   3.4874910412477903`*^9, {3.4875064402285547`*^9, 3.487506469837166*^9}, 
   3.494228751057723*^9}]
}, Open  ]],

Cell["Here is a plot of the solution", "Text",
 CellChangeTimes->{{3.487490943998785*^9, 3.487490948014348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReImPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"uf", "[", "x", "]"}], "//", "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3.", ",", "5."}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<A solution to Painlev\[EAcute] III\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.487506469724312*^9, 3.4875064804290733`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
VW1f62rTTfdXGQr+Ya45dmFL7b5u+n+F05sS
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], Thickness[Large], Dashing[{0, Small}], 
    LineBox[CompressedData["
1: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
6Rnsa0lL4s76TaD/AJQBTxg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3., 0},
  PlotLabel->FormBox[
   "\"A solution to Painlev\[EAcute] III\"", TraditionalForm],
  PlotRange->{{3., 5.}, {-2.496676421964371, 0.6673196313376756}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4874902590800943`*^9, 3.487490321312312*^9, 
  3.487490398579227*^9, 3.487490930521764*^9, 3.4874910786194344`*^9, 
  3.487506499806603*^9, 3.494228798082432*^9}]
}, Open  ]],

Cell["\<\
And here is the relative residual of the differential equation, demonstrating \
that we are indeed solving the Painlev\[EAcute] III ODE.\
\>", "Text",
 CellChangeTimes->{{3.4874909539587717`*^9, 3.487490968693528*^9}, {
  3.487491086546105*^9, 3.487491097376514*^9}, {3.487506258599483*^9, 
  3.48750627198667*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xf", "=", 
   RowBox[{"Fun", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"uf", "//", "Domain"}], ",", 
     RowBox[{"uf", "//", "Length"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"uf", "''"}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"uf", "'"}], ")"}], "^", "2"}], "/", "uf"}], " ", "-", 
            
            RowBox[{
             RowBox[{"uf", "'"}], "/", "xf"}], " ", "+", 
            RowBox[{
             RowBox[{"4", "/", "xf"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[CapitalTheta]0", " ", 
                RowBox[{"uf", "^", "2"}]}], "+", "1", "-", 
               "\[CapitalTheta]\[Infinity]"}], ")"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"uf", "^", "3"}]}], "-", 
            RowBox[{"4", "/", "uf"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"uf", "''"}]}], ")"}], "[", "x", "]"}], "//", "Abs"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3.", ",", "5."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Relative error in residual for Painlev\[EAcute] III\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.486209854871789*^9, 3.486209859209035*^9}, {
   3.486210185579576*^9, 3.486210186154552*^9}, {3.486210508607329*^9, 
   3.4862105118144608`*^9}, {3.486210569952359*^9, 3.4862105881048603`*^9}, 
   3.487503139424116*^9, {3.4875064866657553`*^9, 3.487506513701096*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
SOh76L9GW8iDPesTxWqPQT/YbequuwPzjNKmsxEnSGhCIubkmA8dW9EIo54I
Evq9fktzkyXkSdrIcu1ToF86a7U3atGxGb2m+lok7Ccgb5eCLB2/pF8K+RNF
Qne/8T2PXUXH+gwfVbsYElob2u1tO0PDtYztP8pOk9DgALE9sg/8l/nTPSgO
ni+fnV1STcPBW5ZXNcdD/aaeqvgK84TqDorwukQS6gz/dGkz9Pu4g5z3ibOw
Xva9sJvg3/leG569Pwef+66L4I+Bej+mK8VJAv2zpqUchX6WT7AMPHOBhDpG
rII6fGm4N82tqTcZ+utVUf7///03/W6AguZFEtrhRg9zd4R6r4g8npRKQvwr
CjoidoMeNCa/G7lEQtJDezxDzWBe6cxioisk1Kqt5WdqSMNnvz6MvnoV/CQk
vX4S0bDxXO2nyTS4zwfsjoPaNLyCr03NJB36of7ztQItGsbi/YlZ1+E+Pa/H
VmvQcLjS1MCfGyQUt/xFyiU1GtbS5NK2yiChG7GBjI2qNDxjSE3Nz4T7O+qy
4cYGGn5gK/+dK5uELq8I+9sI7OOhqu+YQ0KrTHh2VMP3acF610tySehk1eZd
Qeo0PHjaakbgNgk9yt16Y2oj5IFL7mb774D+ZzpraW2mYadbR3Kr80ioinL0
jKEO5L/SqH8i+ST09uC63TLbafhDfYq17z0SUgp431xvTMMp7dkFzwtIaCh4
MXKTOcxbg8UrpItA318FOp2yhbw1U7c3+D4JxVylZl13hv7nfvfozQMS2rlF
vjf5fz0UHhBUKiah3aN+o/sCaFhHYXr/yRISktL40CoWTsPzqtxPOh6R0E+5
81VFsTDv6QmLqpSB33R8eq+cSsNHrBR848pJKPIMXf5mFg1z3NWe9z0moRaq
B1q4D/oXsH3tpkoS0vuhK2MB8+ztyN1Hk6tIyOSabPLVFhqWyQpcp1cDft7L
Zc0H+aj7QfSJa0/B764Z31TipeOr+OL7KQz++8xMhCEJeaWv5HTOM/CrwujY
RJjHlsnMDK1oBH2p08gj34R5nrNCx+kVCW0PRKLZJXQcqiNyubSJhNb3hekP
Qn+p71IcF3oN9Wn4PJnxkY4nndQNPd6QEO/u9a6PYf4q8NW/WdNCQq72ffIt
MA94nrCeFXtLQpXnlq2sX6BjxXP7d/m3gb6eV3sqsZyB+64H3W54R0LCv4P5
k0G/rhfELMq8h/efvjuy9Q/ktepU29APJHSQy8r22Pj/f3+RW9TaQUJtXhK9
Hz/TceunR7z0LvAnn4Ri0Td0fHas3jnyI9Sj2u3M0QqYL/+2l3V9grziPC9E
5NJxreQvj4ReEhqzEfEpOwrns3NPbtNn6E8D9c1PXOjY71TFF8EvJHQ4oLVt
woSOJYdP7E0aAP24/7vvmgzsV6IvrXUQ8oHo/oX///3wxQ69Dsow+AFHaG3D
b7jPh7xWqV9JiHzonNrfNuifQc+k999gvc9ShZpqaVhavKlZbAz2b8Tf7wN+
0xSeZJT2g4S+CEq+U4R8nn3/Z8zHcajHWm9+TfD30P7ddVKTJOTwbVJVBPpf
0Vhi680pEpJc9N0o5wr1dezYsc/T8D7jpCsmNtDPhd3lsr9IqO+AjipnB9RL
n84vt1lYf9NN+yZdGj4hnKWa85uEcpPfxqzdRMPWhtyHB+fAP+562MlB/zHC
DhSumyehX9L9Be/oNLysoGHU4y/k0cciFzcoQP/00ml5/6CfqF22WmthnqGc
PfBtAfKAVM6pIXHoB/3xbMYS6Mew+oeNwqA/IRZ93svI6NrGcgcGGeo7v3ht
4XIyKti7f1eNAOhJj4jjOBcZOeAR9k8+yEfkkKvKK8iIOZnwsJYX9EGv6/1h
HjKyjtNt5vDQcOzRLcLFvGT0lpGRr7mChp3zblhMryQji+InDz9x07D6p6Vz
6qvI6LebaIQkfM5Pcm86yk9Gbk36/dPAfaier1yAjC5urBs6CM8vC1xvOCdI
RncNfZ4Fw/vP3o6L3kQiI3X5sRFZWJ971yg+RiYj/51vJjxIoGeCOxerCDI6
6bjz1v//e3TStvtbFihkZGWWsNAoBvoUQAnTESYjij9T9JsU+EFuYNlJEVh/
iDgrTw7msY7301iUjNRiiMz//17Vk19rA5c4GfF4dA0JKIN+bL3mt12CjO6n
HjtVAvo2mu387bkkGQ0Ijtf+MgK9fY/Xr1wD5/dpRPeiJQ1f5lPYb7yWjNqe
LmV8BL3f7jfS+0qGjJxUVAYOQd6TzDJZIyhHRtLZ8V8fQj6cfHfPfqc8GWkc
l8nJSaTh65sOt7cownqEb5wJuwP169NGoawno5LTKySsy6B+M9TNrZTIKO32
zQ31MA/PrPjT2E4no/4Sa0U1mM92tkY+7eKQ0biM+PtOBh0XjY6u2qhCRkU1
di4HtoLe8Fhbp2yA5xlusjloTscBMk9ujqsCH2o3jYT5q23T+m+m6mSUWWmR
YXwY8pB1ktodDTJSSf8ybxwB877f3AluTTLq0n52lj+Bjn/Fub100SIjTWVf
stRFOrbNeUWt3kRG2Ws8GyTS6Lj8iZqTxBYyItLTnjxJp2OJzut3grTJ6Ogf
m9dfr9Fx2BTPVOtWMjJ9dFMr+zIdfxT012ZvIyPSnY/hkkkw/yl1nolHZOTx
t606Jwb0SFf37ZAuGX3TZsXdgflwwTFfSm877Hde6mi6Jx07Bwt73NQno2dr
g+pm99Dx0wvhD+YNyOipqZ07w5COZe8NzdsakVFV85medDU67v9cnkQ2JaOX
v11M4oToePu87EfvHWR0wE7gfuw8DeeKJCi+NCOjz9Q/Qq0jNHzQZG/FKXMy
aj7SQHn+jIZf7nvO3WNBRtpb2LLZMG8zIji7NlmRIY8wyKxsGv5evGzgpzXU
c94Him803M/rQ+xdtmT0eqtYojLk6aKRtpD8PWSkuOmTYjn41+E1twT3OZDR
w7N3yRLgf283kvY8dSSDH6atmQS/VLUMyZJygvpRM7JIBL246N03FuJMRoW8
12pGoF5nTptsbHcho9a4QQNuJRq2ySw+peJGRtVyLvc+SUN/VUo1nXUnI7HV
Ew/8QB8k3seIfttHRjc7qtZVEjQcNvHDxeAAGUn+fjpVxQ/9v2pPfpYHGfHv
0FU8Av2urYhnFg6S0bna4cmPy2j4hg59m8MhMpoe/lMz808JL9qlxJd5kVHs
BV1azR8l7BL49x3VB86jofGfxm8ljM/tl/b3JaP8oU59x19KWC7vtWeTHxkl
PdPVY88o4ai6jSVKh8mo+K5GwL1pJTzQnbEQHQD3O1YY9x5Y/zefcd8RMnqX
cfzYPfj+LcqRFO0gMkoO4w5kzyphXtan7qtHQX/e5XQ6zinhg4b6Sr+CyUj0
daWp5l8l/NK1MMAylIxevN6UiReVMOO4WHVhGBmVT90dmuOi4cRLJ3n5j5PR
jYthDl9Wwv3d/2rhEU5Gb7SdfI8LQR55ZZledwL6O/FE+UvQ0/uDlUPSJ6Ff
lMVmX0nSMLGkoHL8FBn9KSBzxcjTcMDqc8c6IsnoTP/f+l8MGm5Tm61XiwY9
qC5myEN+SvV8af/9NNxnsoFCMeQf8u3o+A2xZCSsoqZrCfkwYUCnIjiOjCSy
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
6U9R9pJjYHq9xZxaC9STs1bi2CYGbg7HMu3ARmtoV7ZYg35pqBgFtRLoc6B5
dcxhBi6+Tb786C2cV4K+Vct9BrZ2OfnEuo1AMWYCLWbvGHhWfGJwBpgeYGdZ
8wf0rdVZ8NI7AnEoWy+dUGDiLfFv1DTawb/sPUomLZi4V1fH8T3w5n2oNzaK
iU/NF0YdfQ8c9mz+0WMmrvc+97b0A4HeZr0J+6PGwh6KC3M2HeCXh65o+Iay
MF+Pj+wssDyjjf9RDQvnX+o2utxJoJXnNcNblrHxzl1m/hu7CLRap7fikhob
T/JWX/4AHO4fkvfZmI1TnjJrgj+CHigGJgttYmP10PQhsU8EKjiUt+EUPxt/
UBEQKgd25z/wQaeJhUO/HVPf0w3+t058YeYMC0tmjzr+Bg6+KYzF9Fm42sEh
+koPzO+pKVfdeVjYRfhVvmYv1N/5V6EFTUzM1byprQOYN13ff+IyE+fG3P0T
8hnmUXmPujYPJjbculpOog/Wezx4yxDky6+/4owfA78apI2VUpk4oWjO3+4L
gTLLTaJ6fjAw+6DnlTlgf+7v88tgvm2V6ay52g966fPt+FuYj490Gg1rDRDo
yJ67qgIXGFgkuVyoC1jguc1g4FEGLjNR0ggbBD9b03GmC+bvv5W8MRVD0M93
Mkm/VBjYfeTPhoPD4Cfn4x+3SDHwK+Efn0VGCFRkcb/Ljo+BVVHfuTrgSXVq
XsAs+K/Puy2Hv4KfbY4IWhqCvJ/24tvab5B/2rv4xz6APjyvuNIE/N3BRFm2
kY5bfxYYhI0SaO/dVNVz1XSsJZ05vX6MQNcF7dPkH0J9m17Magc2mAlra4P8
zxdyxjzqO+iH+MKf5Bt0fDgnbEH5B4HsT1Bv21yi444Wn3s9wNHnT1SLnAe9
+udinzhOoCu5k7saYun4Nm33yk0TBErx0DjhEUXHJBvD0mHgVIONe7+foOPg
yE37UichP11hftl9jI57C1kUvZ8wDw/tbr0K/Wv4UebpBPCNP9VF5UdBz3iF
fW9MQf1nVJUVBtGxqBqv1I5peD6z/k0ocLjLn5dzwCNxHlHi8P3BxO/Bt2cI
FFmusxAHem72+LOi9S94XmnZytcw7zwabGtbPgv36RzJM3icjtdQXpy6D+xG
e/rrzUnIO1srOE6/CXSC9SIoKQb051BBN/8c6GvZ+adKCXS8+3JGwmNgy+/N
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
WbD+qda6zGt43wO7/jT3s4C1ZNXh/ck0MtwlWTrQxQKJA1Ox/CnY53yf9sV2
sGBpVmtFIbKhp212ZTMLeGbzxh2vox7opfn4NrBgdEeMgugN7A9b/7Q/qGNB
942T/7268U+/b1pYvGZB88jO86du4vtpTYUEIFfocvPlU/F5/6z8KveGBU+u
CPQ0IZvUhYxvaWTB3e7+FUG3ML9JhpkNt7AgUb1aXy2NRh7A3zr5DyyIOJ/h
0YWcPyVwabSbBWdaz9+Ovk0jS7xK99sNssBFyaGZpNNI81K1zpApFtic1uMd
Ro6S0aTc+Niwq1pa/fodGtkivvXuhhXov6t4HLZn4Lz8jH46jf69xvljzAyy
IvRcaNFgg/yz4heZd2lEz+eZ1xDuu7Bg0tj+e5h/Uyb3eDiwYaH1abnF92nk
kavgQAr66e/svaZFyPFPp5SzMN/086wNOpKJelXM7BgtZsP7XctzRR+gH5Sv
HnuNebkudfTLK+TV91bvzF/IAfhZT3lm0UjiN2+NjeoceLQ5W08hG/N6xCdF
McxnqVcj3ZqR63dmJype50BMj9OtoIf484bVJFw/ckC+tOem8iPMQ10lHU/k
cB/jbG+8R47S0j2+1J0Lhq7vU0Jz0B96mT6etVxoN9ybvOYxvp/FZv0tK5Th
qHRj0mfkg52C0+2YR6entiVG5OLzpPULNVsoQ2Tjq3iNPBpJYzL2j5kqg8R9
3bhu5JaM4IPqasqQHfjsalQ+jbzd1M76yasMxFIjRqsA9Xt10puih1xoXPP4
ci/y7UO+AsoHuGAnwImOeUIjTXY6FSM0Lox9zbhECtFPexwZpxvQL0tkL/5A
fl0w45AfxwGRuJSI+CLUg4wn9AR7DmQcXxm++SmNWJxpPq6+DvOpYcyFYWSf
liaFSkEOVEstDb1WjH5yUTEuB/uh5dSF84bP8P3lZv66oX4ONMwPHkM2iMzJ
vPUA+9C9s4E3SmhE7s9mmR/Yl4QCfwdsK8W+6lyvvQD1+uZ+D/9J5AR3Hu2n
mEdV1wz7pQGN6MY/P9b2HxteLHE6s/M5jaxynrX/9/cvZl+/+kwjXwhwu1aA
/tXzzMY7o4xGTD91Wv/7fZ5XbIeXaTn+/ON8k3lybFh0/D9PnheY7xfP5RNY
zYbELQ0emcipTqG8a0XYwJLa5m7+Et9POWtQgUJ9maw4Ob8C9yNcc7QN9397
g86Jh8irOge2GSJ/vlt83PIV6mNGHNd9GRtOnFvnsrCSRvYdLCmyWs6Guftz
nHORkzqGBARWot+rsZ1sqjD/x9x1CpHE+V+ScWRJNeYhl+Xu7Zh/87tlHJ8g
L85U8aapssHwWfIh+xoasRX6Nqm/kQ3tV0UdhGoxX2uXcyO2seGoyxW7YuSr
BdmjczEPTBsIHnR8jf1AOra4Dv0wUvKCzfI6Gok8RxMXD2aDxOQ8a0CeZ/g7
STqZDQ/r/Q44v6GRypQFFjKYP3XuTu0Xrcd9WGsQf6KFDY0B7hYvkENseZ57
TrLBzmLI3LUB+/Ec0ZRCzENjqkf3ijeiXhx+zvvFCOdp8VezSmQv/iRWqzfO
U7e1qftbvM+en0nVOThPxe92SzXRyAuppgsuPzmw/qrZrlrk5686Hmlv4kLN
sfodXs2YpyuiPZcmcsHSYOt2uRYaCfZqG1LEeR+QqNhW/499Tu2bMVEGvwmy
1bcV7/folTktucogVP/USKkN81bcZuGwgypwM2OtYRPyJi/7PT1/VEE14JGB
fzv6c/BQ+wv8/MU+lj7rHY0sNEyo9c1XBjPVO3ptyFeiPafrdypDD7+MblAH
6reaM3PlImWY/0v/sdx7GhHV+jvz4h4XZD4dkXuJLBheffrEf+iPVZFXHT7Q
SM/Y+CFYygXrx4/4+D5i/u4rvL33LQf8kps905EvaRS4zkN9uRYy1WvwiUb6
c0QGtE9woOjEaotvyKmXn2UOGnKgbb9OTchnGvmrb5Sgj31+XN9BS6mTRnpz
5A+l8WKfV77woBI5zktKPeo76qvYA4kjXTj/9ftWZtSzYff8hkuLvuC8GxSl
pBRhPhwc47mHPPr4p4465tGLbaInjbux71W1qmjGYt4q0/rSh8wt0hzxD2FD
TaaNafhX7LNVxVf7/v33c7FBL5k9NGJvV3/KwhX1OSBjbS0yP08sp+gwGxSc
au84f6ORm2taWydsMJ+aDYsK9OI+1J3y5rVkw8FNy8MeIJsULrnWZs6GALrG
H5Pv2G8NzAaOYL67QVk6DyLXCq5fmodcMnP2w8U+GonRf+n0ZB/q+7db27n9
NOKbfErKA+f9d8Or0jfIaY67JgcxD4oW9yu7/kD9DrzrzjrKhnXpS1OFBmgk
x25991rMA/9FqVGPkOsD3ELF/NDvvfcG7RrEvlAvUtUThvnA3ufXCHLsDa1T
WQm4H9uvH7o8RCNjB1REQ++hn2iUt6oOox/Mj9h68Rnqm8w3w7fIN83a5T43
Yl4UWFzkNoL6li90+SbqIWOCw1w+in1T/uHtP/M5YNi5+1ouclOhVJq4DAcO
1ZwSMPuJ9zH7PmSdLgeC8hL9fiEv1JlwPufAgVvXS4aujtHIkx1GzaoRHCi7
0GWz9hfmBYvlVR75HPjsxtfYgiwt+FLeppsD4obbc0UmaORYuMaZdcZcWK96
Uv4J8pWxlU3r/LmwTzw21nwS+92DyanleVzw4itaMIU83e/9QaSbC7HDH7wS
pvA+Ni4INpqnDLnv5vRp/sa+Gnad0cavDI0v5Pe/Q75nfZx3wQJlGM4yqvX+
QyNWvp+NxUa5sDThmPaqadyHPMOxfZXY1wKjs54iz72zy6ogjgvbjuVJWs7g
95Pd8me7AxdCdWbmJP+lEZ6DWTUDmHfTmdJu2rOYt9Wj/Nd2cODlCv3uD8i1
6mpXtHM50D3raObHQxGhTLHoySgOzO2LqJCYQxFvJ/5FOrg/Uk0P15Uii9MN
NvaYcmBjSVOG9VyKbNJ7IJW/gQOWGZMreeZRpEutOTUA98nnsnj4DWRedYN0
CRoHrIbLz22fT5EinnmmEv/69XYn72lkz16ri+IjON+ZtJP3eClya3hsye9u
NvDzFx0x56PI/g8bK1M62DB42NaWbwFFoo9vSJpqQv18uXBfLrKd4ru/s7iP
+bIPdx5cSJG+Hue+B2/QfwL2Ggotokiv8thnXuyPfp/+bipBTp4aV13WjPui
nb7OmZ8iZ7Y88/uM398gyYQrtpgiagfmn4n4ygb61JhCJfKt8IXcdaM4f3uv
SZxaQpE9frKRAnOxX+TqCcsJUKTq4tavRpivm2j9Ao3I50SUVNexOPDE9TKv
vyBFHjq/f6++BfWoTnOGvZQi8ucTbpYd4oA/q3OsA9lo68sq/3AO2IeF/rgg
RBGzwdY3Rjh/W3q53euWUeTrQOcag14OMAxaO74iC/7qqBeW5YJgmt/bKzSK
XN9tlb36CBdG5yjU6FAUEdW1CV9Ygn3f+nXZEPKvU+FPpihlKHrmXpS8nCLT
cyeDafuUIWWVeM7WFRRhJcsfji1ShnOny+9OIdudfBaca6kCDq1Hb94Rpoj7
esLTMaAKhuq0BDMRipTYlE1wg1SAdaUwap4oRXxGt1iK1aI/jNiEPkK+vDQq
K9lWGca2L/S3XkmRuDbdKj7sS22Z2Z4CYhSBkU6tP0+5UMy/9/hT5P3TI51m
2H9uOP49dGQVRTrqu0sdlnMhsOK2lYg4Ra6eFijkNOE+y5n89xL5x17FjzLJ
HDA+N2bitpoi33WOZp7H/sf5nKQvLUGR+FmaodRmDtA26mm/QZ5/QpjDj/1x
PKlvzRlJfP4KB248zt+7qWgWU4oiUi3VgQZ43yV7NeXakV8sbS7Jeo15Ke/z
qhBpioj9WrTfv5ANQVQopS5DkRkf/jCfDDY4nuAu/oIsmepw9lgi9vk3LXOj
ZSmyc2FVAfsS9mW23++NchRpjTzel3SeDcvD5Ud/IJ860euc4s+Gyd7a74ny
FJEe//hZCvPZewP3TkMFiowYmy6hfNlQmraqfRz5ing7HMbPU+eW16cpUuTA
5up8KoAN522OVu5WoshNTvXGJegnR0uWAQ+dIqmLs27r48/fLl5YkIW8SK5q
9SPUW1Vvm2xLBj7fB7UxzXTsA20L7vAzKTKaNVT9HPv5b/XslCfI0sHG51e9
ZMPHK//FHmJRJL2t/vr8VjaUjcxELmdTRFP4UpE46m/6jtvBZch7JlNqO2bY
EPZg2xlXDkXqw8rWhC7jwLHFY+4SXIpkKM9p5spx4KP35k+ArMX79PhdNQ5s
74sxslOmiPnDoN8s7Kul+74+5lWhSNkuSfEM9GflKnWJDORD1e7JnG0cuKlx
PtRYlSI9mfaGisZ4vxktoz+Q6dbSQ8dQ3wNFFA9cUqNIyhOf+ZbYP8bOe75S
WUORxOwdzx/LcsBh/JVKE3L3X7t9npivWxxEr51Sp0g+U9yneJwNBZsLXZ+u
pcg7t/b40nI2KOUu6jiwDvViRbagMPpTvKyFPo8G6tmt+m+i0Wzwnvtnpb4m
RVbJyJfeRn/sP7E16BvyPdeV+lnYtyw7kwYvrKcIN0J3zHk9G17v/GHO2oDP
q2i/eUrp3+9DtMrrkA8Yb9l6EPNrNjeSfUKLIuvdS2weLWaD1PUPcZQ2RWrk
g/h+zLIgSpAzNx/5xbFlG1dgH57j5+dsvhH3zXvrMQ72x5MDdS2/kR16wr6v
62VBl6WkTvIm5NnRdSrYN/fUHr+/iaB+iFvzr8S+/GIDrOhCDpw3b+pHJwvU
7wv5B+lQ5Kdt+UjGFxaki9n2Keiivos2bjf4xgKRsEemVciztyfOFP1gQejU
nFInPYosWGG08tdPFkw57qYLbkb9vPfF6MM0C462pV55iFy58Lzh9gVseLfl
58xufYosC6ppomH+31qg5/gL2ST/UOwnzOvFCjGNcQa4X/GT17exsS/Edmut
34J6dOJMUx2eXzKv+p33yJ5Ty1pzsJ8IegQvO2tIkcYjsg7ie9hwtrvZR9qI
Ijovlq0QxDw0vEehpxy5JjzD4owtG2zLT+08ZEwRTtjNbrd//3+B6quihVsp
siYoRE/Tig16qSLy95Hf5bZkeZmyIXeZ4yWTbfg8JfJsU302yAU8mRpCfl61
Ms5ShQ1XhxfaXzahiEbgHtGTeH98Nvvq1mynyOHNb20S/7Lg1Ju7Gq3Igkf9
H73D8zXPMhYQ30mRBKmyY0rpLKhaneRZgvwq/86bmFAWrI/s77TZRRGLBmfb
NicWiDtH5N/ejfoWs+ix7FoWRHa8lzLcQ5GsOPUVV1az4K8xO7wPeci3clEu
Hwtcis78ijClSKliY1fCCBM+0eusuWYUUbyXar/rIxN2JkhUNyCH/1gk9KWW
CbDw+Br3/3Af9mi0mj5jgopXaYrwXpwnEUO7+9lMSP22dFEhsq/I6ML+W0x4
/HFax9ycIp/f9yrqJzLhRfN37wnkqRwBnbOXmdBU2/I4dh9F+MnFxTcimPC1
vPyHugVFlk4GT2aHMmG86KF8M3LxvdaLheeZwJeTbOW+nyKGGukVVcgid8Pi
KEv0m8KNR4bxzyvd8KzPQf6tFXyaRDJBI85+0e4DeB+z6zPqrzDB6OIu3RFk
71yPlqfXmGARvNEnygrzAet9unQGE476MnO51qhXN+vFFPOZ4OMmOlCH3Jc7
oDJRwYSIo7wKLjYUMZXqdS9/x4RrtqNWAraoz8XP1r/A83tg/ikuE3ne/pd6
GktYULKjtn7rQXzf8m2dBxksqDMoXNSPLBPUvzJkGws+aafrhtlRRPYWLf/9
SRYMr7niQ7fHeZAU1DidzAIeln9uJbLKlrwQ6VoWLJM9NnDYAf369lvNkRkW
yIhZKCw4hPO422ikRBn1etkW63TkosKDfNqY9/UWronXP4x+uWaLx27sm6az
Ug3dyOuPrLrFjmOD/bgAf5AjRR5wdUu9UP89Bn7ryh6hiMKTnKpxF/SL7m8+
ZciJ/iL9PVpsiO1oyrU9ShHsVfbz57LhSVWWwg0nzBOZb8ItLrCgEpKsNzlT
ZDKjqcFwFwvaC0LjPyLvW2ts5ozz15fl0XDmGPpVb8nOoQEm/L59kH+1C0WS
xD7NLyhjwuLkHXrFyH/H+T0jkpggHqPlu/843n9TcbSyFxNY4fS838hxhh/u
OJgzQfuc8GCCK+6LVnXazw1M2H56nqLmCYq4laldvyvDBCvXYes25L9R1Ryr
JUw4fvhDvOdJzE+OjmuHJhngb1XdIOxGkcKUUR+dXgZEmRXw5yN/t/ZcT94x
4Oa2ND0zd8yvuuEv3tcxIEcv2ncMuTC6X0ewggFl6/3yrnhg3rp17GJDKQPe
qjgNqp7CfFQRsZFezIBuJXPFRuTrT8XrVj9lwJikvs0JT4pETjBnn+HnvCKq
CUJeFLF9VXtC8jkDhAUlG7ORD187GWBdyQAF3iWLd5ymyOtZDe+0Rgasm57U
G0SuaPEhkp8ZYPjzq2+kN+bRtS+iBEYYYN7XmMfyoUi76SfBZ7xMONJZOliD
fPvjPrdLEkzwbstUdPKliID1KSMeLSaEvUmw4T9DkZPRKz9lWjEhqeJ8wl3k
72UHNlmHMCHzmVujoR9F5lK57NUFTCjOtVnci7zN/tOFDUNMeH3fZHPIWYo0
CbWJuamwIE24ZN4af/z6eu2VqiEs8A7glH9GhlUZ6kvRb3b+SDkXGYB57Ydk
hpcD5ve9S3XXn8O8/JD11Q3z9PTzs3O+IWcNfpd2EeJAI2sYrgRS5FLCRAkH
81VGnI0/CaKIS01rvftWzOdzGzYNIC/50PbbsYoFpsd0ZhOC8byUzB+Jm7OA
0faoxOA8RQ4evPlgcIIJPHoyfj+R2aqSPPLpTGh5cFn7RghFJK4onRS2wfcV
nTezLRSfTzA5/J4sE84FuhVPISeKK02YDOH5Dn7xSb+A+aUsdMdbvC/uPtMN
e8LQz9oS15onMoDvxYvfs8hXZW+HqXgx4D1HvSgzHM/jS7rbBwucn4Tbp/dF
UMQmfCpjSocBofOFNfkiKeKaev++FpsBVsfPT+YgR/gJrjghzoA178YLrC9i
Pt2paX9yKQP49Q97LrmEeXZMso/Bx4DP2a1rC5Fvlv2Iv8zDgHwxw3GHKIp4
PI+NzfpLh4jgJ3m0aIqs3tEXGo2fHxxW8ihFVnexTLfEr9fYn7DG+TJFhuX5
snWEGCBYsWhM9Ao+zzH6svMSOL/K3o9fIpsGRGeGqDCgKKnv5MkY1P+Yzl/l
RgyI5tuvKnmVIjx6FdB1mIH5tmakBllh92hfRQQDNr7f8MgrliJymi9HMwoZ
sHxLpqt8HM5L3Hc1vWEG9D0SV25EVm+ePiephv4iHjnkF4968MckWQn1PTZk
JouZQJGnT7fdb8B5cx495tKG/FrWtybDhwW6Bz6ygxMpkvY8wNiGsEG0cvuA
ShLq08aJZaN2HBhULc38iBzlek2v/9/vb5K5zuHXKHKjRyrXshL73sIbTI1k
PJ+tMeFfKlng6ibU341s8fdSA0OEBQYf/e9Fp2B+IPZpu9GvxI1Gjmy8jnnk
hahnIZ0JPx/b0vuR5/aFJ15tYkC1RGNv3A2KrFN8a/cmkgE3LuhmbL6J+5Us
u1lzNwNOjeUcHkHes2XvtSJJBmyzllVMSaVIg27U+66xf/+e4ZUe41v4vnVz
sh/U02Fyzfz0CeR7lp2rbXLoUHfd3SEtDfNutME+twQ6pPF/ldt1G/fRZ4lt
SDAdvD3MumeQx3UOBVmcosPOzy9v3UvH/mI4wPvCiQ4KW9fa7b1DkS07Hg4/
dKDDdF66zPwMnG/TNYky9nRolBLpeoisPHwmlnOYDhnhITcP3KVIZqyPOM9x
OviNT9jw36PIn2xZWocPHcxsHaUKkF3VPm+SvkiHJx8Cdpvfx3ldjHacRgdx
i6SgKeSvkROxuUCHsy25+YmZ6O89cOz4Fzp07a7r3fAAz+fviYv1AgzQf/NN
7APyCQnDVBvcj4ytc0z8svDr7Rd57PdnwOJKsbOS2RTZ4Xd7io567LJ5zSNA
FjsnLWyhzIQGMPli+xD7A6v+99uHTFijfXjFvEc4j+YboNSOBfGF/lvSkIci
I14d8mbDH/XE0/o5FFlxJFS9Q50LVjmP7/cgD8heidBbyIEyzusPIY/xvJRZ
r+EBC+Tv9yyl52Ie/BZEq2hjQqgij241cphlNE1Yjwn9t1a6O+Xh/Tes/ePV
wIDtUmrpS/Ip8tgc/A56MuDRtW1tD5ATvPmmxDi4DysP8e8owPOL3iOSMUIH
z6tntYaR//xwKQospcO7ZQku0U8wn0jO1+aJpcPGizk3VAspwiex8/iEGx1u
8tc2vkX2MJiySzanw/yQr/M9irDPbHAdc9Cjg+O82bXCT3EeVqTUj6nRoeas
6JEC5NOTXmMUgw6caZUk82LUD3ezfVnydIj22vp6Ctko9l7NawU6jI3ZzyY+
o8iG4MOnk9h02HvCT0WrBPW3xW6P3Xo6FA3E2X1Azvq+6EeiCR1WH3101a8U
56fb2mgA58e/p/qVJFDEOGTB2e1hdOg+2D0FyE3FHmHi+XTY8mmGefA5RepW
PgkxH6DDvf0iVvPKKLJ8gYu1kBrqUZtyVBpyWuvFTlXUkxOmxmX65difVwnr
HZuD+bHebqwHmXVROlIijQnrTM4ohL6gyOIVH4M3XGdBYlWsOf0lRVTzlO6V
BHJgRv9hWDVygJ1CiIs2B2zKqoqdKnA/3molSHiwoHzjl8ElryhitSVFS+8s
ExSeTktlIVs87Rm40MGAsHXCe3ZUYp7X0uTVsWPAwGNu8DByzGmB8qOopzuV
jQqiq/A8rF8vmS6mQ27mwe+q1RTZdcbJ0/EcHUTovquakF9dfnlqYA/u6+2r
Jh41FPEpfjtTx6XDB+nss8K16N/eQvXjy+lAUiofFSAHplYOP59Lh1tiXV/M
X2M+iJh7omdSCfji/qz4jbwlWETRcUIJjlArDJPqKPLS0etu/F8lqL3E8dZ6
g/3+UNUFmaV0UF5imPkBeaTO01UW7/9KqO1Hv3rUw48uwVa76DA+30dIqgHv
w8T8w7UQOlgExOg+R968rD3KtYEOz2YeuB9sxD7nSSn1rWWAlPer9HlvsU/1
5wsIY17Ze1g6vgD50H69K3L1TLho6nPBqYkix6JjOhjyHHip0+wt2Yx5f7hF
rayNBdMcrvNb5O2+MOCPeU1N/MKBkBbMN10vymrRb44u+rJ9QytFdEVaU1oj
6ZA6rkWGkN8dmpVppujQ/iVW5VYbRdK7AtrX5CmBUMOwzN529MeuP4yEo0pg
WGK8fPE71BfWBZnPXCU4ez+NtxSZ/sdxddJcJciP/zt+sgPz4cWweTadijAQ
bN6r8B7nN0K436NGEeTcctrfIQffpdSyQRH22yypufjh33mYZ1s/V4TLJoeK
dT/i+33Je3y0ThGq1sODceQXXh2PXL4rAo+S2PV7nyiipKC7Q2aFEqxb4R5l
9Rn9SfO3g/B/SuAyty6A1onn8epblWOuEtweUnSrQOZVGqJLEDq8fx9g792F
epTwUD4e/Ziq7jDjfME8J7OVuTOLCcYF6lu6kLNyPssVhTMhIO2SRmz3v7zf
lr6pC/U4+jvd+Cve71sLpaIeJRjy01v1F1kn02eht5YSKDgnL8npwbws9Ewp
pFQRDuybmHH4hnlFKflDoI0ixBjsGlrZi3pnJ8usFFGEWrX7n18jW4fWn1fr
VIB50ryNAd8p8ovwnLxYpADrBa3L1fso0nb1lFt7qgKc/PMk9zsy49GvNt5E
BbjbS0tP7se+WO/Y++OGAnxudo7b9QP74i65t2cLFUCkvCKUdwDvd9q43uib
Amx/KOVdiHyOmtMTo6wIwcneTscGcf+/pZxZelMRisOaLKWHKKIvL2zN2qkE
Pz0525uRVSTy5wgcogPDIXTThWHMn/nX4rKH6WC7u0tZe4Qio6vPfOa7rgTx
m7RkRpBvRZsNzklShDesWOr2KPoz46xSV58C8IkNz9/3E/NJagxd0EUBtBcY
jy8Zo0i/ZKIx3woFcB+79Q2QXecke0S0ycP9zpk29184H5bOfXfz5KGrbm+1
0jjmT67AFY1MeVhZ/Ojpe+RyvuD0CyXysPPu4gdRExSpPpczHTQiDyGxDimb
J//5jaq471YFKAksvTSJXJdi95X3pQKMu64MyJzC+yqRvNX5WwHYVm4nbX5T
5P2C2bEfjgpgv/W13fI/FNF7wDkgc00ermkomlX+Y3ph2fYxOXgrH2DgO43z
OPkhJMtbDvipjnXKMxQRsnGK2caRAx0edXo38vuwjZHxy+XAa+CiWPxfijzb
djpPQlcOst/1Lt42S5GNyr5x7/H79bzSnZlFflXWI1o4KQ//A2iCVOA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3.0000000408163263`, -18.98398324206232},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.618285980628055`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.903487552536127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.721165995742174, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-16.11809565095832, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.618285980628055`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.903487552536127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.721165995742174, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Relative error in residual for Painlev\[EAcute] III\"", TraditionalForm],
  PlotRange->{{3.0000000408163263`, 
   4.999999959183674}, {-18.98398324206232, -7.735486892138422}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-16.11809565095832, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-17.72753356339242, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.322068455284256`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.034386382832476`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.811242831518264`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.62892127472431, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.474770594897052`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.34123920227253, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.223456166616145`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.424948470398375`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.01948336229021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.73180128983843, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.508657738524219`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.326336181730264`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.172185501903007`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.038654109278484`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.9208710736221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.122363377404328`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.716898269296165`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.429216196844383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.206072645530174`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.02375108873622, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.86960040890896, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.736069016284437`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.618285980628055`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.819778284410283`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.414313176302118`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.126631103850338`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.903487552536127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.721165995742174, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.567015315914915, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.433483923290392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.315700887634009, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.517193191416238, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.111728083308073, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.824046010856292, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.600902459542082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.418580902748127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.264430222920869, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.1308988302963465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.013115794639964, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.4862098463985233`*^9, 3.4862098593929777`*^9}, 
   3.4862099123865423`*^9, 3.486210129738264*^9, 3.48621045146957*^9, {
   3.4862104880351667`*^9, 3.486210512300408*^9}, {3.486210575959155*^9, 
   3.4862105885476847`*^9}, 3.487490401635949*^9, 3.4874910805422373`*^9, 
   3.487506514203463*^9, 3.494228798316434*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Painleve IV", "Section",
 CellChangeTimes->{{3.483792607173275*^9, 3.483792609054174*^9}}],

Cell[TextData[{
 "The Painlev\[EAcute] IV differential equation is\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "''"}], " ", "=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"u", "'"}], ")"}], "2"], 
      RowBox[{"2", " ", "u"}]], " ", "+", " ", 
     RowBox[{
      FractionBox["3", "2"], " ", 
      SuperscriptBox["u", "3"]}], "+", " ", 
     RowBox[{"4", " ", "x", " ", 
      SuperscriptBox["u", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"4", " ", 
         SubscriptBox["\[CapitalTheta]", "\[Infinity]"]}]}], ")"}], "u"}], 
     "-", 
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[CapitalTheta]", "2"]}], "u"]}]}], 
   TraditionalForm]]],
 "\n\nThis example is also based on an example in [Olver 2010] constructed \
from the RH problem in [Fokas et al. 2006]. "
}], "Text",
 CellChangeTimes->{{3.48395373459581*^9, 3.483953799439085*^9}, {
  3.4839644178058863`*^9, 3.483964494215825*^9}, {3.483987533175851*^9, 
  3.483987548248561*^9}, {3.487491124182775*^9, 3.487491235393178*^9}, {
  3.487504240874363*^9, 3.4875042546764297`*^9}}],

Cell[CellGroupData[{

Cell["Setting up the jump curves", "Subsection",
 CellChangeTimes->{{3.487504234085321*^9, 3.487504237612719*^9}}],

Cell[TextData[{
 "We choose an arbitrary choice of Stokes' multipliers, and the constants ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalTheta]", "\[Infinity]"], TraditionalForm]]],
 " and \[CapitalTheta].  "
}], "Text",
 CellChangeTimes->{3.4875042469579687`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalTheta]\[Infinity]", "=", "1.123"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTheta]", "=", "3.43"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "s", "]"}], ";", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "[", "1", "]"}], ",", 
      RowBox[{"s", "[", "2", "]"}], ",", 
      RowBox[{"s", "[", "3", "]"}], ",", 
      RowBox[{"s", "[", "4", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Array", "[", 
       RowBox[{"s", ",", "4"}], "]"}], "/.", 
      RowBox[{"(", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "1", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"s", "[", "2", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{
            RowBox[{"s", "[", "3", "]"}], "\[Equal]", 
            RowBox[{"1", "/", "3"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"s", "[", "2", "]"}], " ", 
                 RowBox[{"s", "[", "3", "]"}]}]}], ")"}], " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
               "2", " ", "I", " ", "\[Pi]", "\[NonBreakingSpace]", 
                "\[CapitalTheta]\[Infinity]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "[", "1", "]"}], " ", 
                 RowBox[{"s", "[", "4", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"s", "[", "3", "]"}], " ", 
                    RowBox[{"s", "[", "4", "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"s", "[", "1", "]"}], " ", 
                    RowBox[{"s", "[", "2", "]"}]}]}], ")"}]}]}], ")"}], " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "I", " ", "\[Pi]", 
                "\[NonBreakingSpace]", "\[CapitalTheta]\[Infinity]"}], 
               "]"}]}]}], "\[Equal]", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
              "2", " ", "\[Pi]", "\[NonBreakingSpace]", "\[CapitalTheta]"}], 
              "]"}]}]}]}], "}"}], ",", 
         RowBox[{"Array", "[", 
          RowBox[{"s", ",", "4"}], "]"}]}], "]"}], ")"}]}], "//", "First"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "[", "1", "]"}], ",", 
     RowBox[{"S", "[", "2", "]"}], ",", 
     RowBox[{"S", "[", "3", "]"}], ",", 
     RowBox[{"S", "[", "4", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{"s", "[", "1", "]"}], "1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"s", "[", "2", "]"}]},
        {"0", "1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{"s", "[", "3", "]"}], "1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"s", "[", "4", "]"}]},
        {"0", "1"}
       }], ")"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]3", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}]}], "Input"],

Cell[TextData[{
 "In this case EE ",
 StyleBox["is",
  FontVariations->{"Underline"->True}],
 " the matrix of eigenvectors.  However, we know the eigenvalues, and must \
ensure that the eigenvectors are in the correct order.  "
}], "Text",
 CellChangeTimes->{{3.487491255162438*^9, 3.4874913213356867`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ord", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dot", "@@", 
         RowBox[{"Array", "[", 
          RowBox[{"S", ",", "4"}], "]"}]}], ")"}], ".", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{
        "2", "I", " ", "\[Pi]", " ", "\[CapitalTheta]\[Infinity]", " ", 
         "\[Sigma]3"}], "]"}]}], "//", "Eigenvalues"}], ")"}], "~", "NEqual", 
    "~", 
    RowBox[{"Diagonal", "[", 
     RowBox[{"N", "[", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "I", " ", "\[Pi]", " ", "\[CapitalTheta]", " ", 
        "\[Sigma]3"}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EE", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"Array", "[", 
             RowBox[{"S", ",", "4"}], "]"}]}], ")"}], ".", 
          RowBox[{"MatrixExp", "[", 
           RowBox[{
           "2", "I", " ", "\[Pi]", " ", "\[CapitalTheta]\[Infinity]", " ", 
            "\[Sigma]3"}], "]"}]}], "//", "Eigenvectors"}], "//", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"ord", ",", "#", ",", 
            RowBox[{"Reverse", "[", "#", "]"}]}], "]"}], "&"}], ")"}]}], "//",
        "Transpose"}], "//", "Inverse"}], ")"}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4874913760775547`*^9, 3.487491391245364*^9}, {
  3.487492426546921*^9, 3.4874924274769087`*^9}}],

Cell["We can now construct the jump curves.", "Text",
 CellChangeTimes->{{3.487491330535358*^9, 3.487491335446926*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "^", "2"}], "/", "2"}], "+", 
       RowBox[{"x", " ", "z"}]}], ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]x", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"(", "z", ")"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"E\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"x", " ", "z"}], "+", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x"}], " ", "z"}], "-", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"E\[Theta]x", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"x", " ", "z"}], "+", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "z"}], "-", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Em\[Theta]", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x"}], " ", "z"}], "-", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"x", " ", "z"}], "+", 
           FractionBox[
            SuperscriptBox["z", "2"], "2"]}]]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Em\[Theta]x", "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x"}], " ", "z"}], "-", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"z", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"x", " ", "z"}], "+", 
            FractionBox[
             SuperscriptBox["z", "2"], "2"]}]]}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{"_", ",", 
       RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {
             SuperscriptBox["z", "\[CapitalTheta]"], "0"},
            {"0", 
             SuperscriptBox["z", 
              RowBox[{"-", "\[CapitalTheta]"}]]}
           }], ")"}], ".", "EE", ".", 
         RowBox[{"(", GridBox[{
            {
             SuperscriptBox["z", "\[CapitalTheta]\[Infinity]"], "0"},
            {"0", 
             SuperscriptBox["z", 
              RowBox[{"-", "\[CapitalTheta]\[Infinity]"}]]}
           }], ")"}]}], "]"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"I", ",", "1"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           SuperscriptBox["z", "\[CapitalTheta]"], "0"},
          {"0", 
           SuperscriptBox["z", 
            RowBox[{"-", "\[CapitalTheta]"}]]}
         }], ")"}], ".", "EE", ".", 
       RowBox[{"S", "[", "1", "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           SuperscriptBox["z", "\[CapitalTheta]\[Infinity]"], "0"},
          {"0", 
           SuperscriptBox["z", 
            RowBox[{"-", "\[CapitalTheta]\[Infinity]"}]]}
         }], ")"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "FullSimplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"I", ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", "\[CapitalTheta]", ",", "0"}], "]"}], "0"},
            {"0", 
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", 
               RowBox[{"-", "\[CapitalTheta]"}], ",", "0"}], "]"}]}
           }], ")"}], ".", "EE", ".", 
         RowBox[{"S", "[", "1", "]"}], ".", 
         RowBox[{"S", "[", "2", "]"}], ".", 
         RowBox[{"(", GridBox[{
            {
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", "0"}], 
              "]"}], "0"},
            {"0", 
             RowBox[{"PowerBranch", "[", 
              RowBox[{"z", ",", 
               RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], ",", "0"}], 
              "]"}]}
           }], ")"}]}], "]"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "FullSimplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{"-", "I"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"E\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", "\[CapitalTheta]", ",", "0"}], "]"}], "0"},
          {"0", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"-", "\[CapitalTheta]"}], ",", "0"}], "]"}]}
         }], ")"}], ".", "EE", ".", 
       RowBox[{"S", "[", "1", "]"}], ".", 
       RowBox[{"S", "[", "2", "]"}], ".", 
       RowBox[{"S", "[", "3", "]"}], ".", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", "\[CapitalTheta]\[Infinity]", ",", "0"}], "]"}],
            "0"},
          {"0", 
           RowBox[{"PowerBranch", "[", 
            RowBox[{"z", ",", 
             RowBox[{"-", "\[CapitalTheta]\[Infinity]"}], ",", "0"}], "]"}]}
         }], ")"}], ".", 
       RowBox[{"Em\[Theta]", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], "//", "FullSimplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"s", "[", "3", "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{"2", " ", "\[CapitalTheta]\[Infinity]"}], ",", "0"}], 
           "]"}]}], "1"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", 
        RowBox[{"-", "I"}]}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", "4", "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"PowerBranch", "[", 
           RowBox[{"z", ",", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[CapitalTheta]\[Infinity]"}], ",", 
            "0"}], "]"}]}]},
        {"0", "1"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {
         RowBox[{
          RowBox[{"s", "[", "1", "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{"2", " ", "\[CapitalTheta]\[Infinity]"}], ")"}]}]}], "1"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
      RowBox[{"x_", ",", "z_"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"s", "[", "2", "]"}]}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"x", ",", "z"}], "]"}]}], "]"}], " ", 
          RowBox[{"z", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[CapitalTheta]\[Infinity]"}], 
            ")"}]}]}]},
        {"0", "1"}
       }], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.483793009602326*^9, 3.4837930760202723`*^9}, {
   3.483793106073081*^9, 3.4837932730878143`*^9}, {3.4837934926722727`*^9, 
   3.483793507619803*^9}, {3.48379397995684*^9, 3.4837939804602747`*^9}, {
   3.483794014743149*^9, 3.483794042638172*^9}, {3.4837940917858343`*^9, 
   3.483794102845787*^9}, {3.483794136540511*^9, 3.4837942020504093`*^9}, {
   3.4837942322848663`*^9, 3.483794234728747*^9}, {3.483794280304882*^9, 
   3.483794345637453*^9}, {3.4837943800446863`*^9, 3.4837944654101458`*^9}, {
   3.483794517714616*^9, 3.483794571270279*^9}, {3.483795861714726*^9, 
   3.483795891983179*^9}, {3.483860879483436*^9, 3.483860895420171*^9}, {
   3.483953805960238*^9, 3.483953819116086*^9}, {3.483960307806177*^9, 
   3.483960616695137*^9}, {3.483964675460752*^9, 3.4839646865805407`*^9}, 
   3.4874912494790297`*^9, 3.487491326158073*^9, {3.4874913994112*^9, 
   3.487491400342952*^9}, {3.487491523065002*^9, 3.487491609813168*^9}, {
   3.487491648235111*^9, 3.487491785745926*^9}, {3.4874918438508472`*^9, 
   3.48749184890058*^9}, {3.487491910160305*^9, 3.487491911174871*^9}, {
   3.487491961194175*^9, 3.487491966729265*^9}}],

Cell["\<\
With the jump functions defined, we construct a list of Funs.  \
\>", "Text",
 CellChangeTimes->{{3.483953828857501*^9, 3.483953864633197*^9}, {
  3.484032787204821*^9, 3.484032789354413*^9}, {3.487491406255827*^9, 
  3.4874914132790613`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GG", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GG", "[", 
     RowBox[{"x_", ",", "tol_"}], "]"}], ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{
            RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"I", ",", "1"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"I", ",", 
            RowBox[{"-", "1"}]}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
        
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{
            RowBox[{"-", "I"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Arc", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
            RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Infinity]", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", 
              RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", "I"}], "}"}], 
         "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "\[Infinity]"}]}], "}"}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Fun", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", 
           RowBox[{"\[Infinity]", ",", 
            RowBox[{"-", "I"}]}], "]"}], "[", 
          RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Infinity]", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
           RowBox[{"-", "I"}]}], "}"}], "]"}], ",", 
        RowBox[{"InterpolationPrecision", "\[Rule]", "tol"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.483793864029574*^9, 3.483793907987432*^9}, 
   3.483794073095243*^9, {3.4837941084290543`*^9, 3.483794121231139*^9}, {
   3.4837942042813168`*^9, 3.483794204677348*^9}, 3.4837942460578136`*^9, {
   3.483794299933914*^9, 3.483794310477766*^9}, {3.4837943589644413`*^9, 
   3.483794372507979*^9}, {3.483794430117157*^9, 3.483794439898316*^9}, {
   3.4837944749704742`*^9, 3.483794503168515*^9}, {3.483794535298622*^9, 
   3.483794584695809*^9}, {3.483860726808217*^9, 3.4838607418966293`*^9}, {
   3.483860835559532*^9, 3.483860851448288*^9}, {3.487491446790201*^9, 
   3.487491464327375*^9}, 3.4874918213774853`*^9, {3.487503140331547*^9, 
   3.487503142754755*^9}}],

Cell["The jump curve is defined over the domain:", "Text",
 CellChangeTimes->{{3.483953828857501*^9, 3.4839538716121073`*^9}, {
  3.4874914287173347`*^9, 3.487491438891337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DomainPlot", "[", 
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"0.", ",", 
     RowBox[{"10.", "^", 
      RowBox[{"(", 
       RowBox[{"-", "3"}], ")"}]}]}], "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483860743700931*^9, 3.4838607469884157`*^9}, {
  3.485957219713706*^9, 3.485957225323965*^9}, {3.487491828710802*^9, 
  3.487491831749284*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, -1}], PointBox[{1, 0}], 
    ArrowBox[{{0.999999995, -0.00009999999983333334}, {1, 0}}], 
    CircleBox[{0, 0}, 1, {-1.5707963267948966`, 0.}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, 1}], PointBox[{1, 0}], 
    ArrowBox[{{0.999999995, 0.00009999999983333334}, {1, 0}}], 
    CircleBox[{0, 0}, 1, {0., 1.5707963267948966`}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, 1}], PointBox[{-1, 0}], 
    ArrowBox[{{-0.999999995, 0.00009999999983366683}, {-1, 0}}], 
    CircleBox[{0, 0}, 1, {1.5707963267948966`, 3.141592653589793}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, -1}], PointBox[{-1, 0}], 
    ArrowBox[{{-0.999999995, -0.00009999999983366683}, {-1, 0}}], 
    CircleBox[{0, 0}, 1, {-3.141592653589793, -1.5707963267948966`}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{1, 0}], ArrowBox[{{1, 0}, {3, 0}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, 1}], ArrowBox[{{0, 3}, {0, 1}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{-1, 0}], ArrowBox[{{-1, 0}, {-3, 0}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0, -1}], ArrowBox[{{0, -3}, {0, -1}}]}},
  Axes->False,
  ImageSize->{Automatic, 450.86400000000003`}]], "Output",
 CellChangeTimes->{
  3.4838607478251953`*^9, 3.483860899977457*^9, 3.483959303516871*^9, 
   3.484041264633713*^9, 3.484313260980693*^9, 3.484313308924719*^9, 
   3.484316155191978*^9, {3.4859572182357273`*^9, 3.485957225760632*^9}, {
   3.487491832870575*^9, 3.4874918573761597`*^9}, {3.487491915218359*^9, 
   3.487491922744276*^9}, 3.487491972667882*^9, 3.487492488790299*^9, 
   3.487506518400667*^9, 3.4942287988536*^9}]
}, Open  ]],

Cell["\<\
Again, we want to fix the length of to reuse computation.   We are going to \
compute the solution over the unit square\
\>", "Text",
 CellChangeTimes->{{3.487492033035203*^9, 3.487492127178665*^9}, {
  3.487496597063512*^9, 3.487496600183399*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tol", "=", 
      RowBox[{"10.", "^", 
       RowBox[{"(", 
        RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"lngs", "=", 
     RowBox[{"Max", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "/@", 
           RowBox[{"GG", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1."}], "-", 
              RowBox[{"1.", " ", "I"}]}], ",", "tol"}], "]"}]}], ",", 
          RowBox[{"Length", "/@", 
           RowBox[{"GG", "[", 
            RowBox[{
             RowBox[{"1.", "+", 
              RowBox[{"1.", "I"}]}], ",", "tol"}], "]"}]}]}], "}"}], "//", 
        "Thread"}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GG", "[", "x_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"I", ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"I", ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
           RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", "I"}], "}"}], "]"}],
        ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "\[Infinity]"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", 
          RowBox[{"\[Infinity]", ",", 
           RowBox[{"-", "I"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
          RowBox[{"-", "I"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.487492067408614*^9, 3.487492069830761*^9}, {
  3.487492241346529*^9, 3.487492241985043*^9}, {3.487492492962418*^9, 
  3.487492494369644*^9}, {3.487496588588127*^9, 3.487496593263735*^9}, {
  3.487503143502234*^9, 3.4875031455699472`*^9}}],

Cell["We also need the derivative:", "Text",
 CellChangeTimes->{{3.483960625491145*^9, 3.4839606293240337`*^9}, 
   3.483987557958696*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "Gx", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Gx", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "[", 
     RowBox[{"_", ",", 
      RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
    RowBox[{"ZeroMatrix", "[", "2", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{
      RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{
         RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"I", ",", "1"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"I", ",", "1"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"I", ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"I", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{
      RowBox[{"-", "I"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{
         RowBox[{"-", "I"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gx", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
    RowBox[{"x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
       RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Gx", "[", 
      RowBox[{"\[Infinity]", ",", 
       RowBox[{"-", "I"}]}], "]"}], "[", 
     RowBox[{"x_", ",", "z_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"G", "[", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"-", "I"}]}], "]"}], "[", 
        RowBox[{"x", ",", "z"}], "]"}], ",", "x"}], "]"}], "//", 
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGx", "[", "x_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"I", ",", "1"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"I", ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{
           RowBox[{"-", "I"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
           RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"1", ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"\[Infinity]", ",", "I"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", "I"}], "}"}], "]"}],
        ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "\[Infinity]"}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "\[Infinity]"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Gx", "[", 
          RowBox[{"\[Infinity]", ",", 
           RowBox[{"-", "I"}]}], "]"}], "[", 
         RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Infinity]", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "I"}], " ", 
             RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
          RowBox[{"-", "I"}]}], "}"}], "]"}], ",", 
       RowBox[{
       "lngs", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483960640309884*^9, 3.4839606927226353`*^9}, {
  3.484313313529221*^9, 3.48431331544692*^9}, {3.4843134862576733`*^9, 
  3.484313498298541*^9}, {3.4843135976521473`*^9, 3.4843135978548527`*^9}, {
  3.487491991319083*^9, 3.48749201301987*^9}, {3.487492160373341*^9, 
  3.487492267013632*^9}, {3.4874926021016273`*^9, 3.487492602778247*^9}, {
  3.48750314629137*^9, 3.4875031486310453`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Computing the solution", "Subsection",
 CellChangeTimes->{{3.487504279627399*^9, 3.487504286626753*^9}}],

Cell["We now setup the RH solver again.  ", "Text",
 CellChangeTimes->{{3.483953828857501*^9, 3.483953916827566*^9}, 
   3.483960288007979*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"RHSolver", "[", 
    RowBox[{"GG", "[", "0.", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"U", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{"GG", "[", "x", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483704059473811*^9, 3.483704084796417*^9}, {
   3.483860782251835*^9, 3.483860785559648*^9}, 3.483960286188491*^9, {
   3.483987566522072*^9, 3.483987569294883*^9}, {3.484313366053083*^9, 
   3.4843133662712173`*^9}, {3.487492272312549*^9, 3.48749229508356*^9}}],

Cell["\<\
Now we find the minus limits of the solution to the RH problem:\
\>", "Text",
 CellChangeTimes->{{3.483962940417666*^9, 3.483962951385665*^9}, {
  3.483986166815475*^9, 3.483986182006057*^9}, {3.4874925256798983`*^9, 
  3.487492529799597*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cm", "=", 
   RowBox[{"CauchyOperator", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "R"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPhi]m", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"\[CapitalPhi]m", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Cm", "[", 
     RowBox[{"U", "[", "x", "]"}], "]"}], "//", "AddIdentityMatrix"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ux", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"Ux", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Ux", "[", "x", "]"}], "=", 
    RowBox[{"R", "[", 
     RowBox[{
      RowBox[{"GG", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalPhi]m", "[", "x", "]"}], "~", "FunListDot", "~", 
       RowBox[{"GGx", "[", "x", "]"}]}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483946445977253*^9, 3.4839464481927958`*^9}, {
   3.483946487355945*^9, 3.4839464971736526`*^9}, {3.4839607581814833`*^9, 
   3.4839607629604607`*^9}, {3.48396117848172*^9, 3.483961201185988*^9}, {
   3.4839629216625757`*^9, 3.483963010928287*^9}, {3.483963256693103*^9, 
   3.4839632726565*^9}, {3.483963959000586*^9, 3.4839639606248693`*^9}, {
   3.484032810679948*^9, 3.484032816779828*^9}, {3.4843132693707447`*^9, 
   3.484313269619557*^9}, 3.487492332167657*^9, {3.4875042929951897`*^9, 
   3.487504299765644*^9}}],

Cell[TextData[{
 " We have functions y and u, where u solves Painlev\[EAcute] IV.  We \
determine y by the formula y = -2 ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox["lim", 
    RowBox[{"z", "\[Rule]", "\[Infinity]"}]], TraditionalForm]]],
 " z Cauchy[U,z]\[LeftDoubleBracket]1,2\[RightDoubleBracket] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "x"], TraditionalForm]]],
 " = -2 ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox["lim", 
    RowBox[{"z", "\[Rule]", "\[Infinity]"}]], TraditionalForm]]],
 " z Cauchy[Ux,z]\[LeftDoubleBracket]1,2\[RightDoubleBracket]."
}], "Text",
 CellChangeTimes->{{3.483962731042396*^9, 3.4839628330391703`*^9}, {
  3.484032835741294*^9, 3.4840328533059263`*^9}, {3.484032912657649*^9, 
  3.484032916093627*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"y", ",", "yx", ",", "u"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]], 
     RowBox[{
      RowBox[{"DomainIntegrate", "[", 
       RowBox[{"U", "[", "x", "]"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yx", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"yx", "[", "x", "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Pi]", " ", "\[ImaginaryI]"}]], 
     RowBox[{
      RowBox[{"DomainIntegrate", "[", 
       RowBox[{"Ux", "[", "x", "]"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "x"}], "-", 
    RowBox[{
     RowBox[{"yx", "[", "x", "]"}], "/", 
     RowBox[{"y", "[", "x", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4839627963061523`*^9, 3.483962900247736*^9}, {
  3.48403292200382*^9, 3.48403293578743*^9}, {3.484313274080016*^9, 
  3.484313276770348*^9}, {3.4874926254458*^9, 3.48749263543085*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The solution in the complex plane", "Subsection",
 CellChangeTimes->{{3.487504321675411*^9, 3.4875043258254557`*^9}}],

Cell["\<\
Here's a plot of the real part of the computed solution in the complex plane\
\>", "Text",
 CellChangeTimes->{{3.483963672628566*^9, 3.483963687579184*^9}, {
  3.487492660005381*^9, 3.487492662585692*^9}, {3.48750683402216*^9, 
  3.487506836515377*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sp", "=", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "t", ",", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"x", "+", 
                RowBox[{"I", " ", "t"}]}], "]"}], "//", "Re"}]}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "sp"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "sp"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Real part of a solution to Painlev\[EAcute] IV in the complex \
plane\>\""}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "t"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.4874926766385117`*^9, 3.4874927247405777`*^9}, {
  3.487492776995316*^9, 3.487492777728765*^9}, {3.487496553449107*^9, 
  3.487496582080147*^9}, {3.487506554972501*^9, 3.487506590793602*^9}, {
  3.4875068149708776`*^9, 3.4875068441287317`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
C9H3IH/UjaHUm9fFy8SfbpXU+Xgx4/bDvFBlDkrn4YLMkqlpSXrEuXjgiERr
h7cZcQ7Geqzof6XAijgbL4vdZwY/tiTevC7G3wp+88yEOBMtI+3ONnXXJs5g
uE/MmGjkT+fPBMk4jbVjAmhuLJCH9XhimU6dDTl9xF++XPxNnAMZ+VbR3Wto
zlw4PTmUrTGeOg88F24ysPtF6/OBkVSwv6y+juYPI9q/rpjErKfHC2oNy7e+
mMog+yuChIhjzMFWusTF8IW/KNnqmylxCcwUTAtffI/mL4VeWol2ZjKavwwC
Z8aKbm9rS1wOC85t3MGdoUNcAb+e2O8YN0X5fqX8fa5Auw4auhiiPJ+VLsfA
HtIV3ddRl2GvJK/Z3gkNxKXo9v1JT98NtL4E07l3ku/t0yYuxvXy/pfXD9Qj
LsKgk+ciI02pC1FLkLyzlqFDXIDJT2/OWdRTizgfo80eF2c7Uudh0pb17Gl3
aR0uOlsw2lkVGxBv/n1xNu5Aw0tj4mxMq9oi168wIs5Cnbvyp9vP0fkzcZnV
Cs3fbel8GAzX8/1f3wuiuTFh3rU9FffnUGfB281dUrKXtqHzAeaWsVN2zKP7
xWm+7ujIuDCczocLCxJdN+/drEucB1X9eFFpyWp5As/3Qpf4NDofAaR8iDE8
4sogLoRlzKwHvKl0vAjmX+omcXpG64she9ap4Ya5+sSbry+mLYodFU3zl8Ky
iaPzIp2oy0A8PDt4325aRw7lZgF7NiXT81AB81bqnLh1V5mnsj9S4FyXidwl
5j/w3y7HvIN3nzkG/SIuw6fbncz93zYRlyI/YtOy6vU6pL4ExT8yxl1ONiEu
xqS42L4CU3PiIjS/Gq3LGW1GXIhT/AufbjA1Ii7Ak6dfFPqMpdvl4/isIq+Z
k+n+8pDTt9tNq8+axLm469vNPZ3FdDwHq8an1rlkaRFn45Hs0JUFA6izUFwf
yty0gdZnou1Hx3dHHzOIMxhX+5ZnzY+kzoR3dq8ivG/QOixws1nlNqRMlzgb
vHVvNGj/oTlzIGuVSC7WoDlzoVtwlalze5ozD+Zaj+uePt2QOB+0tD9/v36B
7q8Awr0+XXqSSecvBIasePbyCfQ8EcGCwV5netyg48Wgqel2KeA+3V8J5J7K
mJI0l25XCmm3jb81RVGXQV6PTu6rN9PjKIdBFicSP1+h9RXwNa2EtSFeOV6g
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
PCIf7JzXjjgL7dyWul4KNyPOxJV9678NbtAnzmBodncfPH4rnT8TJmX2nHRB
RHNgwV9nfO/Os6fOBp3uHZnpQJ0DnbYE/FgXTp0LofM6WTQEUOfBorDUhxoj
qPMh60z/Xuww6gLgZRjeu6v6vobyRwiXFcxp1rU6xEUgOZPU6dggmr8Yxsiu
hV3UsSQuAV5B4NsOwTR/KeyeuOeahGtFXAZJVTcl+h1o/nI4m/j0RpmC5q+A
X6kLDH5oqt5//jl/FXhda3BIP2/lffhKl2Ov9ssN9nWuIS7DSaceV//mfiMu
xUuH7w+xU92vq3QJRr45Z53bjdYRo+73ntypU2uJi9Dv+VO38rgfxIU4RrP9
eAc/Ok8B/gjN33BiaSNxPo5w8vBuvKJJ9peH621DZ+ptNSLefH2hz39we4gN
cQ7+qp1QtNXCjjgbS89wD1mzuhBn4RLNTxf6NZgTZ2KxfN+169d1iDMYE4tm
3LT69ofMnwnePrpVnU7Q/WXBvauzxPpdaT5sMN8z8Fh9EM2TAws031y47kOd
C/4VDWdSV1PngVbJ20/OudT54OLY7ynP+SfNH5YJd/Hlqu+DqI4XZNY/2695
QZPsrwgmL+wV+WixMXExNIVujbzfvz1xCTiH5T3oYG1HXAoJh1xedh1tS1wG
VbP3Hq5vT/OXg9a0LatEI2n+CohKwFQDnyZVvv845n3/tdbnqpi4HAdmem7e
/0NAXIZnTwivby18R1yK50earDg+gboEOV+ejNnl8564GKtYoySlurS+CIPe
s8o4PT8SF+KZO0a+g3t/Ii5AVsHYvSGq730onY9e1Y8GXFxaTZyHn/339Hjk
qPz91fJ36wf+jQPC+1kRp9+/UDob17NP7tGa4kCchevXdp1aGmdAnImbAzr/
2bLkJ5nP/10Xa1e0G1hJnAlhbXYMDkqi+9t83T1Hf4NxOs2NDZ3+iNsnBH8g
zgEXA4W4VIs6F77xN459NIw6D1L8j39u24/W58Nl6car7Q2FNH+Q9+ofbGBF
8xdCpKyCF/SJ5i8Co5GXvVacVF3PqtaF90WblL1tbYjT71+ozjfova3BfkG0
PXEZdMwQX3F7qEdcDskJtxSLtGj+CtAMH+rL6S9T5fiPYwrfe9L8NS1/B/+n
Di5OyDvvBa+Iy3C1sL7r0HbUpWhy5fPDjVHUJTgjdafHgEm0vhgHfNqYq7no
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
F5Wv9tz7BK8/Fkd9StQ8e8bqBQ0pLeNHsCz7T+pT2XydU3pp4/VilRfv37Xn
wmz154qf3tl318TNlWrzn+I6471+iBTfC5/u5EGRavzqLyn3A+oqceGCQKs5
HVrmX/j2q4N3jer5x6rr05kb+huY53zFv1+/qLwueFD1wp+VajnM0XjTpr+/
+vPnK8duuji1iwz/flV/Lv0w25q0QUViNW+btJvr0o6Ol2LWKOveu/OK1Z6v
HrdaVut3ka3yJm6e/WrNL6g5N+xu/4aW8XmrP+Q96FmJf79WqOoP/VB6xOay
RC3nrqfv6F2dq/5c8ZeKHX1/hleq5dbnW/dFY0Kl+Pdry/gZufVOyc35//3a
kmeMr9PBOFWe6vt78+O4jlPaV6g9z9wzv9Ph38VfVK4xccCws78l+PerWOVZ
5+4lTT4nUZv/C2berZA2yvuvW/4ueuSKwVMfMR+Hp9V3Ktn/We35Zqd8gl9n
rld/7tnpnmHBG6a0jOd7DZnq/FD9+V1XA3ukLYt4i2lTv14tGtdSZ/RN4/LV
V/n492vL+LY6C4fVzH6LvxpnftaeK1LbrnVFvyNbHxepPR/Msd++qHPjitWe
j1Sgc223iV2F2vOpRrbtfCivpKX+9chdX48nv8U5DSZv+096qaqze5V8XJhT
KT4s1PuQJ2qZ/0jbks26Z0vV8oyxtd/gukH1vBfVelnU3zz7Q0E5/v1aoqrv
PfTxjkjr1+i1qsuYcaGfyfsGD8f71qX1nvlCbb8M1+sdDI2k+8vF72l6ly7+
UX/ukPaOjXdKtolU/r3JI3Wofhl+bjrn6WfekqfZ2TlfpDPL1I5j5/TjhXl7
1J+3U935gINt5xLUXXdPFlLdst2rPRrHHThdrJbDPGHlgzW/ufj3q/pzewYu
eZpd4l2o5vNObmY4L3yl8q1jun2841iCtVvG5wSvbhm/z89hkP1fxWrz5O5e
mfLtYqbq977SFU5N953YtyH8VPSijqJnat+vWdRpmSLbhL6fs8B5Vp3CM7/l
/fC7dfnHzSdyoN7wq+LhtJb380HpG49N9Hii2q4yT71sK9G4wY/V5jNr1pTl
3QZmqn4/Kj1OM9DaOD8P/n4tVNVZPsXv6qik21DT7tXeu+5fgM6z/f2NfXvx
6PstC4p2d743LIGOZ8P2zOqzxZElat+nUJgfnRhcXKDyqo4FBUafXsDPA6IV
O6tbxrOdf/deWpwDM27G3L4yreX9VqeiD4MxLE+1X8rx47RHdh1u/Fhtf4cW
fDj8881L+OdVVf+TmViovSEXdm2dvMvF/gvQeXZ+4S65EyFW80P+jhbJF+h4
DqQ/WDogua36ffKjC5w4F263bPfAQK5jmTEH/nlV+fveg5J7mqvfb58uCHIo
KygCrusKp73TW+azrq+vpsPMl9C91i86q6/6/eH3/9yrExbQ938OxGgOKX/l
3TJ+zrWyvhE+HHjdx1I6rqRl/MGai5OiQtXvP2dv4rFfL2v5vFjpnzdOTZt8
UAT/vKp9Xlb1+mzpk6H0/VMMJevHBc8f0DJ+Qt7ty9fdWz4nVbrDyG6LA/PF
8M+ravywuKdNcxeqf063ylvrU+S0CpUrz4fI0SdG9goTgfau4v03LF6p6veP
+36xzLYC/n6l759i6GeT0H3l9Odqn099Wrb+2Lrvr4hLYM3F4vLenhVqn4/o
2UQ+xICW98/pWR4ZUwrFUOjw2OldUaGqzsxB+Vfzg9U/F8uvqhzeL6JC5co6
+cLLA/UjvsDfry3bPZTnuMlV9EUth1ndinzz5lbAwkfLXTbNKlb7fKF+5ZOg
mA3P1fzp7ry2Wotb3j+1P/kZtHX7Al83+Jbmlj1Tue+jAC3bO1/U5vn/u0+m
/XBrfWZrfWxr/XBrfbVyu7Q/b+26oLW++u9x6v1na/1ka32psg7tb1vr//9f
+/b/bX9O+/DW+tXW+tvW+uTW+nDldul1QWt9eGv9tjJP2ie31g+31j8r69A+
/H/bP9M++X/ub9X70tb6zNb6UmWd/9z3qvfzrfXnrfXzrfXtyvq0D2+t71XO
k/axrfWfrfWryjq0T26tn1fOk15HtNa3/8/9uXpf3VrfqxxP+/PW+ufW+u3/
1j/TPrm1fri1/llZ5z/34er9cGt9b2v9rbIO7Z9b68Nb69v//rd6v9paX6rc
f9rv/b/2dco6tD9srV9VzpP2z631861dLyhzo/18a/12a321sg7t/1u7jmjt
eqS1fv6/9ee0D/9v/TDte1vrb1vrh5V1/nNfrX690Frf/r/tn2mf3FrfqxxP
++3W+ufW+u3W+mRlfdr3ttavttbfKuvQvrq1vv1/7s/V++rW+l7leNqft9Y/
t9Zv/7f+mfbJrfXDrfXPyjq0D/8/w8Dl6Q==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwllMtvjGEUh7/pnA8hamtDYmFjUfwBVOIaSt3valpxCzqjCAnSTndWLonY
uMxUkBAxKYKlWlm2Vrb2NnYI8TzO4ml/7/ee97znnPecWTJU3zncVRRFHwR8
5c8o/1tQQ++ANehe2I6+Ads44KG5ZVHMhwa6H7rRX9gfKNLHPvRjGKziCybQ
C7G5iW0H7rPuYt1Cf4Qqej/fbnP2POxB74Y6+hbsRd9zvyvvvIteyZkOvqfh
PevN8Bm2QB9sNAfOroD1xh6Zy2rYGpmjubZhMNJG2+WwDr02UvfAp8gznjVH
c+2PjNU7vGup+VUzpg7rYD1FrBNQoi9anwr1gSvoXdanyBpb65+Rey0YQ28w
5iJrsCkyR3OdgQ+RNbf2volv8zCyttPQiqyZtbOm1vYgHIBDcBiOwQLu6oah
SNQ98C2yJtamCUfRJ2ARe6vgO/q49aqkD31ZI2tlzMauD331w0n0GeuPXgyn
0Od8n0r6OI2eTT5NYq/BHPTZyLMNqEfWxNq0oYm+aj+g78C1SJ/6NkZjHfe9
8DUAv9A/In15xrP6+O/LN0FfhpFKxnQh0qe+/eben8jYeuFv5BnP1uB65Df3
vNO7L0XumfMI+qXx8nYNeB4Zk7GNwm9jJ+cx9trwLHJmnB2/uffKmUKPwwv0
sjJtp+C1ucAMvibhEfodTFbzzreRPWFvaKOtNto6Uw8iZ9BZtGft3aLM2JzR
Spkz7+w7w/PK7Gl72zebVWZO5laHp+gjkb1jj9vr9qy9a0zGpo22zoyzY0/Z
W87IMPqNPVXNnM39SWTu/qb422LO5q6Ntv8APxuQwA==
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtj80KQWEQhsfhlEJZ2trauQuhRCR/OdlzSAolsbEU5QIshKRQLsIluA07
oTzT+RZP73w/88478ZZb6FgiEgUbxgGREQxh6hN5o0c4wB62fpEEH8Ow5ryB
LgYRzl/qBQSpHe5+1H3I49PWf9CDsnoz64lWoAohepb0xIyv+t/QK1wU5iZt
r199XFV8X2gdatCEGb4NdAIO7wOzj+710bmWt6jm1LxZyEBJs/GUQ08wZ97O
7K3732HF3dlk0mwpzUFPEX1AGv58/SoM
         "]]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkrsyg1EUhQ/OX+jiFoMYiaTXqvQ64wFixqRS4BFoFaQwhqQyo9R4hxAP
QBjXGNeEh/CtOavYs/a/zjprX/5TWt9a3RwMISwSQ8REFsIFRB4cJnbI92II
r8TKQAjdmEL5W0xn0hyAM+h3MSmAdfP74Dexhv4nplDeA1/sI+9x11X9Zb63
6aUFHhF1+Bz8vTzhq+Ct8w54af0VeGNe51Xn4lrWSNtzD33wLKaep/G/tkb1
C55lNku+4tvgvGaDL4PnMeVF8pJ5nbetl9+cfVSnbE0lS/NorhHwzn1qvmfv
RLvZIJbIP2LqQz7yK9pHNT+t+YrJS56jWbojXucV69XvA7EA/wj+WaM6ee9/
Eny3pgaeEKfwzZjuiH8Cx6zXf+u4f80x5R7035q+24jpHeg96E31vf/fmPau
ufR2Dq1XzZprqd+G+WPwHyqTWW0=
         "]], 
        Polygon3DBox[{{1259, 351, 318, 1260}, {1249, 336, 303, 1251}, {1303, 
         689, 656, 1305}, {1244, 303, 336, 1245}, {1298, 656, 689, 1299}, {
         1254, 318, 351, 1255}, {1167, 640, 673, 1172}, {1176, 673, 640, 
         1168}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkjlOQ0EQRAcYx5zBCYtYTMAJfAHQvwCIA2CROESWAMsSEFi+gQ+ARELA
YjAhYLaDgBE2OIN66gpa1dO/u7p+zZR3asXudEppXTGjaOeUaiqcCJdKKXVV
PFN+o9jU957wQbGl/FH4othW/ipcUf+5+leFC55dFL67v8hxpg73m+t8/1Ds
TaX0KdxXNJSPhIf0SM9fDk1om9XstfWga+T+sfBesaF6Vfjr+kT445xa1T2X
wlNzdoRH3tXKoQM9Q+GVd7FzYh409ly/zaGP2YMcQQ7fmj25UL7sHJ9a7mkK
5+0Jnn17b134ZG8HOeaZhWPonq8cXlOvlOJMHY45c8Jddx2P7/zv/Ry70YDH
x/YBPzrOeQsDa3jOEeTcOW8Cfvb0zYn33A2z8FWsDQ/G9o17KHzvvKN/GOVa
jg==
         "]], 
        Polygon3DBox[{{1210, 79, 80, 1211}, {1215, 80, 79, 1216}, {1232, 96, 
         95, 1233}, {1227, 95, 96, 1228}}]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Sc0BmAUBuDP3ntvv7333qPRaDQ0DoFGcQ6NRiPSaDQijUYj0mg0Hkd4
6n3fe29kaWNuPSqEsMtcdAibHHHFE18UxoQwyALbnHDDCz9UxoYwyQTjjDHK
CMMMMcgA/fTRSw/ddNFJB+200UoLzTTRSAP11FFLDdVUESHwqs8tp+ywyBBF
fNvlmWuO2WKeLrL4dIhHLjlkjVmaSOJdxD3n7LPCNFX83dCIEPNfI8QRTwKJ
JJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVRJhimT3OuOPtL1+5RmZY
5YALHvggU/HO6P///wJXoSry
       "]], 
      Line3DBox[{1219, 1091, 1092, 1093, 1095, 1103, 1100, 1098, 1096, 1094, 
       1219}], 
      Line3DBox[{1090, 1218, 1217, 1216, 1215, 1214, 1213, 1212, 1211, 1210, 
       1090}], Line3DBox[{1225, 1099, 1109, 1112, 1110, 1108, 1225}], 
      Line3DBox[{1097, 1224, 1223, 1222, 1221, 1220, 1097}], 
      Line3DBox[{1235, 1101, 1102, 1104, 1105, 1107, 1117, 1116, 1114, 1111, 
       1235}], Line3DBox[{1227, 1226, 1106, 1234, 1233, 1232, 1231, 1230, 
       1229, 1228, 1227}], 
      Line3DBox[{1241, 1113, 1115, 1119, 1121, 1120, 1241}], 
      Line3DBox[{1118, 1240, 1239, 1238, 1237, 1236, 1118}], 
      Line3DBox[{1250, 1122, 1123, 1125, 1129, 1133, 1136, 1135, 1132, 1127, 
       1250}], Line3DBox[{1243, 1242, 1124, 1251, 1249, 1248, 1247, 1246, 
       1245, 1244, 1243}], 
      Line3DBox[{1261, 1126, 1128, 1131, 1138, 1141, 1145, 1144, 1140, 1134, 
       1261}], Line3DBox[{1253, 1252, 1130, 1260, 1259, 1258, 1257, 1256, 
       1255, 1254, 1253}], 
      Line3DBox[{1266, 1137, 1139, 1143, 1148, 1147, 1266}], 
      Line3DBox[{1273, 1146, 1149, 1151, 1153, 1152, 1273}], 
      Line3DBox[{1150, 1272, 1271, 1270, 1269, 1268, 1150}], 
      Line3DBox[{1279, 1156, 1158, 1160, 1157, 1155, 1279}], 
      Line3DBox[{1278, 1277, 1276, 1275, 1274, 1154, 1278}], 
      Line3DBox[{1289, 1166, 1168, 1176, 1178, 1179, 1177, 1172, 1167, 1162, 
       1289}], Line3DBox[{1295, 1164, 1169, 1171, 1165, 1163, 1295}], 
      Line3DBox[{1288, 1287, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1159, 
       1288}], Line3DBox[{1161, 1294, 1293, 1292, 1291, 1290, 1161}], 
      Line3DBox[{1304, 1170, 1173, 1175, 1181, 1183, 1185, 1184, 1182, 1180, 
       1304}], Line3DBox[{1298, 1297, 1296, 1174, 1305, 1303, 1302, 1301, 
       1300, 1299, 1298}], 
      Line3DBox[{1310, 1186, 1187, 1189, 1192, 1191, 1310}], 
      Line3DBox[{1307, 1306, 1188, 1311, 1309, 1308, 1307}], 
      Line3DBox[{1317, 1190, 1194, 1197, 1201, 1200, 1317}], 
      Line3DBox[{1322, 1193, 1195, 1199, 1204, 1203, 1322}], 
      Line3DBox[{1313, 1312, 1196, 1316, 1315, 1314, 1313}], 
      Line3DBox[{1329, 1202, 1205, 1207, 1209, 1208, 1329}], 
      Line3DBox[{1206, 1328, 1327, 1326, 1325, 1324, 1206}], 
      Line3DBox[{1142, 1262, 1263, 1264, 1265, 1267, 1142}], 
      Line3DBox[{1198, 1318, 1319, 1320, 1321, 1323, 1198}]}, {
      Line3DBox[{3, 36, 69, 102, 135, 168, 201, 234, 267, 300, 333, 366, 399, 
       432, 465, 498, 531, 564, 597, 630, 663, 696, 729, 762, 795, 828, 861, 
       894, 927, 960, 993, 1026, 1059}], 
      Line3DBox[{5, 38, 71, 104, 137, 170, 203, 236, 269, 302, 335, 368, 401, 
       434, 467, 500, 533, 566, 599, 632, 665, 698, 731, 764, 797, 830, 863, 
       896, 929, 962, 995, 1028, 1061}], 
      Line3DBox[{7, 40, 73, 106, 139, 172, 205, 238, 271, 304, 337, 370, 403, 
       436, 469, 502, 535, 568, 601, 634, 667, 700, 733, 766, 799, 832, 865, 
       898, 931, 964, 997, 1030, 1063}], 
      Line3DBox[{9, 42, 75, 108, 141, 174, 207, 240, 273, 306, 339, 372, 405, 
       438, 471, 504, 537, 570, 603, 636, 669, 702, 735, 768, 801, 834, 867, 
       900, 933, 966, 999, 1032, 1065}], 
      Line3DBox[{11, 44, 77, 110, 143, 176, 209, 242, 275, 308, 341, 374, 407,
        440, 473, 506, 539, 572, 605, 638, 671, 704, 737, 770, 803, 836, 869, 
       902, 935, 968, 1001, 1034, 1067}], Line3DBox[{13, 46, 1219}], 
      Line3DBox[{15, 48, 81, 114, 147, 180, 213, 246, 279, 312, 345, 378, 411,
        444, 477, 510, 543, 576, 609, 642, 675, 708, 741, 774, 807, 840, 873, 
       906, 939, 972, 1005, 1038, 1071}], 
      Line3DBox[{17, 50, 83, 116, 149, 182, 215, 248, 281, 314, 347, 380, 413,
        446, 479, 512, 545, 578, 611, 644, 677, 710, 743, 776, 809, 842, 875, 
       908, 941, 974, 1007, 1040, 1073}], 
      Line3DBox[{19, 52, 85, 118, 151, 184, 217, 250, 283, 316, 349, 382, 415,
        448, 481, 514, 547, 580, 613, 646, 679, 712, 745, 778, 811, 844, 877, 
       910, 943, 976, 1009, 1042, 1075}], 
      Line3DBox[{21, 54, 87, 120, 153, 186, 219, 252, 285, 1126}], 
      Line3DBox[{23, 56, 89, 122, 155, 188, 221, 254, 287, 320, 353, 386, 419,
        452, 485, 518, 551, 584, 617, 650, 683, 716, 749, 782, 815, 848, 881, 
       914, 947, 980, 1013, 1046, 1079}], 
      Line3DBox[{25, 58, 91, 124, 157, 190, 223, 256, 289, 322, 355, 388, 421,
        454, 487, 520, 553, 586, 619, 652, 685, 718, 751, 784, 817, 850, 883, 
       916, 949, 982, 1015, 1048, 1081}], 
      Line3DBox[{27, 60, 93, 126, 159, 192, 225, 258, 291, 324, 357, 390, 423,
        456, 489, 522, 555, 588, 621, 654, 687, 720, 753, 786, 819, 852, 885, 
       918, 951, 984, 1017, 1050, 1083}], Line3DBox[{29, 62, 1101}], 
      Line3DBox[{31, 64, 97, 130, 163, 196, 229, 262, 295, 328, 361, 394, 427,
        460, 493, 526, 559, 592, 625, 658, 691, 724, 757, 790, 823, 856, 889, 
       922, 955, 988, 1021, 1054, 1087}], 
      Line3DBox[{1069, 1036, 1003, 970, 937, 904, 871, 838, 805, 772, 739, 
       706, 1284}], Line3DBox[{1077, 1044, 1011, 978, 1209}], 
      Line3DBox[{1085, 1052, 1019, 986, 953, 920, 887, 854, 821, 788, 755, 
       722, 1185}], Line3DBox[{1225, 1098}], 
      Line3DBox[{1112, 145, 178, 211, 244, 277, 310, 343, 376, 409, 442, 475, 
       508, 541, 574, 1154}], Line3DBox[{1114, 1113}], 
      Line3DBox[{1121, 161, 194, 227, 260, 293, 326, 359, 392, 425, 458, 491, 
       524, 557, 590, 1161}], Line3DBox[{1145, 1146}], 
      Line3DBox[{1153, 417, 450, 483, 516, 549, 582, 615, 648, 681, 714, 747, 
       780, 813, 846, 879, 1190}], Line3DBox[{1159, 1276}], 
      Line3DBox[{1292, 1170}], Line3DBox[{1201, 1202}]}, {
      Line3DBox[{627, 626, 625, 624, 1293}], 
      Line3DBox[{561, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 550, 
       549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539, 538, 537, 536, 
       535, 534, 533, 532, 531, 530, 529}], 
      Line3DBox[{67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1094}], 
      Line3DBox[{99, 98, 97, 1107}], 
      Line3DBox[{133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
       145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
       159, 160, 161, 162, 163, 164, 165}], 
      Line3DBox[{199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
       211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
       225, 226, 227, 228, 229, 230, 231}], 
      Line3DBox[{265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 
       277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
       291, 292, 293, 294, 295, 296, 297}], 
      Line3DBox[{331, 332, 333, 334, 335, 1132}], 
      Line3DBox[{363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 
       1141}], Line3DBox[{397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
       407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 
       421, 422, 423, 424, 425, 426, 427, 428, 429}], 
      Line3DBox[{463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 
       475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 
       489, 490, 491, 492, 493, 494, 495}], 
      Line3DBox[{595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 
       1274}], Line3DBox[{693, 692, 691, 690, 1183}], 
      Line3DBox[{661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 
       1282}], Line3DBox[{759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 
       749, 748, 747, 746, 745, 744, 743, 742, 741, 740, 739, 738, 737, 736, 
       735, 734, 733, 732, 731, 730, 729, 728, 727}], 
      Line3DBox[{825, 824, 823, 822, 821, 820, 819, 818, 817, 816, 815, 814, 
       813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 
       799, 798, 797, 796, 795, 794, 793}], 
      Line3DBox[{891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 
       879, 878, 877, 876, 875, 874, 873, 872, 871, 870, 869, 868, 867, 866, 
       865, 864, 863, 862, 861, 860, 859}], 
      Line3DBox[{957, 956, 955, 954, 953, 952, 951, 950, 949, 948, 947, 946, 
       1207}], Line3DBox[{925, 926, 927, 928, 929, 1322}], 
      Line3DBox[{1023, 1022, 1021, 1020, 1019, 1018, 1017, 1016, 1015, 1014, 
       1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 1003, 1002,
        1001, 1000, 999, 998, 997, 996, 995, 994, 993, 992, 991}], 
      Line3DBox[{1235, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81,
        1095}], 
      Line3DBox[{1133, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 
       348, 349, 350, 1140}], 
      Line3DBox[{1277, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 
       619, 620, 621, 622, 1290}], 
      Line3DBox[{1285, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 
       685, 686, 687, 688, 1182}], 
      Line3DBox[{1199, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 
       942, 943, 944, 1329}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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

    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"Real part of a solution to Painlev\[EAcute] IV in the complex plane\"", 
    TraditionalForm],
  PlotRange->{{-1., 1.}, {-1., 1.}, {-12.250073410379922`, 
   11.894573971049656`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.487506845796139*^9, 3.487507956996016*^9, 
  3.494229987737576*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ablowitz\[Dash]Segur: Large positive ",
 StyleBox["x",
  FontSlant->"Italic"]
}], "Section",
 CellChangeTimes->{{3.487496693912539*^9, 3.4874967054870577`*^9}}],

Cell[TextData[{
 "In this example we use the simplest example of nonlinear steepest descent \
for homogenous Painlev\[EAcute] II with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "2"], " ", "=", " ", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "1"], "=", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["s", "3"]}], "=", 
     RowBox[{"\[ImaginaryI]", " ", "s"}]}]}], TraditionalForm]]],
 ".  The deformation is based on [Fokas et al. 2006].  We first scale the RH \
problem by ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"x", "/", "2"}]], TraditionalForm]]],
 ", resulting in the new \[Theta] function and ",
 StyleBox["G ",
  FontSlant->"Italic"],
 "function:"
}], "Text",
 CellChangeTimes->{{3.487496718271366*^9, 3.487496993793873*^9}, {
  3.487497726785088*^9, 3.48749780644733*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", "z_", "]"}], ":=", 
   RowBox[{"I", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"4", "/", "3"}], " ", 
       RowBox[{"z", "^", "3"}]}], " ", "+", " ", "z"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "_", "]"}], "[", 
    RowBox[{"_", ",", "_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "1", "]"}], "[", 
    RowBox[{"s_", ",", "x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {
        RowBox[{"I", " ", "s"}], "1"}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", "6", "]"}], "[", 
    RowBox[{"s_", ",", "x_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{"I", " ", "s"}]},
       {"0", "1"}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], "  ", 
          RowBox[{"\[Theta]", "[", "z", "]"}]}], "]"}]}
      }], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4874977193863297`*^9, 3.487497751593233*^9}, {
  3.487498108273378*^9, 3.487498136707246*^9}}],

Cell[TextData[{
 "When ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "is positive, this has two stationary points at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    FractionBox["\[ImaginaryI]", "2"]}], TraditionalForm]]],
 ". We need to know the paths of steepest descent eminating from this point \
and a sequence of points going to infinity.  Rather than trying to determine \
this analytically, we compute it numerically.  For ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "> 0, at the stationary point ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ImaginaryI]", "2"], TraditionalForm]]],
 ", we know there are two paths of descent, one path T[x,r] corresponding to \
G[1] and approaching  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Pi]", "/", "6"}]}]], "\[Infinity]"}], TraditionalForm]]],
 " and one path Tm[x,r] corresponding to G[3] and approaching ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"5", " ", "\[ImaginaryI]", " ", 
      RowBox[{"\[Pi]", "/", "6"}]}]], "\[Infinity]"}], TraditionalForm]]],
 ".  We thus interpolate in arcs centred at ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ImaginaryI]", "2"], TraditionalForm]]],
 "of radius ",
 StyleBox["r",
  FontSlant->"Italic"],
 " in the complex plane to isolate each path.  Note that when ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is complex, the path of steepest descent changes depending on arg ",
 StyleBox["x",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{
  3.48749691330361*^9, {3.487496981429056*^9, 3.487497557285533*^9}, {
   3.487497877228376*^9, 3.487497877705216*^9}, {3.4875079891211576`*^9, 
   3.487508015254342*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "NZeroQ"}]}], "]"}], ":=", 
   RowBox[{".5", " ", "I"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", "#", "]"}]}], "]"}], "-", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"I", "/", "2"}], "]"}]}], "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{
         RowBox[{".5", " ", "I"}], ",", "r", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.", "-", 
            RowBox[{"Arg", "[", "x", "]"}]}], ",", 
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], "-", "0.1", "-", 
            RowBox[{"Arg", "[", "x", "]"}]}]}], "}"}]}], "]"}]}], "]"}], "//",
      "Roots"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "6"}], "-", 
         RowBox[{
          RowBox[{"Arg", "[", "x", "]"}], "  ", "/", "2"}]}], ")"}]}], "]"}], 
     "\[Infinity]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tm", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tm", "[", 
    RowBox[{"_", ",", 
     RowBox[{"_", "?", "NZeroQ"}]}], "]"}], ":=", 
   RowBox[{".5", " ", "I"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tm", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fun", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", "#", "]"}]}], "]"}], "-", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "x", ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"I", "/", "2"}], "]"}]}], "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Arc", "[", 
        RowBox[{
         RowBox[{".5", " ", "I"}], ",", "r", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "-", 
            RowBox[{"Arg", "[", "x", "]"}]}], ",", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"\[Pi]", "/", "4"}], "-", 
            RowBox[{"Arg", "[", "x", "]"}]}]}], "}"}]}], "]"}]}], "]"}], "//",
      "Roots"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tm", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"_", "?", "InfinityQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         RowBox[{"\[Pi]", "/", "6"}]}], "-", 
        RowBox[{
         RowBox[{"Arg", "[", "x", "]"}], "  ", "/", "2"}]}], ")"}]}], "]"}], 
    "\[Infinity]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.485246215152083*^9, 3.4852462838217688`*^9}, {
   3.485257764007806*^9, 3.485257775998352*^9}, {3.485260353089241*^9, 
   3.485260353887151*^9}, {3.4852605228878927`*^9, 3.485260544225094*^9}, {
   3.4852605952396183`*^9, 3.4852606822745533`*^9}, 3.485261018857582*^9, {
   3.485334767576994*^9, 3.4853347680819273`*^9}, {3.4853348099580507`*^9, 
   3.485334842044345*^9}, {3.485335086372427*^9, 3.4853350928002653`*^9}, {
   3.485336535346751*^9, 3.48533654054811*^9}, {3.485336598445262*^9, 
   3.485336618721285*^9}, {3.485336708003509*^9, 3.485336770695155*^9}, {
   3.485345613603325*^9, 3.4853456150977583`*^9}, {3.487497494780986*^9, 
   3.487497496473886*^9}, {3.487497576290934*^9, 3.487497576890728*^9}, {
   3.4874978619376097`*^9, 3.487497862564803*^9}}],

Cell["\<\
We now determine points along the path of steepest descent, which approach \
the stationary point at a rate so that G is resolved with the same number of \
points.\
\>", "Text",
 CellChangeTimes->{{3.487497865584845*^9, 3.487497933004964*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ptsp", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"T", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"Abs", "[", "x", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{"3", "/", "4"}], ")"}]}]], " ", 
       RowBox[{"Range", "[", 
        RowBox[{".5", ",", "3.", ",", ".5"}], "]"}]}], ",", 
      RowBox[{"{", "\[Infinity]", " ", "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ptsm", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Tm", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Reverse", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"Abs", "[", "x", "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "4"}], ")"}]}]], " ", 
        RowBox[{"Range", "[", 
         RowBox[{".5", ",", "3.", ",", ".5"}], "]"}]}], ",", 
       RowBox[{"{", "\[Infinity]", " ", "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pts", "[", "x_", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ptsm", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", "[", 
       RowBox[{"x", ",", "0."}], "]"}], "}"}], ",", 
     RowBox[{"ptsp", "[", "x", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.487498441175997*^9, 3.4874984931238194`*^9}, {
  3.487498747970007*^9, 3.487498749530409*^9}}],

Cell["Here is a plot of the computed points", "Text",
 CellChangeTimes->{{3.487497588203045*^9, 3.487497610978104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pts", "[", "20.", "]"}], "//", "ComplexDotPlot"}]], "Input",
 CellChangeTimes->{{3.4874976127365017`*^9, 3.487497636994381*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{-0.3155767338897662, 0.5321618409758875}, {-0.2633740303101262,
      0.5226107154922001}, {-0.2109681380618908, 
     0.5146220474864085}, {-0.15838870498865965`, 
     0.5082935444104422}, {-0.10567207453403493`, 
     0.5037084432275977}, {-0.05286037330880103, 0.5009305404499177}, {0., 
     0.5}, {0.05286037330880103, 0.5009305404499188}, {0.10567207453403477`, 
     0.503708443227604}, {0.15838870498865973`, 0.5082935444104415}, {
     0.210968138061891, 0.5146220474864052}, {0.26337403031012663`, 
     0.5226107154921945}, {0.3155767338897667, 0.5321618409758825}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.5},
  PlotRange->{{-0.3155767338897662, 0.3155767338897667}, {0.5, 
   0.5321618409758875}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.487497627384095*^9, 3.487497637338978*^9}, 
   3.487497938400713*^9, 3.4874981417350082`*^9, {3.4874982300536203`*^9, 
   3.487498234008225*^9}, {3.487498453359563*^9, 3.487498494452983*^9}, 
   3.487498751549081*^9, 3.487507957702083*^9, 3.494229988287044*^9}]
}, Open  ]],

Cell[TextData[{
 "The jump curve G[1]  is precisely the inverse of G[3].  Thus when we deform \
both curves to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    FractionBox["\[ImaginaryI]", "2"]}], TraditionalForm]]],
 ", they cancel and become disjoint from G[4] and G[6].  We thus obtain the \
following jump curve (the parameter Stretch is the stretch of the rays going \
to infinity).  Since the InterpolationPrecision parameter is absolute \
accuracy (otherwise an unnecessary number of interpolation points would be \
used along curves where the jump curve is small), we have to trick the system \
to obtain relative accuracy, but only relative to the stationary point"
}], "Text",
 CellChangeTimes->{
  3.487497162558928*^9, {3.487497312103574*^9, 3.4874973126217413`*^9}, {
   3.487497670195459*^9, 3.487497701614649*^9}, {3.4874978236214867`*^9, 
   3.487497857095881*^9}, {3.487498147541972*^9, 3.48749817772401*^9}, {
   3.487498553501741*^9, 3.487498647312189*^9}, {3.487508046163103*^9, 
   3.4875080800529137`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"GG", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GG", "[", 
     RowBox[{"s", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["x", 
           RowBox[{"3", "/", "2"}]]}], "3"]}]], 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Fun", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["x", 
                RowBox[{"3", "/", "2"}]]}], "3"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"G", "[", "1", "]"}], "[", 
                RowBox[{"s", ",", "x", ",", "#"}], "]"}], "-", 
               RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "/.", 
              RowBox[{
               RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
           "&"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{"pts", "[", "x", "]"}], ",", 
            RowBox[{"Stretch", "\[Rule]", 
             RowBox[{"1", "/", 
              RowBox[{"Abs", "[", "x", "]"}]}]}]}], "]"}], ",", 
          RowBox[{"InterpolationPrecision", "\[Rule]", 
           RowBox[{"10.", "^", 
            RowBox[{"(", 
             RowBox[{"-", "8"}], ")"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Fun", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["x", 
                RowBox[{"3", "/", "2"}]]}], "3"]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"G", "[", "6", "]"}], "[", 
                RowBox[{"s", ",", "x", ",", "#"}], "]"}], "-", 
               RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "/.", 
              RowBox[{
               RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}]}], 
           "&"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"pts", "[", "x", "]"}]}], ")"}], "//", "Reverse"}], 
            ",", 
            RowBox[{"Stretch", "\[Rule]", 
             RowBox[{"1", "/", 
              RowBox[{"Abs", "[", "x", "]"}]}]}]}], "]"}], ",", 
          RowBox[{"InterpolationPrecision", "\[Rule]", 
           RowBox[{"10.", "^", 
            RowBox[{"(", 
             RowBox[{"-", "8"}], ")"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], "//", "AddIdentityMatrix"}]}]}]}]], "Input",
 CellChangeTimes->{{3.487498374738532*^9, 3.487498375907094*^9}, {
  3.4874986498981113`*^9, 3.48749873497235*^9}, {3.487498814416297*^9, 
  3.4874988166169567`*^9}, {3.487498926126938*^9, 3.4874989538992357`*^9}, {
  3.487499577007535*^9, 3.487499578827052*^9}, {3.487500061297894*^9, 
  3.487500064201614*^9}, {3.4942245072143593`*^9, 3.494224510892404*^9}}],

Cell["Here is a plot of the new jump curve:", "Text",
 CellChangeTimes->{{3.48749796010806*^9, 3.487497965284528*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GG", "[", 
   RowBox[{"1.", ",", "10."}], "]"}], "//", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.487497944589985*^9, 3.487497956288937*^9}, {
  3.48749886333986*^9, 3.4874988635698442`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{-0.5266378186791009, 0.5851915333356112}], 
    ArrowBox[{{-2.258688626247978, 1.5851915333356112`}, {-0.5266378186791009,
      0.5851915333356112}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.5266378186791009, 0.5851915333356112}], 
    PointBox[{-0.44037461519459614`, 0.5609307151831906}], 
    ArrowBox[{{-0.5266378186791009, 
     0.5851915333356112}, {-0.44037461519459614`, 0.5609307151831906}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.44037461519459614`, 0.5609307151831906}], 
    PointBox[{-0.35339625124103197`, 0.5400274407815517}], 
    ArrowBox[{{-0.44037461519459614`, 
     0.5609307151831906}, {-0.35339625124103197`, 0.5400274407815517}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.35339625124103197`, 0.5400274407815517}], 
    PointBox[{-0.26574750800615315`, 0.5230110699948549}], 
    ArrowBox[{{-0.35339625124103197`, 
     0.5400274407815517}, {-0.26574750800615315`, 0.5230110699948549}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.26574750800615315`, 0.5230110699948549}], 
    PointBox[{-0.17752375371356666`, 0.5103968009083919}], 
    ArrowBox[{{-0.26574750800615315`, 
     0.5230110699948549}, {-0.17752375371356666`, 0.5103968009083919}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.17752375371356666`, 0.5103968009083919}], 
    PointBox[{-0.08887518259931539, 0.5026260366256569}], 
    ArrowBox[{{-0.17752375371356666`, 
     0.5103968009083919}, {-0.08887518259931539, 0.5026260366256569}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.08887518259931539, 0.5026260366256569}], PointBox[{0, 0.5}],
     ArrowBox[{{-0.08887518259931539, 0.5026260366256569}, {0, 0.5}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, 0.5}], PointBox[{0.08887518259931532, 0.5026260366256603}], 
    ArrowBox[{{0, 0.5}, {0.08887518259931532, 0.5026260366256603}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.08887518259931532, 0.5026260366256603}], 
    PointBox[{0.1775237537135666, 0.5103968009083906}], 
    ArrowBox[{{0.08887518259931532, 0.5026260366256603}, {0.1775237537135666, 
     0.5103968009083906}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.1775237537135666, 0.5103968009083906}], 
    PointBox[{0.26574750800615365`, 0.5230110699948491}], 
    ArrowBox[{{0.1775237537135666, 0.5103968009083906}, {0.26574750800615365`,
      0.5230110699948491}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.26574750800615365`, 0.5230110699948491}], 
    PointBox[{0.3533962512410322, 0.5400274407815491}], 
    ArrowBox[{{0.26574750800615365`, 0.5230110699948491}, {0.3533962512410322,
      0.5400274407815491}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.3533962512410322, 0.5400274407815491}], 
    PointBox[{0.4403746151945948, 0.5609307151832}], 
    ArrowBox[{{0.3533962512410322, 0.5400274407815491}, {0.4403746151945948, 
     0.5609307151832}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.4403746151945948, 0.5609307151832}], 
    PointBox[{0.526637818679098, 0.5851915333356298}], 
    ArrowBox[{{0.4403746151945948, 0.5609307151832}, {0.526637818679098, 
     0.5851915333356298}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0.526637818679098, 0.5851915333356298}], 
    ArrowBox[{{0.526637818679098, 0.5851915333356298}, {2.2586886262479755`, 
     1.5851915333356297`}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{-0.526637818679098, -0.5851915333356298}], 
    ArrowBox[{{-2.2586886262479755`, -1.5851915333356297`}, \
{-0.526637818679098, -0.5851915333356298}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.526637818679098, -0.5851915333356298}], 
    PointBox[{-0.4403746151945948, -0.5609307151832}], 
    ArrowBox[{{-0.526637818679098, -0.5851915333356298}, \
{-0.4403746151945948, -0.5609307151832}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.4403746151945948, -0.5609307151832}], 
    PointBox[{-0.3533962512410322, -0.5400274407815491}], 
    ArrowBox[{{-0.4403746151945948, -0.5609307151832}, {-0.3533962512410322, \
-0.5400274407815491}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.3533962512410322, -0.5400274407815491}], 
    PointBox[{-0.26574750800615365`, -0.5230110699948491}], 
    ArrowBox[{{-0.3533962512410322, -0.5400274407815491}, \
{-0.26574750800615365`, -0.5230110699948491}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.26574750800615365`, -0.5230110699948491}], 
    PointBox[{-0.1775237537135666, -0.5103968009083906}], 
    ArrowBox[{{-0.26574750800615365`, -0.5230110699948491}, \
{-0.1775237537135666, -0.5103968009083906}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.1775237537135666, -0.5103968009083906}], 
    PointBox[{-0.08887518259931532, -0.5026260366256603}], 
    ArrowBox[{{-0.1775237537135666, -0.5103968009083906}, \
{-0.08887518259931532, -0.5026260366256603}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{-0.08887518259931532, -0.5026260366256603}], 
    PointBox[{0, -0.5}], 
    ArrowBox[{{-0.08887518259931532, -0.5026260366256603}, {0, -0.5}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0, -0.5}], 
    PointBox[{0.08887518259931539, -0.5026260366256569}], 
    ArrowBox[{{0, -0.5}, {0.08887518259931539, -0.5026260366256569}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.08887518259931539, -0.5026260366256569}], 
    PointBox[{0.17752375371356666`, -0.5103968009083919}], 
    ArrowBox[{{0.08887518259931539, -0.5026260366256569}, {
     0.17752375371356666`, -0.5103968009083919}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.17752375371356666`, -0.5103968009083919}], 
    PointBox[{0.26574750800615315`, -0.5230110699948549}], 
    ArrowBox[{{0.17752375371356666`, -0.5103968009083919}, {
     0.26574750800615315`, -0.5230110699948549}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.26574750800615315`, -0.5230110699948549}], 
    PointBox[{0.35339625124103197`, -0.5400274407815517}], 
    ArrowBox[{{0.26574750800615315`, -0.5230110699948549}, {
     0.35339625124103197`, -0.5400274407815517}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.35339625124103197`, -0.5400274407815517}], 
    PointBox[{0.44037461519459614`, -0.5609307151831906}], 
    ArrowBox[{{0.35339625124103197`, -0.5400274407815517}, {
     0.44037461519459614`, -0.5609307151831906}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Medium],
     PointBox[{0.44037461519459614`, -0.5609307151831906}], 
    PointBox[{0.5266378186791009, -0.5851915333356112}], 
    ArrowBox[{{0.44037461519459614`, -0.5609307151831906}, {
     0.5266378186791009, -0.5851915333356112}}]}, 
   {RGBColor[0, 0, 1], PointSize[Large], Thickness[Large], Arrowheads[Large], 
    PointBox[{0.5266378186791009, -0.5851915333356112}], 
    ArrowBox[{{0.5266378186791009, -0.5851915333356112}, {
     2.258688626247978, -1.5851915333356112`}}]}},
  Axes->True]], "Output",
 CellChangeTimes->{{3.4874979506676683`*^9, 3.487497956549711*^9}, 
   3.487498239969702*^9, {3.487498860183519*^9, 3.48749886500885*^9}, 
   3.4874989654071198`*^9, 3.487499727390531*^9, 3.487507958919095*^9, 
   3.494229989241234*^9}]
}, Open  ]],

Cell[TextData[{
 "For ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "near each other (say, inside blocks of size 3), we want to reuse the \
computation.  Thus we want the RH curves to be the same, and the length along \
each curve to be the same.   GG2 accomplishes this."
}], "Text",
 CellChangeTimes->{{3.487499356612637*^9, 3.487499436224002*^9}, {
  3.48749997627633*^9, 3.487499976978322*^9}, {3.4875081110106173`*^9, 
  3.487508116530287*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nr", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"(", "x", ")"}], "/", "3"}], "]"}], "3"}], "+", "1."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nrt", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"nr", "[", 
      RowBox[{"Abs", "[", "x", "]"}], "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       RowBox[{"Arg", "[", "x", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GG2", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GG2", "[", 
   RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", "1", "]"}], "[", 
          RowBox[{"s", ",", "x", ",", "#"}], "]"}], "/.", 
         RowBox[{
          RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
      ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{"pts", "[", 
         RowBox[{"nrt", "[", "x", "]"}], "]"}], ",", 
        RowBox[{"Stretch", "\[Rule]", 
         RowBox[{"1", "/", 
          RowBox[{"Abs", "[", 
           RowBox[{"nrt", "[", "x", "]"}], "]"}]}]}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Length", "/@", 
          RowBox[{"GG", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nrt", "[", "x", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"pts", "[", 
            RowBox[{"nrt", "[", "x", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}],
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Fun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"G", "[", "6", "]"}], "[", 
          RowBox[{"s", ",", "x", ",", "#"}], "]"}], "/.", 
         RowBox[{
          RowBox[{"Underflow", "[", "]"}], "\[Rule]", "0"}]}], ")"}], "&"}], 
      ",", 
      RowBox[{"Line", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"pts", "[", 
            RowBox[{"nrt", "[", "x", "]"}], "]"}]}], ")"}], "//", "Reverse"}],
         ",", 
        RowBox[{"Stretch", "\[Rule]", 
         RowBox[{"1", "/", 
          RowBox[{"Abs", "[", 
           RowBox[{"nrt", "[", "x", "]"}], "]"}]}]}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Length", "/@", 
          RowBox[{"GG", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nrt", "[", "x", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"pts", "[", 
            RowBox[{"nrt", "[", "x", "]"}], "]"}], "]"}], "-", "1"}]}], "]"}],
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.487499444818931*^9, 3.487499539326023*^9}, {
   3.487499582253252*^9, 3.487499584126034*^9}, 3.487499752096848*^9, {
   3.48749997913647*^9, 3.4874999808470783`*^9}, {3.494224518606434*^9, 
   3.494224522999289*^9}}],

Cell["\<\
 We can now compute U.  We also need to scale the computed solution p.\
\>", "Text",
 CellChangeTimes->{{3.487497985140697*^9, 3.487498059543539*^9}, {
  3.487498255424407*^9, 3.487498271727612*^9}, {3.4874996194848223`*^9, 
  3.487499622048493*^9}, {3.487508120960466*^9, 3.487508136918256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", "[", "x", "]"}], "=", 
    RowBox[{"RHSolverTop", "[", 
     RowBox[{"GG", "[", 
      RowBox[{"1.", ",", "x"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "x_", "]"}], ":=", 
   RowBox[{"R", "[", 
    RowBox[{"nr", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GG2", "[", 
     RowBox[{"s", ",", "x"}], "]"}], "//", 
    RowBox[{"R2", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "//", "Clear"}], ";", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"s_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"s", ",", "x"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"DomainIntegrate", "[", 
        RowBox[{"U", "[", 
         RowBox[{"s", ",", "x"}], "]"}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", "\[NonBreakingSpace]", "I"}], ")"}]}], " ", 
     
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.487498040869803*^9, 3.487498070470646*^9}, {
  3.4874982885649633`*^9, 3.487498302569709*^9}, {3.487498871389127*^9, 
  3.487498878515168*^9}, {3.487499623592018*^9, 3.487499643142894*^9}, {
  3.4874997883862057`*^9, 3.487499789118299*^9}}],

Cell["\<\
We can find the relative error of the approximation for the \
Hastings\[Dash]McLeod solution (note that x = 10 the relative error between \
the Hastings\[Dash]McLeod solution and the Airy function is already on the \
order of machine precision).  Note the jump in accuracy as we move from one \
block to the next, and that the method remains accurate in the asymptotic \
regime.\
\>", "Text",
 CellChangeTimes->{{3.487499165427227*^9, 3.4874992217769136`*^9}, {
  3.487500023538669*^9, 3.4875000541189337`*^9}, {3.4875012611847258`*^9, 
  3.4875012813735847`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"ReadList", "[", 
      RowBox[{
      "\"\<RiemannHilbert/Data/McLeodSolution.txt\>\"", ",", "Number"}], 
      "]"}], ",", "7"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4874989782481327`*^9, 3.4874989847008257`*^9}, {
  3.487499015749301*^9, 3.487499021267578*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLineLogPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"1.", ",", 
                RowBox[{"x", "=", 
                 RowBox[{"First", "[", "#", "]"}]}]}], "]"}], "-", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             ")"}], "/", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "//",
            "Abs"}], ")"}], "&"}], "/@", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"660", ";;", "900", ";;", "5"}], "\[RightDoubleBracket]"}]}],
        "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Error in approximating the Hastings\[Dash]McLeod solution for \
large x\>\""}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.487499233435021*^9, 3.487499340070856*^9}, {
   3.487499819059517*^9, 3.487499963030755*^9}, {3.487500010181272*^9, 
   3.4875000304509277`*^9}, {3.487500078508412*^9, 3.487500169838297*^9}, {
   3.487501137794245*^9, 3.4875012525306664`*^9}, {3.4875015297918587`*^9, 
   3.4875015497504463`*^9}, {3.487504346070032*^9, 3.4875043641090717`*^9}, 
   3.487508149734049*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQDQEf7J2NpYr8KywPQAUcii7FT5vKYgblczjYZ6kG
q0SZQPkCDlVv44V2mhtD+SIOK7N3rrWvMILyJRzydlqmuVrB+DIO3C+MBBxz
7KF8BYeU1J3TdtvaQflKDtdczs1OjofxVRy2M/F4dl6zgfLVHFrq1viZy1hD
+RoOlgyX87l/wtyr5fD2XaH3dHEYX8fBdE/SQ4N4Cyhfz6F8hVeXwRFzKN/A
gf3ztzmb7WF8Q4ftGv3bVwnB9Bs5XFlw9/G2Rph+YweXQIWtjf9h6k0cZGIb
rx/qgPFNHTT9LigESsP4Zg4B7Bzr1m6FhZ+5g/2S4q79YTC+hcPGKAfHDX9N
oXxLh8/LwmSvrYTxrRwkNOXzMq/A7Ld2YEw2cpAshfFtHLbOPzr9jjSMb+tw
x14y6v1xmP12Do8rhdLnVsD49g7rjgdHxenC+A4O+uVms489hbqnwcHhWz+X
d8NCmPscHbZvd7pgnQCTd3TwSz1xbLciTN7J4fTLqaes86H2Nzg53F58wNhY
G+YeZwe/C/qN9q+g9jU4O/i3zXXiXgOz38Xh/v4I8bACmLyLwxStvxdfm8Hk
XR20rhQ2LfwPs9/VYYv/hqu+p2D2uzm852yVuTANJu/mIHsj5gdHKkze3UE5
8KvcDROY+9wdfjdnL78Jjz8Ph37bfdFLz8Ds93CIjDu9WmO2+QEAU6XbOQ==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., -31.422867786815953`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-32.23619130191664, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-29.933606208922594`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-27.631021115928547`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-20.72326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-31.543044121356694`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-31.13757901324853, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.84989694079675, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.626753389482538`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.444431832688586`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.290281152861326`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.156749760236803`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.03896672458042, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.240459028362647`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.834993920254483`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.547311847802703`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.324168296488494`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.14184673969454, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.98769605986728, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.85416466724276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.736381631586376`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.937873935368604`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.53240882726044, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.244726754808656`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.021583203494448`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.839261646700493`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.685110966873236`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.551579574248713`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.43379653859233, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.635288842374557`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.229823734266393`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.942141661814613`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.7189981105004, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.536676553706446`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.38252587387919, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.248994481254666`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.131211445598282`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.33270374938051, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.927238641272346`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.639556568820566`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.416413017506358`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.234091460712403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.079940780885142`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.94640938826062, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.82862635260424, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.030118656386467`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.624653548278303`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.33697147582652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.11382792451231, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.931506367718356`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.7773556878911, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.643824295266576`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.526041259610192`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-32.23619130191664, 
       FormBox["\"\"", TraditionalForm]}, {-29.933606208922594`, 
       FormBox["\"\"", TraditionalForm]}, {-27.631021115928547`, 
       FormBox["\"\"", TraditionalForm]}, {-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-23.025850929940457`, 
       FormBox["\"\"", TraditionalForm]}, {-20.72326583694641, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-31.543044121356694`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-31.13757901324853, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.84989694079675, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.626753389482538`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.444431832688586`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.290281152861326`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.156749760236803`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-30.03896672458042, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-29.240459028362647`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.834993920254483`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.547311847802703`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.324168296488494`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-28.14184673969454, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.98769605986728, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.85416466724276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-27.736381631586376`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.937873935368604`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.53240882726044, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.244726754808656`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-26.021583203494448`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.839261646700493`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.685110966873236`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.551579574248713`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-25.43379653859233, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.635288842374557`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-24.229823734266393`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.942141661814613`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.7189981105004, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.536676553706446`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.38252587387919, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.248994481254666`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-23.131211445598282`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-22.33270374938051, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.927238641272346`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.639556568820566`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.416413017506358`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.234091460712403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-21.079940780885142`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.94640938826062, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.82862635260424, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-20.030118656386467`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.624653548278303`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.33697147582652, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.11382792451231, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.931506367718356`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.7773556878911, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.643824295266576`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.526041259610192`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Error in approximating the Hastings\[Dash]McLeod solution for large \
x\"", TraditionalForm],
  PlotRange->{{0., 49.}, {-31.422867786815953`, -18.227621449559074`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-32.23619130191664, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-29.933606208922594`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-27.631021115928547`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-23.025850929940457`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-20.72326583694641, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-31.543044121356694`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-31.13757901324853, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.84989694079675, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.626753389482538`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.444431832688586`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.290281152861326`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.156749760236803`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-30.03896672458042, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-29.240459028362647`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.834993920254483`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.547311847802703`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.324168296488494`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-28.14184673969454, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.98769605986728, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.85416466724276, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-27.736381631586376`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.937873935368604`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.53240882726044, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.244726754808656`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-26.021583203494448`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.839261646700493`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.685110966873236`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.551579574248713`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-25.43379653859233, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-24.635288842374557`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-24.229823734266393`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.942141661814613`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.7189981105004, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.536676553706446`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.38252587387919, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.248994481254666`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-23.131211445598282`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-22.33270374938051, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.927238641272346`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.639556568820566`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.416413017506358`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.234091460712403`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-21.079940780885142`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.94640938826062, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.82862635260424, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-20.030118656386467`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.624653548278303`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.33697147582652, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.11382792451231, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.931506367718356`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.7773556878911, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.643824295266576`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.526041259610192`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.487508284150633*^9, 3.494230155310885*^9}]
}, Open  ]],

Cell[TextData[{
 "We can also use this approach to compute other Ablowitz\[Dash]Segur \
solutions.  Letting ",
 StyleBox["s",
  FontSlant->"Italic"],
 " become large and a pole appears."
}], "Text",
 CellChangeTimes->{{3.487501293605707*^9, 3.487501310644134*^9}, {
  3.487501647513755*^9, 3.4875016571977873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLineLogPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "[", 
              RowBox[{"1.", ",", 
               RowBox[{"x", "=", 
                RowBox[{"First", "[", "#", "]"}]}]}], "]"}], ")"}], "&"}], "/@", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"660", ";;", "700"}], "\[RightDoubleBracket]"}]}], "//", 
          "Abs"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "[", 
              RowBox[{"10.", ",", 
               RowBox[{"x", "=", 
                RowBox[{"First", "[", "#", "]"}]}]}], "]"}], ")"}], "&"}], "/@", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"660", ";;", "700"}], "\[RightDoubleBracket]"}]}], "//", 
          "Abs"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "[", 
              RowBox[{"100.", ",", 
               RowBox[{"x", "=", 
                RowBox[{"First", "[", "#", "]"}]}]}], "]"}], ")"}], "&"}], "/@", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"660", ";;", "700"}], "\[RightDoubleBracket]"}]}], "//", 
          "Abs"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Three Ablowitz\[Dash]Segur solutions\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.487501427458205*^9, 3.4875015967738867`*^9}, {
   3.487501632224627*^9, 3.4875016960578623`*^9}, 3.487501749535434*^9, {
   3.487501791921855*^9, 3.487501795277618*^9}, {3.487501857548588*^9, 
   3.487501857970523*^9}, {3.487501898580653*^9, 3.487501929536117*^9}, {
   3.487504370564623*^9, 3.487504389755292*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7G/ZHgu4f47xAFTA4bEUA39OAROUz+EgaPgl
/7gIM5Qv4GC+64zLq90wvogDx9MvAWdTWaB8CYfqv3JBmUKsUL6Mg2tZDPv2
gzC+gkN+cbD5+mI2KF/J4aP3/K1eGuxQvoqD076s9Kb7ML6ag3JUsLv/TA4o
X8Ph+s+lGatCOaF8LYdCeZZfPSJcUL6Ow4kdje4frsL4eg5ttl57zs7khvIN
HNbF3n4sl8AD5Rs67Jn+KOuuBi+Ub+SwTeKUPPMXGN/Y4Y8bw+fOg3xQvolD
YRDL9+yJ/FC+qUPuBIUNFw0FoHwzB7uKeCfROTC+ucOWnptva9kFoXwLBynL
qn8cJTC+pcMUFt0Lmx/C+FYOz/tbzlUHCEH51g6ng6JL4g7A+DYOv57le0ca
CkP5tg4r0/+9zlwM49s5fNdd8qdXTATKt3fY+LXC4HAXjO/gUP7T3pOdQRTC
b3Bw0J0kLBpRBuUzOALd15K3+S1M3tGBr9vERjxNDCrv5DB3QXlB430ov8HJ
oeb3R44PkeJQeWcHSzNbvsSrUH6Ds0PIlL7JlwIloPIuDiItCduczkP5DS4O
spLy89b7Sh4AAFkFsAs=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1yU9MEgAUx3GwItMMLCdstMrWGBpJSoKowU9kk1VzCVG09QdtcmmNg63M
Q+PULXNkh7S1VWtZHCxrHmoGa4mNmE3cwrGxopWxWQ0siaSyGr/e9vb2ed+K
Tre1q0AgEFT+3X83Pylj5ZS4V3hiysgHlkstzvSVAF2Is3fMKpd+kJagHO1l
m60P/XmXocrm+hSxBWkZvqmvX73omqY34kz5RPy8N0pvQdwZSxsfxemtSOxV
SfuSCXobrMoj3aOZ97QChyraTu0XJWkltMPh8VnZPF0FuSW8r0f9hVYh9dpf
6r2doqtRPJzsb9cu0Duhriv6sSf0la7BUGfry6cdi3Qtjh6rOfn2Z4bW4LRu
/PjsUJbehYOhJ5qgYYmuQ+7BBdGzDzlai3q9PRbv/0Xr8Gam2qfAMl2Psd9+
X+ScIJC3HtaBufsjdiHdAPlY4oVPU0A3omFgoWlywwq6CQr7pm5h5r93o1Xy
UX44tpI24F62zxEOrKKNyEZKoo67IhrwvhpM5S6vztsDdF3zPB71FLI3Y/v8
d2mvew17M8Shick2ZxG7CYtKnXuHrZjdhFRH+uZ6y1r2FjSO5D4vGUrYW/D8
xoHoO906djNMPY65YK2Y3YxLt2Qz01JJ4A+u0ccc
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7L/H6InkHDhuDxVwKFb8mbTK+xyUz+Hgnfe/
c1fgZShfwEH/2ctLk9NuQPkiDive5sm3ZN+D8iUcXgqcVtu2/RGUL+Nw9vur
u1ePPYPyFRwORuz7dKnqNZSv5BB59Frk39oPUL6Kw61PCkJiJz5D+WoOUmuu
b/h6+zuUr+Fw5ZevsIvdXyhfy2G3dsh+70VMDhC+jkNUa+iWppdcUL6ew+zV
7QwmC3igfAOHVfFLjb4aM0P5hg58K+SEPz+HmWfk0BVwdc4rtx9QvrHDnZ9H
fdr+w9xj4sDx5uSRSXD3mjo8mVb3ie3jKyjfzOG1Z+vFY31PoXxzh49Rwrbr
Fz6A8i0cRCbU/ZkoAAs/SwfGp8yaZ9fCwtvKYc2k/FlKV3dD+dYOmS7da7ec
mLQfwrdxeH9jy+dix0NQvq1DT9XS02xfL0D5dg5XtCdK/N98A8q3d3juc/b1
E6MHUL6Dg1HYJvY4jicQfoODg+gOieZHd55D5R0dJivrVMRveg2Vd3RIOGH5
M7TrPVTeyaHT/r75z00fofJODhue5UTyL/4MlXd2OJ9WL3hi6leovLMD95Gz
sZnd36HyLg5LMp891Wj5CZV3cbh1PDpXv+H3fgCSA9DP
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., -6.325865240715101},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0, 
       FormBox["1", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0, 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotLabel->FormBox[
   "\"Three Ablowitz\[Dash]Segur solutions\"", TraditionalForm],
  PlotRange->{{0., 41.}, {-6.325865240715101, 3.5782241860774326`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0, 
      FormBox["1", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.298317366548036, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.407945608651872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.9459101490553132`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.487501430281*^9, 3.487501520667204*^9}, 
   3.487501583465755*^9, {3.487501629866395*^9, 3.487501692028113*^9}, {
   3.487501745863258*^9, 3.487501755249935*^9}, 3.487501851947337*^9, {
   3.487501892316016*^9, 3.487501930056951*^9}, 3.48750814388229*^9, 
   3.487508405803546*^9, 3.494230366864003*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.487485968909573*^9, 3.487485972758148*^9}}],

Cell[TextData[{
 "A. S. Fokas, A. R. Its, A. A. Kapaev & V. Yu. Novokshenov (2006), ",
 StyleBox["Painlev\[EAcute] Transcendents: the Riemann\[Dash]Hilbert approach",
  FontSlant->"Italic"],
 ", AMS. \n\nS. Olver (2010), A general framework for solving \
Riemann\[Dash]Hilbert problems numerically, Report no. NA-10/5, Mathematical \
Institute, Oxford University.\n\nS. Olver (2009b), Numerical solution of \
Riemann\[Dash]Hilbert problems: Painlev\[EAcute] II, Report no. NA-09/9, \
Mathematical Institute, Oxford University.\n\nS. Olver (2009a), Computing the \
Hilbert transform and its inverse, to appear in Maths Comp."
}], "Text",
 CellChangeTimes->{{3.487485977735705*^9, 3.487486197720181*^9}, {
  3.487488567787958*^9, 3.487488593526691*^9}}]
}, Closed]]
},
WindowSize->{1060, 833},
WindowMargins->{{47, Automatic}, {Automatic, 5}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], CellDingbat -> None, FontSize -> 16, Background -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> True, 
    CellMargins -> {{27 + 3 6.5, Inherited}, {6, 20}}], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> True, 
    CellMargins -> {{27 + 4 6.5, Inherited}, {4, 15}}], 
   Cell[
    StyleData["Subsubsection"], CellDingbat -> "\[EmptySmallSquare]", 
    ShowGroupOpener -> True, 
    CellMargins -> {{27 + 5 6.5, Inherited}, {2, 10}}]}, Visible -> False, 
  FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 233, 5, 46, "Text"],
Cell[781, 27, 265, 6, 27, "Input"],
Cell[1049, 35, 108, 1, 46, "Text"],
Cell[1160, 38, 77, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[1262, 44, 170, 2, 51, "Section"],
Cell[CellGroupData[{
Cell[1457, 50, 110, 1, 33, "Subsection"],
Cell[1570, 53, 128, 1, 46, "Text"],
Cell[1701, 56, 464, 14, 27, "Input"],
Cell[2168, 72, 209, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[2402, 79, 121, 2, 27, "Input"],
Cell[2526, 83, 715, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3278, 98, 146, 3, 27, "Input"],
Cell[3427, 103, 660, 10, 27, "Output"]
}, Open  ]],
Cell[4102, 116, 282, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[4409, 125, 69, 1, 27, "Input"],
Cell[4481, 128, 1832, 34, 124, "Output"]
}, Open  ]],
Cell[6328, 165, 167, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[6520, 172, 313, 7, 27, "Input"],
Cell[6836, 181, 742, 11, 27, "Output"]
}, Open  ]],
Cell[7593, 195, 126, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[7744, 200, 638, 18, 49, "Input"],
Cell[8385, 220, 615, 9, 27, "Output"]
}, Open  ]],
Cell[9015, 232, 137, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[9177, 237, 459, 13, 27, "Input"],
Cell[9639, 252, 795, 15, 27, "Output"]
}, Open  ]],
Cell[10449, 270, 138, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[10612, 275, 324, 9, 27, "Input"],
Cell[10939, 286, 705, 14, 27, "Output"]
}, Open  ]],
Cell[11659, 303, 130, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[11814, 308, 335, 9, 27, "Input"],
Cell[12152, 319, 531, 8, 30, "Output"]
}, Open  ]],
Cell[12698, 330, 127, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[12850, 335, 387, 11, 27, "Input"],
Cell[13240, 348, 570, 10, 27, "Output"]
}, Open  ]],
Cell[13825, 361, 159, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[14009, 367, 153, 3, 27, "Input"],
Cell[14165, 372, 533, 9, 27, "Output"]
}, Open  ]],
Cell[14713, 384, 184, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[14922, 390, 541, 15, 47, "Input"],
Cell[15466, 407, 567, 9, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[16082, 422, 240, 5, 23, "Subsection"],
Cell[16325, 429, 215, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[16565, 437, 1001, 23, 27, "Input"],
Cell[17569, 462, 24292, 406, 130, "Output"]
}, Open  ]],
Cell[41876, 871, 402, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[42303, 882, 953, 24, 47, "Input"],
Cell[43259, 908, 786, 12, 30, "Output"]
}, Open  ]],
Cell[44060, 923, 325, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[44410, 933, 298, 9, 27, "Input"],
Cell[44711, 944, 49875, 833, 131, "Output"]
}, Open  ]],
Cell[94601, 1780, 266, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[94892, 1787, 128, 2, 27, "Input"],
Cell[95023, 1791, 25129, 420, 127, "Output"]
}, Open  ]],
Cell[120167, 2214, 323, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[120515, 2222, 1343, 33, 27, "Input"],
Cell[121861, 2257, 16625, 287, 132, "Output"]
}, Open  ]],
Cell[138501, 2547, 422, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[138948, 2559, 814, 22, 47, "Input"],
Cell[139765, 2583, 665, 11, 30, "Output"]
}, Open  ]],
Cell[140445, 2597, 501, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[140971, 2609, 349, 10, 27, "Input"],
Cell[141323, 2621, 32411, 564, 132, "Output"]
}, Open  ]],
Cell[173749, 3188, 462, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[174236, 3198, 240, 6, 27, "Input"],
Cell[174479, 3206, 740, 12, 30, "Output"]
}, Open  ]],
Cell[175234, 3221, 163, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[175422, 3228, 400, 13, 27, "Input"],
Cell[175825, 3243, 504, 9, 27, "Output"]
}, Open  ]],
Cell[176344, 3255, 224, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[176593, 3264, 391, 12, 27, "Input"],
Cell[176987, 3278, 539, 10, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[177575, 3294, 241, 5, 23, "Subsection"],
Cell[177819, 3301, 462, 8, 65, "Text"],
Cell[CellGroupData[{
Cell[178306, 3313, 799, 20, 46, "Input"],
Cell[179108, 3335, 15223, 257, 127, "Output"]
}, Open  ]],
Cell[194346, 3595, 350, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[194721, 3603, 934, 24, 47, "Input"],
Cell[195658, 3629, 782, 12, 30, "Output"]
}, Open  ]],
Cell[196455, 3644, 417, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[196897, 3653, 1162, 29, 46, "Input"],
Cell[198062, 3684, 8087, 149, 140, "Output"]
}, Open  ]],
Cell[206164, 3836, 465, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[206654, 3846, 808, 22, 47, "Input"],
Cell[207465, 3870, 581, 9, 30, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[208107, 3886, 108, 1, 35, "Section"],
Cell[208218, 3889, 183, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[208426, 3897, 163, 2, 33, "Subsection"],
Cell[208592, 3901, 2531, 80, 312, "Text"],
Cell[211126, 3983, 1123, 29, 58, "Input"],
Cell[212252, 4014, 174, 2, 46, "Text"],
Cell[212429, 4018, 2863, 101, 251, "Input"],
Cell[215295, 4121, 518, 10, 65, "Text"],
Cell[215816, 4133, 3439, 87, 103, "Input"],
Cell[219258, 4222, 175, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[219458, 4228, 308, 6, 27, "Input"],
Cell[219769, 4236, 1791, 32, 229, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221609, 4274, 189, 6, 33, "Subsection"],
Cell[221801, 4282, 176, 4, 46, "Text"],
Cell[221980, 4288, 421, 11, 58, "Input"],
Cell[222404, 4301, 424, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[222853, 4312, 1189, 38, 43, "Input"],
Cell[224045, 4352, 1054, 25, 33, "Output"]
}, Open  ]],
Cell[225114, 4380, 1487, 39, 134, "Text"],
Cell[CellGroupData[{
Cell[226626, 4423, 378, 9, 47, "Input"],
Cell[227007, 4434, 524, 9, 30, "Output"]
}, Open  ]],
Cell[227546, 4446, 339, 10, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227922, 4461, 205, 5, 33, "Subsection"],
Cell[228130, 4468, 559, 15, 65, "Text"],
Cell[228692, 4485, 838, 18, 43, "Input"],
Cell[229533, 4505, 362, 6, 46, "Text"],
Cell[229898, 4513, 712, 18, 43, "Input"],
Cell[230613, 4533, 193, 4, 46, "Text"],
Cell[230809, 4539, 1027, 24, 63, "Input"],
Cell[231839, 4565, 308, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[232172, 4574, 346, 10, 27, "Input"],
Cell[232521, 4586, 682, 16, 33, "Output"]
}, Open  ]],
Cell[233218, 4605, 341, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[233584, 4615, 939, 20, 27, "Input"],
Cell[234526, 4637, 2392, 45, 251, "Output"]
}, Open  ]],
Cell[236933, 4685, 292, 5, 46, "Text"],
Cell[237228, 4692, 534, 17, 43, "Input"],
Cell[CellGroupData[{
Cell[237787, 4713, 3849, 100, 133, "Input"],
Cell[241639, 4815, 25072, 473, 246, "Output"]
}, Open  ]],
Cell[266726, 5291, 187, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[266938, 5297, 1095, 26, 58, "Input"],
Cell[268036, 5325, 114052, 1859, 312, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[382137, 7190, 259, 5, 23, "Subsection"],
Cell[382399, 7197, 1249, 33, 143, "Text"],
Cell[383651, 7232, 5655, 179, 274, "Input"],
Cell[389309, 7413, 941, 13, 27, "Input"],
Cell[390253, 7428, 964, 21, 141, "Text"],
Cell[391220, 7451, 953, 28, 73, "Input"],
Cell[392176, 7481, 702, 16, 65, "Text"],
Cell[392881, 7499, 1047, 25, 43, "Input"],
Cell[393931, 7526, 234, 3, 46, "Text"],
Cell[394168, 7531, 1033, 24, 63, "Input"],
Cell[395204, 7557, 528, 9, 46, "Text"],
Cell[CellGroupData[{
Cell[395757, 7570, 1223, 24, 27, "Input"],
Cell[396983, 7596, 2670, 50, 259, "Output"]
}, Open  ]],
Cell[399668, 7649, 174, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[399867, 7657, 3187, 87, 103, "Input"],
Cell[403057, 7746, 21775, 412, 242, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[424893, 8165, 161, 4, 51, "Section"],
Cell[425057, 8171, 728, 11, 65, "Text"],
Cell[425788, 8184, 1175, 29, 58, "Input"],
Cell[426966, 8215, 7574, 246, 424, "Input"],
Cell[CellGroupData[{
Cell[434565, 8465, 360, 7, 27, "Input"],
Cell[434928, 8474, 1859, 33, 428, "Output"]
}, Open  ]],
Cell[436802, 8510, 309, 6, 65, "Text"],
Cell[437114, 8518, 1727, 47, 93, "Input"],
Cell[438844, 8567, 201, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[439070, 8575, 677, 16, 27, "Input"],
Cell[439750, 8593, 18757, 314, 250, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[458556, 8913, 146, 2, 35, "Section"],
Cell[458705, 8917, 1315, 33, 136, "Text"],
Cell[CellGroupData[{
Cell[460045, 8954, 113, 1, 33, "Subsection"],
Cell[460161, 8957, 545, 13, 65, "Text"],
Cell[460709, 8972, 3817, 87, 133, "Input"],
Cell[464529, 9061, 464, 8, 65, "Text"],
Cell[464996, 9071, 3484, 90, 156, "Input"],
Cell[468483, 9163, 203, 2, 46, "Text"],
Cell[468689, 9167, 15473, 424, 538, "Input"],
Cell[484165, 9593, 180, 5, 46, "Text"],
Cell[484348, 9600, 23474, 685, 774, "Input"],
Cell[507825, 10287, 454, 7, 65, "Text"],
Cell[508282, 10296, 12005, 326, 343, "Input"],
Cell[520290, 10624, 398, 6, 84, "Text"],
Cell[520691, 10632, 1296, 30, 58, "Input"],
Cell[521990, 10664, 155, 3, 46, "Text"],
Cell[522148, 10669, 11323, 312, 343, "Input"],
Cell[533474, 10983, 134, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[533633, 10988, 220, 5, 27, "Input"],
Cell[533856, 10995, 3331, 56, 473, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[537236, 11057, 113, 1, 22, "Subsection"],
Cell[537352, 11060, 201, 4, 46, "Text"],
Cell[537556, 11066, 527, 14, 43, "Input"],
Cell[538086, 11082, 198, 4, 46, "Text"],
Cell[538287, 11088, 1199, 30, 58, "Input"],
Cell[539489, 11120, 159, 3, 46, "Text"],
Cell[539651, 11125, 1994, 54, 73, "Input"],
Cell[541648, 11181, 133, 3, 46, "Text"],
Cell[541784, 11186, 508, 14, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[542329, 11205, 111, 1, 22, "Subsection"],
Cell[542443, 11208, 284, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[542752, 11217, 1132, 27, 58, "Input"],
Cell[543887, 11246, 2349, 37, 75, "Message"],
Cell[546239, 11285, 2351, 37, 75, "Message"],
Cell[548593, 11324, 2351, 37, 75, "Message"],
Cell[550947, 11363, 772, 13, 23, "Message"]
}, Open  ]],
Cell[551734, 11379, 112, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[551871, 11384, 539, 15, 27, "Input"],
Cell[552413, 11401, 24625, 411, 242, "Output"]
}, Open  ]],
Cell[577053, 11815, 325, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[577403, 11825, 1917, 52, 73, "Input"],
Cell[579323, 11879, 74480, 1270, 252, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[653864, 13156, 96, 1, 35, "Section"],
Cell[653963, 13159, 1247, 35, 136, "Text"],
Cell[CellGroupData[{
Cell[655235, 13198, 114, 1, 33, "Subsection"],
Cell[655352, 13201, 272, 7, 46, "Text"],
Cell[655627, 13210, 3683, 110, 200, "Input"],
Cell[659313, 13322, 307, 7, 46, "Text"],
Cell[659623, 13331, 1610, 48, 43, "Input"],
Cell[661236, 13381, 119, 1, 46, "Text"],
Cell[661358, 13384, 12496, 358, 716, "Input"],
Cell[673857, 13744, 253, 5, 46, "Text"],
Cell[674113, 13751, 5471, 147, 193, "Input"],
Cell[679587, 13900, 177, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[679789, 13906, 423, 11, 27, "Input"],
Cell[680215, 13919, 2062, 34, 466, "Output"]
}, Open  ]],
Cell[682292, 13956, 258, 5, 46, "Text"],
Cell[682553, 13963, 5840, 171, 208, "Input"],
Cell[688396, 14136, 138, 2, 46, "Text"],
Cell[688537, 14140, 9109, 284, 343, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[697683, 14429, 110, 1, 22, "Subsection"],
Cell[697796, 14432, 143, 2, 46, "Text"],
Cell[697942, 14436, 783, 19, 73, "Input"],
Cell[698728, 14457, 253, 5, 46, "Text"],
Cell[698984, 14464, 1380, 33, 58, "Input"],
Cell[700367, 14499, 756, 20, 65, "Text"],
Cell[701126, 14521, 1413, 41, 117, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[702576, 14567, 123, 1, 22, "Subsection"],
Cell[702702, 14570, 263, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[702990, 14579, 1599, 40, 148, "Input"],
Cell[704592, 14621, 78287, 1292, 317, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[782940, 15920, 178, 5, 35, "Section"],
Cell[783121, 15927, 872, 28, 71, "Text"],
Cell[783996, 15957, 3460, 114, 145, "Input"],
Cell[787459, 16073, 1765, 51, 152, "Text"],
Cell[789227, 16126, 4721, 133, 148, "Input"],
Cell[793951, 16261, 253, 5, 65, "Text"],
Cell[794207, 16268, 1625, 51, 106, "Input"],
Cell[795835, 16321, 119, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[795979, 16326, 163, 3, 27, "Input"],
Cell[796145, 16331, 1230, 24, 247, "Output"]
}, Open  ]],
Cell[797390, 16358, 1040, 19, 112, "Text"],
Cell[798433, 16379, 3300, 87, 207, "Input"],
Cell[801736, 16468, 118, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[801879, 16473, 231, 5, 27, "Input"],
Cell[802113, 16480, 8373, 136, 272, "Output"]
}, Open  ]],
Cell[810501, 16619, 447, 10, 65, "Text"],
Cell[810951, 16631, 3368, 99, 163, "Input"],
Cell[814322, 16732, 306, 5, 46, "Text"],
Cell[814631, 16739, 1719, 51, 88, "Input"],
Cell[816353, 16792, 574, 10, 84, "Text"],
Cell[816930, 16804, 380, 10, 27, "Input"],
Cell[CellGroupData[{
Cell[817335, 16818, 1582, 38, 88, "Input"],
Cell[818920, 16858, 20102, 390, 243, "Output"]
}, Open  ]],
Cell[839037, 17251, 315, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[839377, 17263, 2168, 51, 148, "Input"],
Cell[841548, 17316, 17211, 324, 254, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[858808, 17646, 95, 1, 35, "Section"],
Cell[858906, 17649, 751, 12, 179, "Text"]
}, Closed]]
}
]
*)

(* End of internal cache information *)
