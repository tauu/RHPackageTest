(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage[$CommonPackage];


SqrtBranch::usage="SqrtBranch[x,t] is a square root function with a branch cut along (0,\[Infinity] Exp[I t]).";
PowerBranch::usage="PowerBranch[x,y,t] is a function x^y with a branch cut along (0,\[Infinity] Exp[I t]).";
ArgBranch::usage="ArgBranch[x,t] is an argument function with a branch cut along (0,\[Infinity] Exp[I t]).";
LogBranch::usage="LogBranch[x,t] is a log function with a branch cut along (0,\[Infinity] Exp[I t]).";
PowerP::usage="PowerP[x,y,t] evaluates x^y with a branch cut along (\[Infinity] Exp[I t],0) for x on the branch cut from the left.";
PowerM::usage="PowerM[x,y,t] evaluates x^y with a branch cut along (\[Infinity] Exp[I t],0) for x on the branch cut from the right.";

Begin["Private`"];


ExpStep[t_]:=2/\[Pi] ArcTan[Tanh[t/2]]+1/2;
ExpStepIntegral[t_]:=t/2+(2 t ArcTan[Tanh[t/2]])/\[Pi]+(I (t (Log[1-I E^-t]-Log[1+I E^-t])+PolyLog[2,-I E^-t]-PolyLog[2,I E^-t]))/\[Pi];


FourierExpStep[t_]:=(1/2 (\[Pi]+4 ArcTan[Tanh[t/2]])-I Sech[t])/\[Pi];
FourierExpStepFourierIntegral[t_]:=-(1/2) I (\[Pi]+4 ArcTan[Tanh[t/2]])/\[Pi];


SqrtBranch[x_,t_]:=-I Exp[I t/2]Sqrt[-Exp[-I t]x];
LogBranch[x_,t_]:=I (t-\[Pi]) +Log[Exp[I (\[Pi]- t)] x];
ArgBranch[x_,t_]:=Arg[Exp[I  (\[Pi]-t)]x]+\[Pi]+t;
PowerBranch[x_,y_,t_]:=(Exp[I (-\[Pi]-t)] x)^y Exp[- y I (-\[Pi]- t)]
PowerP[x_,y_,t_]:=Abs[x]^y Exp[y I (2\[Pi]+t)];
PowerM[x_,y_,t_]:=Abs[x]^y Exp[y I t];


End[];
EndPackage[];
