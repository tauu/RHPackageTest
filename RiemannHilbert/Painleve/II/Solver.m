(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



PainleveII::usage="PainleveII[{s1,s2,s3},x]  computes Painleve II (hopefully) reliably for x in (-\[Infinity],5) to about 8 digits accuracy";
PainleveIID::usage="PainleveIID[{s1,s2,s3},x] computes the derivative of Painleve II (hopefully) reliably for x in (-5,5) to about 10 digits accuracy";
ClearPainleveDatabase::usage="ClearPainleveDatabase[] clears precomputed information."
Begin["`Private`"];


ClearPainleveDatabase[]:=Module[{},Clear[M]];


M[n_,k_]:=M[n,k]=CauchyMatrix[+1,ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I \[Pi]/6]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I((k-1) \[Pi]/3+ \[Pi]/6)]}],n]];


Mat[n_,{s1_,s2_,s3_},x_]:=Join[
RightJoin[IdentityMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]]-s1 (ZeroAtInfinityFun[Exp[8 I /3 #^3+2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I \[Pi]/6]}],n]//FiniteValues)RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],M[n,6],M[n,4],M[n,2]],
RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],IdentityMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]]-s2 (ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I \[Pi]/2]}],n]//FiniteValues)RightJoin[M[n,2],M[n,6],M[n,4],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]],
RightJoin[ZeroMatrix[n-1],IdentityMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]]-s3(ZeroAtInfinityFun[Exp[8 I /3 #^3+2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[5 I \[Pi]/6]}],n]//FiniteValues)RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],M[n,2],M[n,6],M[n,4]],
RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],IdentityMatrix[n-1],ZeroMatrix[n-1]]+s1 (ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-5I \[Pi]/6]}],n]//FiniteValues)RightJoin[M[n,4],M[n,2],M[n,6],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]],
RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],IdentityMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]]+s2 (ZeroAtInfinityFun[Exp[8 I /3 #^3+2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[- I \[Pi]/2]}],n]//FiniteValues)RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],M[n,4],M[n,2],M[n,6]],
RightJoin[ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1],IdentityMatrix[n-1]]+s3 (ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-I \[Pi]/6]}],n]//FiniteValues)RightJoin[M[n,6],M[n,4],M[n,2],ZeroMatrix[n-1],ZeroMatrix[n-1],ZeroMatrix[n-1]]
];


Vec[n_,{s1_,s2_,s3_},x_]:=Join[
ZeroVector[n-1],
s2 ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I \[Pi]/2]}],n]//FiniteValues,
ZeroVector[n-1],
-s1 ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-5 I \[Pi]/6]}],n]//FiniteValues,
ZeroVector[n-1],
-s3  ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-I \[Pi]/6]}],n]//FiniteValues
];


sol[n_,s_,x_]:=FromValueList[{ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I \[Pi]/6]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[5I \[Pi]/6]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[-I \[Pi]/2]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I \[Pi]/2]}],n],
ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[-5 I \[Pi]/6]}],n],
ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[-I \[Pi]/6]}],n]},
LinearSolve[Chop[Mat[n,s,x],$MachineEpsilon],Chop[Vec[n,s,x],$MachineEpsilon]]
]//{#[[;;3]],#[[4;;]]}&;


PainleveIISmall[n_,s_,x_]:=
Quiet[
-sol[n,s,x][[2]]/( \[Pi]\[NonBreakingSpace]I)//DomainIntegrate,
General::"unfl"]


VecD[n_,{s1_,s2_,s3_},x_]:=Module[{sl},
sl=MatrixMap[FiniteValues,sol[n,{s1,s2,s3},x]];
Join[
2 I s1 FiniteValues[ ZeroAtInfinityFun[# Exp[8 I /3 #^3+2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I \[Pi]/6]}],n]] (M[n,6].sl[[2,1]]+M[n,4].sl[[2,2]]+M[n,2].sl[[2,3]]),
-2 I s2 FiniteValues[ZeroAtInfinityFun[# Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I \[Pi]/2]}],n]] (1+M[n,2].sl[[1,1]]+M[n,6].sl[[1,2]]+M[n,4].sl[[1,3]]),
2 I s3 FiniteValues[ ZeroAtInfinityFun[# Exp[8 I /3 #^3+2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I 5 \[Pi]/6]}],n]] (M[n,2].sl[[2,1]]+M[n,6].sl[[2,2]]+M[n,4].sl[[2,3]]),
2 I s1 FiniteValues[ZeroAtInfinityFun[# Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-I 5 \[Pi]/6]}],n]] (1+M[n,4].sl[[1,1]]+M[n,2].sl[[1,2]]+M[n,6].sl[[1,3]]),
-2 I s2 FiniteValues[ ZeroAtInfinityFun[# Exp[8 I /3 #^3+2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-I  \[Pi]/2]}],n]] (M[n,4].sl[[2,1]]+M[n,2].sl[[2,2]]+M[n,6].sl[[2,3]]),
2 I s3 FiniteValues[ZeroAtInfinityFun[# Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[-I \[Pi]/6]}],n]] (1+M[n,6].sl[[1,1]]+M[n,4].sl[[1,2]]+M[n,2].sl[[1,3]])
]];


solD[n_,s_,x_]:=
FromValueList[{ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I \[Pi]/6]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[5I \[Pi]/6]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[-I \[Pi]/2]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I \[Pi]/2]}],n],
ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[-5 I \[Pi]/6]}],n],
ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[-I \[Pi]/6]}],n]},
LinearSolve[Chop[Mat[n,s,x],$MachineEpsilon],Chop[VecD[n,s,x],$MachineEpsilon]]
]//{#[[;;3]],#[[4;;]]}&;


PainleveIIDSmall[n_,s_,x_]:=Quiet[-solD[n,s,x][[2]]/( \[Pi]\[NonBreakingSpace]I)//DomainIntegrate,General::"unfl"];


ClearPainleveDatabase[]:=Module[{},Clear[M]; M[n_,k_]:=M[n,k]=CauchyMatrix[+1,ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I \[Pi]/6]}],n],ZeroAtInfinityFun[0&,Line[{0,\[Infinity] Exp[I((k-1) \[Pi]/3+ \[Pi]/6)]}],n]];
(* apply all registered clearing functions *)
#[] & /@ (DownValues[ClearDatabase]/.(t_:>_):>t//ReleaseHold);
];


PainleveII[sin_?((#[[1]] #[[3]])~NEqual~1&),x_?(NZeroQ[Im[#]]&&Re[#]<=-8.5&)]:=PainleveIINegative["HMNeg"][sin,x] ;
PainleveII[sin_?((#[[1]] #[[3]])~NEqual~1&),x_?(NZeroQ[Im[#]]&&Re[#]<=-2&)]:=PainleveIINegative["HMMed"][sin,x] ;

PainleveII[s_,x_?(NZeroQ[Im[#]]&&Re[#]<=-5&),opts:OptionsPattern[{InterpolationPrecision->10^-7,Contour->3}]]:=With[{c=OptionValue[Contour]},
With[{fopts =Sequence@@ If[List[opts]!= List[],FilterRules[opts//List,PainleveIINegative[c]//Options],{}]},PainleveIINegative[c][s,x,fopts] ]];

PainleveII[{s1_,_?NZeroQ,s3_},x_?(NZeroQ[Im[#]]&&Re[#]>=5&)]:=PainleveIIPositive["AS"][s1,x];

PainleveII[{s1_,s2_,s3_},x_?(NZeroQ[Im[#]]&&Re[#]>=9&)]:=PainleveIIPositive["Pos"][{s1,s2,s3},x];


PainleveII[s_,x_]:=PainleveIISmall[120,s,x];
PainleveII[s_,x_,opts:OptionsPattern[{InterpolationPrecision->10^-7}]]:=PainleveIISmall[Quiet[ZeroAtInfinityFun[Exp[-8 I /3 #^3-2 I x #]/.Underflow[]->0&,Line[{0,\[Infinity] Exp[I \[Pi]/2]}],opts]]//Length,s,x];
PainleveIID[{s1_,_?NZeroQ,s3_},x_?(NZeroQ[Im[#]]&&Re[#]>=5&)]:=PainleveIIPositiveD["AS"][s1,x];
PainleveIID[s_,x_]:=PainleveIIDSmall[120,s,x];
End[];
