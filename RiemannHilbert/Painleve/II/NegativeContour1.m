(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* PainleveIINegative[1] needs to be a symbol in order to assign options to it, therefore we have to introduce PainleveIINegativeContour1 *)
`Private`PainleveIINegative[1] =`NegativeContour1`PainleveIINegativeContour1;
`Private`ClearDatabase[Negative1]= `NegativeContour1`ClearDatabase;


Begin["`NegativeContour1`"]


\[Theta][\[Lambda]_]:=2/3 I  \[Lambda] (-3+4 \[Lambda]^2) ;


h//Clear;hm//Clear
h[_][_?NZeroQ]:=1/2.;
hm[_][_?NZeroQ]:=-1/2.;
h[k_][\[Infinity]]:=Exp[I (\[Pi]/3 k -\[Pi]/6)]\[Infinity];
hm[k_][\[Infinity]]:=Exp[I (\[Pi]/3 k -\[Pi]/6)]\[Infinity];h[1][r_]:=1/2-E^(-I ArcCos[1/(4 r)+(-36-144 r^2)/(144 r (-1+6 r^2+2 Sqrt[-6 r^2-3 r^4-16 r^6])^(1/3))-(-1+6 r^2+2 Sqrt[-6 r^2-3 r^4-16 r^6])^(1/3)/(4 r)]) r;
h[6][r_]:=h[1][-r];
h[5][r_]:=1/2+r Exp[I (-ArcCos[-(1/(4 r))+((1-I Sqrt[3]) (-36-144 r^2))/(288 r (-1+6 r^2+2 Sqrt[-6 r^2-3 r^4-16 r^6])^(1/3))-((1+I Sqrt[3]) (-1+6 r^2+2 Sqrt[-6 r^2-3 r^4-16 r^6])^(1/3))/(8 r)])];
h[2][r_]:=h[5][-r];
hm[2][r_]:=-h[5][r];
hm[3][r_]:=-h[6][r];
hm[4][r_]:=-h[1][r];
hm[5][r_]:=-h[2][r];


G[k_?EvenQ][s_,x_,z_]:=({
 {1, s[k]Exp[-(-x)^(3/2) \[Theta][z]]},
 {0, 1}
});
G[k_?OddQ][s_,x_,z_]:=({
 {1, 0},
 {s[k]Exp[(-x)^(3/2) \[Theta][z]], 1}
});
DD//Clear;GL[s_,x_,z_]:=({
 {1, 0},
 {s[1]/(1-s[1] s[3]) Exp[(-x)^(3/2) \[Theta][z]], 1}
});
GU[s_,x_,z_]:=({
 {1, s[1]/(1-s[1] s[3]) Exp[-(-x)^(3/2) \[Theta][z]]},
 {0, 1}
});
DD[s_]:=({
 {1-s[1] s[3], 0},
 {0, 1/(1-s[1]s[3])}
});


\[CapitalPhi][s_,z_]:=Parametrix[DD[s],Line[{-1/2,1/2}],z];
\[CapitalPhi]p[s_,z_]:=ParametrixBranch[DD[s],Line[{-1/2,1/2}],z,-2\[Pi]];
\[CapitalPhi]m[s_,z_]:=ParametrixBranch[DD[s],Line[{-1/2,1/2}],z,0];



rng//Clear;
rngb=Join[Range[1.,6]/4.,{\[Infinity]}];
rngbb[x_]:=rngb/(-x)^(3/4);
nr[x_]:=-Floor[-x/5.]5.;
rng[x_]:=rngbb[nr[x]];


GF[_][_,_,_?InfinityQ]:=IdentityMatrix[2];
GF[6][s_,x_,z_]:=\[CapitalPhi][s,z].G[6][s,x,z].Inverse[\[CapitalPhi][s,z]];
GF[1][s_,x_,z_]:=\[CapitalPhi][s,z].G[1][s,x,z].Inverse[\[CapitalPhi][s,z]];
GF[2][s_,x_,z_]:=\[CapitalPhi][s,z].G[2][s,x,z].Inverse[GU[s,x,z]].Inverse[\[CapitalPhi][s,z]];
GF[5][s_,x_,z_]:=\[CapitalPhi][s,z].Inverse[GL[s,x,z]].Inverse[\[CapitalPhi][s,z]];

GFC[1][s_,x_,z_]:=Inverse[GL[s,x,z]].G[6][s,x,z].G[1][s,x,z].Inverse[\[CapitalPhi][s,z]];
GFC[2][s_,x_,z_]:=Inverse[GL[s,x,z]].G[6][s,x,z].Inverse[\[CapitalPhi][s,z]];
GFC[3][s_,x_,z_]:=Inverse[GL[s,x,z]].Inverse[\[CapitalPhi][s,z]];
GFC[4][s_,x_,z_]:=Inverse[\[CapitalPhi]m[s,z]];


GGRkB[k_][s_,x_,tol_]:=IdentityAtInfinityFun[GF[k][s,x,#]&,Line[h[k]/@rng[x],Stretch->(-x)^(-3/4)],InterpolationPrecision->tol];
GGRk[k_][s_,x_,tol_]:=IdentityAtInfinityFun[GF[k][s,x,#]&,Line[h[k]/@rng[x],Stretch->(-x)^(-3/4)],Length/@GGRkB[k][2&,nr[x],tol]];

GGRCkB[1][s_,x_,tol_]:=Fun[GFC[1][s,x,#]&,Arc[1/2,rng[x][[1]],{Arg[h[2][rng[x][[1]]]-1/2],Arg[h[1][rng[x][[1]]]-1/2]}],InterpolationPrecision->tol];
GGRCkB[2][s_,x_,tol_]:=Fun[GFC[2][s,x,#]&,Arc[1/2,rng[x][[1]],{Arg[h[1][rng[x][[1]]]-1/2],Arg[h[6][rng[x][[1]]]-1/2]}],InterpolationPrecision->tol];
GGRCkB[3][s_,x_,tol_]:=Fun[GFC[3][s,x,#]&,Arc[1/2,rng[x][[1]],{Arg[h[6][rng[x][[1]]]-1/2],Arg[h[5][rng[x][[1]]]-1/2]}],InterpolationPrecision->tol];
GGRCkB[4][s_,x_,tol_]:=Fun[GFC[4][s,x,#]&,Arc[1/2,rng[x][[1]],{Arg[h[5][rng[x][[1]]]-1/2]+2 \[Pi],Arg[h[2][rng[x][[1]]]-1/2]}],InterpolationPrecision->tol];
GGRCk[k_][s_,x_,tol_]:=GGRCkB[k][2&,nr[x],tol]//Function[crv,Fun[GFC[k][s,x,#]&,crv//Domain,crv//Length]];


GGR[s_,x_,tol_]:=Join[GGRk[6][s,x,tol],GGRk[1][s,x,tol],GGRk[2][s,x,tol],GGRk[5][s,x,tol],Array[GGRCk[#][s,x,tol]&,4]]


GLF[_][_,_,_?InfinityQ]:=IdentityMatrix[2];
GLF[2][s_,x_,z_]:=\[CapitalPhi][s,z].GU[s,x,z].Inverse[\[CapitalPhi][s,z]];
GLF[3][s_,x_,z_]:=\[CapitalPhi][s,z].G[3][s,x,z].Inverse[\[CapitalPhi][s,z]];
GLF[4][s_,x_,z_]:=\[CapitalPhi][s,z].G[4][s,x,z].Inverse[\[CapitalPhi][s,z]];
GLF[5][s_,x_,z_]:=\[CapitalPhi][s,z].G[5][s,x,z].GL[s,x,z].Inverse[\[CapitalPhi][s,z]];

GLFC[1][s_,x_,z_]:=Inverse[\[CapitalPhi]m[s,z]];
GLFC[2][s_,x_,z_]:=DD[s].GU[s,x,z].Inverse[\[CapitalPhi][s,z]];
GLFC[3][s_,x_,z_]:=DD[s].GU[s,x,z].G[3][s,x,z].Inverse[\[CapitalPhi][s,z]];
GLFC[4][s_,x_,z_]:=DD[s].GU[s,x,z].G[3][s,x,z].G[4][s,x,z].Inverse[\[CapitalPhi][s,z]];


GGLkB[k_][s_,x_,tol_]:=IdentityAtInfinityFun[GLF[k][s,x,#]&,Line[hm[k]/@rng[x],Stretch->(-x)^(-3/4)],InterpolationPrecision->tol];
GGLk[k_][s_,x_,tol_]:=IdentityAtInfinityFun[GLF[k][s,x,#]&,Line[hm[k]/@rng[x],Stretch->(-x)^(-3/4)],Length/@GGLkB[k][2&,nr[x],tol]];

GGLCkB[1][s_,x_,tol_]:=Fun[GLFC[1][s,x,#]&,Arc[-1/2,rng[x][[1]],{Arg[hm[2][rng[x][[1]]]+1/2],Arg[hm[5][rng[x][[1]]]+1/2]}],InterpolationPrecision->tol];
GGLCkB[2][s_,x_,tol_]:=Fun[GLFC[2][s,x,#]&,Arc[-1/2,rng[x][[1]],{Arg[hm[3][rng[x][[1]]]+1/2],Arg[hm[2][rng[x][[1]]]+1/2]}],InterpolationPrecision->tol];
GGLCkB[3][s_,x_,tol_]:=Fun[GLFC[3][s,x,#]&,Arc[-1/2,rng[x][[1]],{Arg[hm[4][rng[x][[1]]]+1/2]+2 \[Pi],Arg[hm[3][rng[x][[1]]]+1/2]}],InterpolationPrecision->tol];
GGLCkB[4][s_,x_,tol_]:=Fun[GLFC[4][s,x,#]&,Arc[-1/2,rng[x][[1]],{Arg[hm[5][rng[x][[1]]]+1/2],Arg[hm[4][rng[x][[1]]]+1/2]}],InterpolationPrecision->tol];
GGLCk[k_][s_,x_,tol_]:=GGLCkB[k][2&,nr[x],tol]//Function[crv,Fun[GLFC[k][s,x,#]&,crv//Domain,crv//Length]];


GGL//Clear;GGL[s_,x_,tol_]:=Join[Sequence@@Table[GGLk[k][s,x,tol],{k,2,5}],Array[GGLCk[#][s,x,tol]&,4]]


GG//Clear;GG[s_,x_,tol_]:=Join[GGL[s,x,tol],GGR[s,x,tol]];


Rn//Clear;Rn[x_,tol_]:=Rn[x,tol]=GG[2&,x,tol]//RHSolverTop;


U[s_,x_,tol_]:=Rn[nr[x],tol][GG[s,x,tol]];



Options[PainleveIINegativeContour1] ={InterpolationPrecision->10^-7};
PainleveIINegativeContour1[sin_,x_,opts:OptionsPattern[]]:=Module[{s},
{s[1],s[2],s[3]}=sin[[;;3]]; 
{s[4],s[5],s[6]}=-{s[1],s[2],s[3]};

Quiet[-DomainIntegrate[U[s,x,OptionValue[InterpolationPrecision]]][[2]]/(\[Pi]\[NonBreakingSpace]I) Sqrt[-x],
General::"unfl"]
]


ClearDatabase[] :=Block[{}, Rn//Clear;Rn[x_,tol_]:=Rn[x,tol]=GG[2&,x,tol]//RHSolverTop;];


End[]
