(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["RiemannHilbert`",{"RiemannHilbert`Common`"}];


Begin["`Private`"];


Parametrix[DD_?DiagonalMatrixQ,Line[{-1/2,1/2}],z_]:=({
 {((1+2 z)/(2z -1))^(I/(2 \[Pi]) (Log[Abs[DD[[1,1]]]]+ I (Arg[DD[[1,1]]]))), 0},
 {0, ((1+2 z)/(2z -1))^(I/(2 \[Pi]) (Log[Abs[DD[[2,2]]]]+ I( Arg[DD[[2,2]]]//If[#>0,#-2 \[Pi],#]&)))}
});
ParametrixBranch[DD_?DiagonalMatrixQ,Line[{-1/2,1/2}],z_,t_]:=({
 {PowerBranch[(1+2 z)/(2z -1),I/(2 \[Pi]) Log[DD[[1,1]]],t], 0},
 {0, PowerBranch[(1+2 z)/(2z -1),I/(2 \[Pi]) (Log[Abs[DD[[2,2]]]]+ I( Arg[DD[[2,2]]]//If[#>0,#-2 \[Pi],#]&)),t]}
});

ParametrixBranch[({
 {0, 1},
 {-1, 0}
}),Line[{a_,b_}],z_,t_]:=Module[{\[Beta],p},
\[Beta][p_]:=PowerBranch[(p-b)/(p-a),1/4,t];
({
 {(\[Beta][z]+1/\[Beta][z])/2, (\[Beta][z]-1/\[Beta][z])/(2 I)},
 {-((\[Beta][z]-1/\[Beta][z])/(2I)), (\[Beta][z]+1/\[Beta][z])/2}
})];
Parametrix[({
 {0, 1},
 {-1, 0}
}),Line[{a_,b_}],z_,t_]:=Module[{\[Beta],p},
\[Beta][p_]:=((p-b)/(p-a))^(1/4);
({
 {(\[Beta][z]+1/\[Beta][z])/2, (\[Beta][z]-1/\[Beta][z])/(2 I)},
 {-((\[Beta][z]-1/\[Beta][z])/(2I)), (\[Beta][z]+1/\[Beta][z])/2}
})];

ParametrixBranch[({
 {0, I },
 {I , 0}
}),Line[{a_,b_}],z_,t_]:=Module[{\[Beta],p},
\[Beta][p_]:=PowerBranch[(p-b)/(p-a),1/4,t];
({
 {(\[Beta][z]+1/\[Beta][z])/2, (\[Beta][z]-1/\[Beta][z])/2 },
 {(\[Beta][z]-1/\[Beta][z])/2, (\[Beta][z]+1/\[Beta][z])/2}
})];
Parametrix[({
 {0,  I },
 {I , 0}
}),Line[{a_,b_}],z_]:=Module[{\[Beta],p},
\[Beta][p_]:=((p-b)/(p-a))^(1/4);
({
 {(\[Beta][z]+1/\[Beta][z])/2, (\[Beta][z]-1/\[Beta][z])/2 },
 {(\[Beta][z]-1/\[Beta][z])/2, (\[Beta][z]+1/\[Beta][z])/2}
})];

ParametrixBranch[({
 {0, -I },
 {-I , 0}
}),Line[{a_,b_}],z_,t_]:=Module[{\[Beta],p},
\[Beta][p_]:=PowerBranch[(p-b)/(p-a),1/4,t];
({
 {(\[Beta][z]+1/\[Beta][z])/2, -((\[Beta][z]-1/\[Beta][z])/2 )},
 {-((\[Beta][z]-1/\[Beta][z])/2), (\[Beta][z]+1/\[Beta][z])/2}
})];
Parametrix[({
 {0,  -I },
 {-I , 0}
}),Line[{a_,b_}],z_]:=Module[{\[Beta],p},
\[Beta][p_]:=((p-b)/(p-a))^(1/4);
({
 {(\[Beta][z]+1/\[Beta][z])/2, -((\[Beta][z]-1/\[Beta][z])/2 )},
 {-((\[Beta][z]-1/\[Beta][z])/2), (\[Beta][z]+1/\[Beta][z])/2}
})];


End[];
EndPackage[];
